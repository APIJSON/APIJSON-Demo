-- MySQL dump 10.13  Distrib 8.0.31, for macos12 (x86_64)
--
-- Host: 47.122.25.116    Database: sys
-- ------------------------------------------------------
-- Server version	5.7.43-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Random`
--

DROP TABLE IF EXISTS `Random`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `Random` (
  `id` bigint(15) NOT NULL AUTO_INCREMENT COMMENT '唯一标识',
  `toId` bigint(15) NOT NULL DEFAULT '0' COMMENT '父项 id',
  `from` tinyint(3) NOT NULL DEFAULT '0' COMMENT '来源：0-接口工具；1-CI/CD；2-流量录制',
  `userId` bigint(15) NOT NULL,
  `chainGroupId` bigint(20) NOT NULL DEFAULT '0',
  `chainId` bigint(20) NOT NULL DEFAULT '0',
  `documentId` bigint(15) NOT NULL COMMENT '测试用例 Document 的 id',
  `count` int(3) NOT NULL DEFAULT '1' COMMENT '请求次数，默认 1',
  `name` varchar(100) NOT NULL COMMENT '名称',
  `config` varchar(5000) NOT NULL COMMENT '配置',
  `date` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `index_date` (`date`),
  KEY `index_documentId` (`documentId`),
  KEY `index_toId` (`toId`),
  KEY `index_documentId_toId` (`documentId`,`toId`)
) ENGINE=InnoDB AUTO_INCREMENT=1705485879367 DEFAULT CHARSET=utf8 COMMENT='随机测试配置(必须)';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Random`
--

LOCK TABLES `Random` WRITE;
/*!40000 ALTER TABLE `Random` DISABLE KEYS */;
INSERT INTO `Random` VALUES (1592236063697,0,0,82001,0,0,1592232912349,20,'随机配置（模拟同步、异步、返回值等各种情况）','methodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null)  // 随机取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\nmethodArgs/2/value/id: RANDOM_INT(1, 100)  // 随机整数\nmethodArgs/2/value/sort()/callback: RANDOM_IN(true, false, null)  // 随机整数\nmethodArgs/2/value/sort()/return: ORDER_IN(true, false, null)  // 随机整数\nmethodArgs/2/value/setData(D)/callback: ORDER_IN(true, false, null)  // 顺序取值\n\n  // 清空文本内容可查看规则','2020-06-15 15:47:43'),(1592236120511,1592236063697,0,82001,0,0,1592232912349,1,'-10, -9, 60, false, false, false','methodArgs/0/value: -10 \nmethodArgs/1/value: -9 \nmethodArgs/2/value/id: 60 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:48:40'),(1592236129822,1592236063697,0,82001,0,0,1592232912349,1,'-10, -6, 93, null, false, false','methodArgs/0/value: -10 \nmethodArgs/1/value: -6 \nmethodArgs/2/value/id: 93 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:48:49'),(1592236131622,1592236063697,0,82001,0,0,1592232912349,1,'1, -5, 29, true, null, null','methodArgs/0/value: 1 \nmethodArgs/1/value: -5 \nmethodArgs/2/value/id: 29 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:48:51'),(1592236138019,1592236063697,0,82001,0,0,1592232912349,1,'-10, -1, 46, false, true, true','methodArgs/0/value: -10 \nmethodArgs/1/value: -1 \nmethodArgs/2/value/id: 46 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-06-15 15:48:58'),(1592236142525,1592236063697,0,82001,0,0,1592232912349,1,'-10, 2, 43, false, true, true','methodArgs/0/value: -10 \nmethodArgs/1/value: 2 \nmethodArgs/2/value/id: 43 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-06-15 15:49:02'),(1592236143975,1592236063697,0,82001,0,0,1592232912349,1,'-10, 3, 68, false, false, false','methodArgs/0/value: -10 \nmethodArgs/1/value: 3 \nmethodArgs/2/value/id: 68 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:49:03'),(1592236148039,1592236063697,0,82001,0,0,1592232912349,1,'-10, 6, 13, false, false, false','methodArgs/0/value: -10 \nmethodArgs/1/value: 6 \nmethodArgs/2/value/id: 13 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:49:08'),(1592236219210,1592236063697,0,82001,0,0,1592232912349,1,'-10, -10, 35, null, true, true','methodArgs/0/value: -10 \nmethodArgs/1/value: -10 \nmethodArgs/2/value/id: 35 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-06-15 15:50:19'),(1592236222611,1592236063697,0,82001,0,0,1592232912349,1,'0.1, -9, 37, false, false, false','methodArgs/0/value: 0.1 \nmethodArgs/1/value: -9 \nmethodArgs/2/value/id: 37 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:50:22'),(1592236224205,1592236063697,0,82001,0,0,1592232912349,1,'-10, -8, 58, false, null, null','methodArgs/0/value: -10 \nmethodArgs/1/value: -8 \nmethodArgs/2/value/id: 58 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:50:24'),(1592236225905,1592236063697,0,82001,0,0,1592232912349,1,'0.1, -7, 97, true, true, true','methodArgs/0/value: 0.1 \nmethodArgs/1/value: -7 \nmethodArgs/2/value/id: 97 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-06-15 15:50:25'),(1592236234662,1592236063697,0,82001,0,0,1592232912349,1,'1, -3, 24, null, false, false','methodArgs/0/value: 1 \nmethodArgs/1/value: -3 \nmethodArgs/2/value/id: 24 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:50:34'),(1592236238868,1592236063697,0,82001,0,0,1592232912349,1,'-10, 0, 87, false, false, false','methodArgs/0/value: -10 \nmethodArgs/1/value: 0 \nmethodArgs/2/value/id: 87 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:50:38'),(1592236241680,1592236063697,0,82001,0,0,1592232912349,1,'0.1, 1, 16, false, null, null','methodArgs/0/value: 0.1 \nmethodArgs/1/value: 1 \nmethodArgs/2/value/id: 16 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:50:41'),(1592236249655,1592236063697,0,82001,0,0,1592232912349,1,'0.1, -6, 94, true, false, false','methodArgs/0/value: 0.1 \nmethodArgs/1/value: -6 \nmethodArgs/2/value/id: 94 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:50:49'),(1592236300946,0,0,82001,0,0,1592232912349,10,'随机配置 2020-06-15 23:51','methodArgs/0/value: RANDOM_IN(1, 2, -3, 5, -10, 12, 50)  // 随机取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\nmethodArgs/2/value/id: RANDOM_INT(1, 100)  // 随机整数\nmethodArgs/2/value/sort()/callback: RANDOM_IN(true, false, null)  // 随机整数\nmethodArgs/2/value/sort()/return: ORDER_IN(true, false, null)  // 随机整数\nmethodArgs/2/value/setData(D)/callback: ORDER_IN(true, false, null)  // 顺序取值\n\n  // 清空文本内容可查看规则','2020-06-15 15:51:40'),(1592236325414,1592236300946,0,82001,0,0,1592232912349,1,'5, -9, 89, false, false, false','methodArgs/0/value: 5 \nmethodArgs/1/value: -9 \nmethodArgs/2/value/id: 89 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:52:05'),(1592236327093,1592236300946,0,82001,0,0,1592232912349,1,'12, -8, 57, false, null, null','methodArgs/0/value: 12 \nmethodArgs/1/value: -8 \nmethodArgs/2/value/id: 57 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:52:07'),(1592236329908,1592236300946,0,82001,0,0,1592232912349,1,'2, -7, 72, null, true, true','methodArgs/0/value: 2 \nmethodArgs/1/value: -7 \nmethodArgs/2/value/id: 72 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-06-15 15:52:09'),(1592236331278,1592236300946,0,82001,0,0,1592232912349,1,'12, -6, 37, true, false, false','methodArgs/0/value: 12 \nmethodArgs/1/value: -6 \nmethodArgs/2/value/id: 37 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:52:11'),(1592236332607,1592236300946,0,82001,0,0,1592232912349,1,'-3, -5, 56, null, null, null','methodArgs/0/value: -3 \nmethodArgs/1/value: -5 \nmethodArgs/2/value/id: 56 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:52:12'),(1592236337079,1592236300946,0,82001,0,0,1592232912349,1,'-3, -3, 29, false, false, false','methodArgs/0/value: -3 \nmethodArgs/1/value: -3 \nmethodArgs/2/value/id: 29 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-06-15 15:52:17'),(1592236338392,1592236300946,0,82001,0,0,1592232912349,1,'1, -2, 81, false, null, null','methodArgs/0/value: 1 \nmethodArgs/1/value: -2 \nmethodArgs/2/value/id: 81 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-06-15 15:52:18'),(1592236516817,0,0,82001,0,0,1592232544326,50,'随机配置 2020-06-15 23:55','methodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 2, -10, 9.99, null)  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数','2020-06-15 15:55:16'),(1592236538024,1592236516817,0,82001,0,0,1592232544326,1,'long, -10, long, -10','methodArgs/0/type: \"long\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: -10','2020-06-15 15:55:38'),(1592236540298,1592236516817,0,82001,0,0,1592232544326,1,'double, 1, double, -9','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -9','2020-06-15 15:55:40'),(1592236541830,1592236516817,0,82001,0,0,1592232544326,1,'Number, 2, Number, -8','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -8','2020-06-15 15:55:41'),(1592236545792,1592236516817,0,82001,0,0,1592232544326,1,'long, -10, long, -6','methodArgs/0/type: \"long\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: -6','2020-06-15 15:55:45'),(1592236547836,1592236516817,0,82001,0,0,1592232544326,1,'double, 2, double, -5','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -5','2020-06-15 15:55:47'),(1592236549171,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, -4','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -4','2020-06-15 15:55:49'),(1592236550384,1592236516817,0,82001,0,0,1592232544326,1,'int, 9.99, int, -3','methodArgs/0/type: \"int\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"int\" \nmethodArgs/1/value: -3','2020-06-15 15:55:50'),(1592236555400,1592236516817,0,82001,0,0,1592232544326,1,'double, -10, double, -1','methodArgs/0/type: \"double\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -1','2020-06-15 15:55:55'),(1592236558165,1592236516817,0,82001,0,0,1592232544326,1,'Number, 9.99, Number, 0','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 0','2020-06-15 15:55:58'),(1592236560482,1592236516817,0,82001,0,0,1592232544326,1,'long, null, long, 2','methodArgs/0/type: \"long\" \nmethodArgs/0/value: null \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 2','2020-06-15 15:56:00'),(1592236566594,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, 4','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 4','2020-06-15 15:56:06'),(1592236571068,1592236516817,0,82001,0,0,1592232544326,1,'double, 1, double, 7','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 7','2020-06-15 15:56:11'),(1592236573614,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, 8','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 8','2020-06-15 15:56:13'),(1592236575917,1592236516817,0,82001,0,0,1592232544326,1,'long, 2, long, 10','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 10','2020-06-15 15:56:15'),(1592236578178,1592236516817,0,82001,0,0,1592232544326,1,'double, -10, double, 11','methodArgs/0/type: \"double\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 11','2020-06-15 15:56:18'),(1592236579227,1592236516817,0,82001,0,0,1592232544326,1,'Number, 1, Number, 12','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 12','2020-06-15 15:56:19'),(1592236580951,1592236516817,0,82001,0,0,1592232544326,1,'int, -10, int, 13','methodArgs/0/type: \"int\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"int\" \nmethodArgs/1/value: 13','2020-06-15 15:56:20'),(1592236583191,1592236516817,0,82001,0,0,1592232544326,1,'long, 2, long, 14','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 14','2020-06-15 15:56:23'),(1592236587324,1592236516817,0,82001,0,0,1592232544326,1,'double, 2, double, 15','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 15','2020-06-15 15:56:27'),(1592236590200,1592236516817,0,82001,0,0,1592232544326,1,'Number, 2, Number, 16','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 16','2020-06-15 15:56:30'),(1592236594434,1592236516817,0,82001,0,0,1592232544326,1,'long, 1, long, 18','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 18','2020-06-15 15:56:34'),(1592236596915,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, 20','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 20','2020-06-15 15:56:36'),(1592236602791,1592236516817,0,82001,0,0,1592232544326,1,'double, 2, double, 23','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 23','2020-06-15 15:56:42'),(1592236604267,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, 24','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 24','2020-06-15 15:56:44'),(1592236607642,1592236516817,0,82001,0,0,1592232544326,1,'long, 1, long, 26','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 26','2020-06-15 15:56:47'),(1592236609138,1592236516817,0,82001,0,0,1592232544326,1,'double, -10, double, 27','methodArgs/0/type: \"double\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 27','2020-06-15 15:56:49'),(1592236611321,1592236516817,0,82001,0,0,1592232544326,1,'Number, -10, Number, 28','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 28','2020-06-15 15:56:51'),(1592236615311,1592236516817,0,82001,0,0,1592232544326,1,'long, -10, long, 30','methodArgs/0/type: \"long\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 30','2020-06-15 15:56:55'),(1592236620361,1592236516817,0,82001,0,0,1592232544326,1,'Number, 9.99, Number, 32','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 32','2020-06-15 15:57:00'),(1592236623833,1592236516817,0,82001,0,0,1592232544326,1,'long, 2, long, 34','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 34','2020-06-15 15:57:03'),(1592236627517,1592236516817,0,82001,0,0,1592232544326,1,'Number, 9.99, Number, 36','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: 36','2020-06-15 15:57:07'),(1592236631345,1592236516817,0,82001,0,0,1592232544326,1,'long, 2, long, 38','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: 38','2020-06-15 15:57:11'),(1592236633127,1592236516817,0,82001,0,0,1592232544326,1,'double, 2, double, 39','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: 39','2020-06-15 15:57:13'),(1592236688771,0,0,82001,0,0,1592232544326,10,'随机配置 2020-06-15 23:58','methodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 2, -10, 9.99, 0, null)  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数','2020-06-15 15:58:08'),(1592236698823,1592236688771,0,82001,0,0,1592232544326,1,'long, -10, long, -10','methodArgs/0/type: \"long\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: -10','2020-06-15 15:58:18'),(1592236700066,1592236688771,0,82001,0,0,1592232544326,1,'double, 0, double, -9','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 0 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -9','2020-06-15 15:58:20'),(1592236701104,1592236688771,0,82001,0,0,1592232544326,1,'Number, 1, Number, -8','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -8','2020-06-15 15:58:21'),(1592236702454,1592236688771,0,82001,0,0,1592232544326,1,'long, 9.99, long, -7','methodArgs/0/type: \"long\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: -7','2020-06-15 15:58:22'),(1592236705390,1592236688771,0,82001,0,0,1592232544326,1,'double, 0, double, -6','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 0 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -6','2020-06-15 15:58:25'),(1592236706512,1592236688771,0,82001,0,0,1592232544326,1,'Number, 9.99, Number, -5','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 9.99 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -5','2020-06-15 15:58:26'),(1592236709153,1592236688771,0,82001,0,0,1592232544326,1,'long, -10, long, -4','methodArgs/0/type: \"long\" \nmethodArgs/0/value: -10 \nmethodArgs/1/type: \"long\" \nmethodArgs/1/value: -4','2020-06-15 15:58:29'),(1592236711390,1592236688771,0,82001,0,0,1592232544326,1,'double, 2, double, -3','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 2 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -3','2020-06-15 15:58:31'),(1592236713133,1592236688771,0,82001,0,0,1592232544326,1,'Number, 1, Number, -2','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -2','2020-06-15 15:58:33'),(1592236731951,1592236516817,0,82001,0,0,1592232544326,1,'double, 1, double, -9','methodArgs/0/type: \"double\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"double\" \nmethodArgs/1/value: -9','2020-06-15 15:58:51'),(1592236733731,1592236516817,0,82001,0,0,1592232544326,1,'Number, 1, Number, -8','methodArgs/0/type: \"Number\" \nmethodArgs/0/value: 1 \nmethodArgs/1/type: \"Number\" \nmethodArgs/1/value: -8','2020-06-15 15:58:53'),(1594457036085,1592236300946,0,82001,0,0,1592232912349,1,'2, -9, 7, true, false, false','methodArgs/0/value: 2 \nmethodArgs/1/value: -9 \nmethodArgs/2/value/id: 7 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-07-11 08:43:56'),(1594457184597,1592236300946,0,82001,0,0,1592232912349,1,'5, -8, 72, true, null, null','methodArgs/0/value: 5 \nmethodArgs/1/value: -8 \nmethodArgs/2/value/id: 72 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-07-11 08:46:24'),(1594457295834,1592236063697,0,82001,0,0,1592232912349,1,'-10, -10, 83, false, true, true','methodArgs/0/value: -10 \nmethodArgs/1/value: -10 \nmethodArgs/2/value/id: 83 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-07-11 08:48:15'),(1594457297410,1592236063697,0,82001,0,0,1592232912349,1,'null, -9, 28, null, false, false','methodArgs/0/value: null \nmethodArgs/1/value: -9 \nmethodArgs/2/value/id: 28 \nmethodArgs/2/value/sort()/callback: null \nmethodArgs/2/value/sort()/return: false \nmethodArgs/2/value/setData(D)/callback: false','2020-07-11 08:48:17'),(1594457298916,1592236063697,0,82001,0,0,1592232912349,1,'-10, -8, 52, true, null, null','methodArgs/0/value: -10 \nmethodArgs/1/value: -8 \nmethodArgs/2/value/id: 52 \nmethodArgs/2/value/sort()/callback: true \nmethodArgs/2/value/sort()/return: null \nmethodArgs/2/value/setData(D)/callback: null','2020-07-11 08:48:18'),(1594470112124,1592236300946,0,82001,0,0,1592232912349,1,'12, -10, 42, false, true, true','methodArgs/0/value: 12 \nmethodArgs/1/value: -10 \nmethodArgs/2/value/id: 42 \nmethodArgs/2/value/sort()/callback: false \nmethodArgs/2/value/sort()/return: true \nmethodArgs/2/value/setData(D)/callback: true','2020-07-11 12:21:52'),(1595232174907,0,0,82001,0,0,1595230510865,1,'order1-5','methodArgs/1/value: ORDER_INT(1,5)','2020-07-20 08:02:54'),(1595232196860,1595232174907,0,82001,0,0,1595230510865,1,'1','methodArgs/1/value: 1','2020-07-20 08:03:16'),(1603015545325,0,0,82001,0,0,1603015545204,1,'默认配置(上传测试用例时自动生成)','static: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"long\",\"value\":75}], [{\"type\":\"apijson.demo.server.MathUtil$Callback\",\"value\":{\"minusAsId(long,long)\":{},\"currentTime()\":{\"type\":\"long\",\"return\":8},\"sort()\":{\"type\":\"Boolean\",\"return\":true},\"setA(L)\":{},\"setData(D)\":{\"callback\":true},\"getA()\":{\"type\":\"Object\"},\"getB()\":{\"type\":\"Object\"},\"setB(L)\":{},\"getData()\":{\"type\":\"Object\"},\"setId(L)\":{},\"append(L,L)\":{\"type\":\"String\",\"return\":\"Uex\"},\"getId()\":{\"type\":\"Object\"}}}], [{\"type\":\"long\",\"value\":87}], [{\"type\":\"long\",\"value\":75},{\"type\":\"long\",\"value\":87},{\"type\":\"apijson.demo.server.MathUtil$Callback\",\"value\":{\"minusAsId(long,long)\":{},\"currentTime()\":{\"type\":\"long\",\"return\":8},\"sort()\":{\"type\":\"Boolean\",\"return\":true},\"setA(L)\":{},\"setData(D)\":{\"callback\":true},\"getA()\":{\"type\":\"Object\"},\"getB()\":{\"type\":\"Object\"},\"setB(L)\":{},\"getData()\":{\"type\":\"Object\"},\"setId(L)\":{},\"append(L,L)\":{\"type\":\"String\",\"return\":\"Uex\"},\"getId()\":{\"type\":\"Object\"}}}])','2020-10-18 10:05:45'),(1603015723182,0,0,82001,0,0,1603015723077,10,'默认配置(上传测试用例时自动生成)','static: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"Number\",\"value\":5.9139310449596305}], [{\"type\":\"Number\",\"value\":17.409419140887884}], [{\"type\":\"Number\",\"value\":5.9139310449596305},{\"type\":\"Number\",\"value\":17.409419140887884}])','2020-10-18 10:08:43'),(1603817773749,0,0,82001,0,0,1603817773655,1,'默认配置(上传测试用例时自动生成)','static: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"unitauto.test.TestEnum\",\"value\":\"WOMAN\"}])','2020-10-27 16:56:13'),(1603817803298,0,0,82001,0,0,1603817803198,1,'默认配置(上传测试用例时自动生成)','static: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [\"unitauto.test.TestEnum:\"])','2020-10-27 16:56:43'),(1603817836597,0,0,82001,0,0,1603817836500,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"String\",\"value\":\"time\"}])','2020-10-27 16:57:16'),(1603817850929,0,0,82001,0,0,1603817850838,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"String\",\"value\":\"id\"}])','2020-10-27 16:57:30'),(1603817867454,0,0,82001,0,0,1603817867359,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"java.lang.annotation.Annotation\",\"value\":{\"required()\":true}}])','2020-10-27 16:57:47'),(1603817892989,0,0,82001,0,0,1603817892889,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"unitauto.test.TestAnnotation\",\"value\":{\"required()\":true}}])','2020-10-27 16:58:12'),(1603817910364,0,0,82001,0,0,1603817910196,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])','2020-10-27 16:58:30'),(1603817929802,0,0,82001,0,0,1603817929709,1,'默认配置(上传测试用例时自动生成)','constructor: ORDER_IN(undefined, null, \"\", \"getDefault\")\nmethodArgs: ORDER_IN(undefined, null, [])','2020-10-27 16:58:49'),(1603817963919,0,0,82001,0,0,1603817963818,1,'默认配置(上传测试用例时自动生成)','constructor: ORDER_IN(undefined, null, \"\", \"getInstance\")\nclassArgs: ORDER_IN(undefined, null, [], [\"boolean:false\"])\nmethodArgs: ORDER_IN(undefined, null, [], [\"get instance with args\"])','2020-10-27 16:59:23'),(1603817981918,0,0,82001,0,0,1603817981819,1,'默认配置(上传测试用例时自动生成)','constructor: ORDER_IN(undefined, null, \"\", \"getDefault\")\nmethodArgs: ORDER_IN(undefined, null, [])','2020-10-27 16:59:41'),(1603820036944,0,0,82001,0,0,1603820036845,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"String\",\"value\":\"id\"}])','2020-10-27 17:33:56'),(1603822242693,0,0,82001,0,0,1603822242584,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])\nthis/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestSingleton\")\nthis/value/name: ORDER_IN(undefined, null, \"\", \"Test\")','2020-10-27 18:10:42'),(1604152910319,0,0,82001,0,0,1604152910192,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"int:3\"])','2020-10-31 14:01:50'),(1634657525341,1603015723182,0,82001,0,0,1603015723077,1,'null, [..2..]','static: null\nmethodArgs: [{\"type\":\"Number\",\"value\":5.9139310449596305},{\"type\":\"Number\",\"value\":17.409419140887884}]','2021-10-19 15:32:05'),(1634657561273,1603015723182,0,82001,0,0,1603015723077,1,'true, [..1..]','static: true\nmethodArgs: [{\"type\":\"Number\",\"value\":5.9139310449596305}]','2021-10-19 15:32:41'),(1634657573715,1603015723182,0,82001,0,0,1603015723077,1,'false, []','static: false\nmethodArgs: []','2021-10-19 15:32:53'),(1634666028297,0,0,82001,0,0,1634666028167,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"List<Long>\",\"value\":[1,2]}])','2021-10-19 17:53:48'),(1634666674838,0,0,82001,0,0,1634666674736,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [3])','2021-10-19 18:04:34'),(1634666781106,0,0,82001,0,0,1634666781005,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"Long:1\"], [\"Long:2\"], [\"Long:1\",\"Long:2\"])','2021-10-19 18:06:21'),(1634676298966,0,0,82001,0,0,1634676298852,1,'默认配置(上传测试用例时自动生成)','reuse: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"List<unitauto.demo.domain.User>\",\"value\":[{\"id\":15,\"name\":\"Tommy\"},{\"id\":12,\"name\":\"Lemon\",\"contactIdList\":[1,3,6]}]}])','2021-10-19 20:44:58'),(1634676562870,0,0,82001,0,0,1634676562766,1,'默认配置(上传测试用例时自动生成)','reuse: ORDER_IN(undefined, null, false, true)\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"Set<unitauto.demo.domain.User>\",\"value\":[{\"id\":15,\"name\":\"Tommy\"},{\"id\":12,\"name\":\"Lemon\",\"contactIdList\":[1,3,6]}]}])','2021-10-19 20:49:22'),(1634721437110,0,0,82001,0,0,1634721436947,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"UnitAuto\"])','2021-10-20 09:17:17'),(1634721834242,0,0,82001,0,0,1634721834141,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"UnitAuto\"])','2021-10-20 09:23:54'),(1634721846949,0,0,82001,0,0,1634721846828,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])','2021-10-20 09:24:06'),(1634721932673,0,0,82001,0,0,1634721932541,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])','2021-10-20 09:25:32'),(1634722123602,0,0,82001,0,0,1634722123503,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"version\"], [\"int:1\"], [\"version\",\"int:1\"])','2021-10-20 09:28:43'),(1634722143959,0,0,82001,0,0,1634722143855,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"name\"], [\"UnitAuto\"], [\"name\",\"UnitAuto\"])','2021-10-20 09:29:03'),(1634722180645,0,0,82001,0,0,1634722180539,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"version\"], [\"int:0\"], [\"version\",\"int:0\"])','2021-10-20 09:29:40'),(1634722206568,0,0,82001,0,0,1634722206462,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"name\"], [\"String:null\"], [\"name\",\"String:null\"])','2021-10-20 09:30:06'),(1634722983505,0,0,82001,0,0,1634722983402,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"unitauto.demo\"], [\"int:0\"], [\"unitauto.demo\",\"int:0\"])','2021-10-20 09:43:03'),(1634723013648,0,0,82001,0,0,1634723013549,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])','2021-10-20 09:43:33'),(1634723173939,0,0,82001,0,0,1634723173836,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [])','2021-10-20 09:46:13'),(1635934829045,0,0,82001,0,0,1634724325010,1,'随机值','methodArgs/0/value: RANDOM_STR()\nmethodArgs/1/value: ORDER_IN(true,false)','2021-11-03 10:20:29'),(1645581382929,0,0,82001,0,0,1645522808022,1,'随机配置 2022-02-23 09:56','','2022-02-23 01:56:22'),(1649172731314,0,0,82001,0,0,1649136957131,1,'随机配置 2022-04-05 23:32','','2022-04-05 15:32:11'),(1649172748354,0,0,82001,0,0,1649136957131,1,'test','','2022-04-05 15:32:28'),(1649173009624,1649172748354,0,82001,0,0,1649136957131,1,'Temp 0','','2022-04-05 15:36:49'),(1649173010689,1649172748354,0,82001,0,0,1649136957131,1,'Temp 1','','2022-04-05 15:36:50'),(1649173011593,1649172748354,0,82001,0,0,1649136957131,1,'Temp 2','','2022-04-05 15:36:51'),(1649173012128,1649172748354,0,82001,0,0,1649136957131,1,'Temp 3','','2022-04-05 15:36:52'),(1649173013148,1649172748354,0,82001,0,0,1649136957131,1,'Temp 4','','2022-04-05 15:36:53'),(1649173013514,1649172748354,0,82001,0,0,1649136957131,1,'Temp 5','','2022-04-05 15:36:53'),(1649173014413,1649172748354,0,82001,0,0,1649136957131,1,'Temp 6','','2022-04-05 15:36:54'),(1649173014993,1649172748354,0,82001,0,0,1649136957131,1,'Temp 7','','2022-04-05 15:36:54'),(1649173250670,0,0,82001,0,0,1649136957131,1,'Temp1','methodArgs/0/value: RANDOM_IN(1,5)','2022-04-05 15:40:50'),(1649173670331,0,0,82001,0,0,1649136957131,1,'temp2','methodArgs/0/value: RANDOM_INT(1,10)\nmethodArgs/1/value: RANDOM_INT(1,10)','2022-04-05 15:47:50'),(1649173723791,0,0,82001,0,0,1649136957131,1,'随机配置 2022-04-05 23:48','methodArgs/0/value: 4\nmethodArgs/1/value: 10','2022-04-05 15:48:43'),(1649174035554,0,0,82001,0,0,1649136957131,1,'随机配置 2022-04-05 23:53','methodArgs/0/value: RANDOM_INT(1,10)\nmethodArgs/1/value: RANDOM_INT(1,10)','2022-04-05 15:53:55'),(1649174072393,1649173670331,0,82001,0,0,1649136957131,1,'2, 4','methodArgs/0/value: 2\nmethodArgs/1/value: 4','2022-04-05 15:54:32'),(1649174073248,1649173670331,0,82001,0,0,1649136957131,1,'8, 6','methodArgs/0/value: 8\nmethodArgs/1/value: 6','2022-04-05 15:54:33'),(1649174073645,1649173670331,0,82001,0,0,1649136957131,1,'6, 9','methodArgs/0/value: 6\nmethodArgs/1/value: 9','2022-04-05 15:54:33'),(1649174074384,1649173670331,0,82001,0,0,1649136957131,1,'1, 8','methodArgs/0/value: 1\nmethodArgs/1/value: 8','2022-04-05 15:54:34'),(1649174075037,1649173670331,0,82001,0,0,1649136957131,1,'5, 8','methodArgs/0/value: 5\nmethodArgs/1/value: 8','2022-04-05 15:54:35'),(1649174076414,1649173670331,0,82001,0,0,1649136957131,1,'6, 7','methodArgs/0/value: 6\nmethodArgs/1/value: 7','2022-04-05 15:54:36'),(1649174077629,1649173670331,0,82001,0,0,1649136957131,1,'3, 3','methodArgs/0/value: 3\nmethodArgs/1/value: 3','2022-04-05 15:54:37'),(1649174078102,1649173670331,0,82001,0,0,1649136957131,1,'8, 6','methodArgs/0/value: 8\nmethodArgs/1/value: 6','2022-04-05 15:54:38'),(1649174078649,1649173670331,0,82001,0,0,1649136957131,1,'3, 5','methodArgs/0/value: 3\nmethodArgs/1/value: 5','2022-04-05 15:54:38'),(1649174080134,1649173670331,0,82001,0,0,1649136957131,1,'5, 10','methodArgs/0/value: 5\nmethodArgs/1/value: 10','2022-04-05 15:54:40'),(1649174099469,1649173670331,0,82001,0,0,1649136957131,1,'3, 2','methodArgs/0/value: 3\nmethodArgs/1/value: 2','2022-04-05 15:54:59'),(1649174105749,1649173670331,0,82001,0,0,1649136957131,1,'2, 2','methodArgs/0/value: 2\nmethodArgs/1/value: 2','2022-04-05 15:55:05'),(1649174105855,1649173670331,0,82001,0,0,1649136957131,1,'7, 6','methodArgs/0/value: 7\nmethodArgs/1/value: 6','2022-04-05 15:55:05'),(1649174106128,1649173670331,0,82001,0,0,1649136957131,1,'4, 7','methodArgs/0/value: 4\nmethodArgs/1/value: 7','2022-04-05 15:55:06'),(1649174106888,1649173670331,0,82001,0,0,1649136957131,1,'6, 5','methodArgs/0/value: 6\nmethodArgs/1/value: 5','2022-04-05 15:55:06'),(1649174107134,1649173670331,0,82001,0,0,1649136957131,1,'2, 8','methodArgs/0/value: 2\nmethodArgs/1/value: 8','2022-04-05 15:55:07'),(1649174108169,1649173670331,0,82001,0,0,1649136957131,1,'2, 8','methodArgs/0/value: 2\nmethodArgs/1/value: 8','2022-04-05 15:55:08'),(1649174108469,1649173670331,0,82001,0,0,1649136957131,1,'4, 4','methodArgs/0/value: 4\nmethodArgs/1/value: 4','2022-04-05 15:55:08'),(1649174108613,1649173670331,0,82001,0,0,1649136957131,1,'3, 6','methodArgs/0/value: 3\nmethodArgs/1/value: 6','2022-04-05 15:55:08'),(1649174110783,1649173670331,0,82001,0,0,1649136957131,1,'7, 6','methodArgs/0/value: 7\nmethodArgs/1/value: 6','2022-04-05 15:55:10'),(1649174153266,0,0,82001,0,0,1649136957131,1,'随机配置 2022-04-05 23:55','methodArgs/0/value: 3\nmethodArgs/1/value: 2','2022-04-05 15:55:53'),(1649185881897,0,0,82001,0,0,1649185881700,1,'默认配置(上传测试用例时自动生成)','constructor: ORDER_IN(undefined, null, \"\", \"getInstance\")\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"Map<String, String>\",\"value\":{\"order_id\":\"123\",\"price\":\"12.5\"}}])\nresponse(Map<String, java.lang.Object>)/callback: ORDER_IN(undefined, null, false, true)','2022-04-05 19:11:21'),(1649207562414,0,0,82001,0,0,1649136956766,10,'day01','methodArgs/0/value: RANDOM_NUM(1,10)\nmethodArgs/1/value: RANDOM_NUM(1,10)','2022-04-06 01:12:42'),(1649207607105,1649207562414,0,82001,0,0,1649136956766,1,'3.26, 3.76','methodArgs/0/value: 3.26\nmethodArgs/1/value: 3.76','2022-04-06 01:13:27'),(1649207607609,1649207562414,0,82001,0,0,1649136956766,1,'7.72, 1.79','methodArgs/0/value: 7.72\nmethodArgs/1/value: 1.79','2022-04-06 01:13:27'),(1649207608632,1649207562414,0,82001,0,0,1649136956766,1,'4.33, 5.44','methodArgs/0/value: 4.33\nmethodArgs/1/value: 5.44','2022-04-06 01:13:28'),(1649207609040,1649207562414,0,82001,0,0,1649136956766,1,'2.31, 6.97','methodArgs/0/value: 2.31\nmethodArgs/1/value: 6.97','2022-04-06 01:13:29'),(1649207609776,1649207562414,0,82001,0,0,1649136956766,1,'3.31, 5.31','methodArgs/0/value: 3.31\nmethodArgs/1/value: 5.31','2022-04-06 01:13:29'),(1649207610184,1649207562414,0,82001,0,0,1649136956766,1,'1.04, 4.01','methodArgs/0/value: 1.04\nmethodArgs/1/value: 4.01','2022-04-06 01:13:30'),(1649207611369,1649207562414,0,82001,0,0,1649136956766,1,'7.37, 3.04','methodArgs/0/value: 7.37\nmethodArgs/1/value: 3.04','2022-04-06 01:13:31'),(1649207611761,1649207562414,0,82001,0,0,1649136956766,1,'8.94, 5.24','methodArgs/0/value: 8.94\nmethodArgs/1/value: 5.24','2022-04-06 01:13:31'),(1649207612161,1649207562414,0,82001,0,0,1649136956766,1,'9.72, 3.27','methodArgs/0/value: 9.72\nmethodArgs/1/value: 3.27','2022-04-06 01:13:32'),(1649207638216,1649207562414,0,82001,0,0,1649136956766,1,'3.76, 2.69','methodArgs/0/value: 3.76\nmethodArgs/1/value: 2.69','2022-04-06 01:13:58'),(1649749770903,0,0,82001,0,0,1649749770818,1,'默认配置(上传测试用例时自动生成)','constructor: ORDER_IN(undefined, null, \"\", \"getInstance\")\nmethodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"Map<String, String>\",\"value\":{\"host\":\"http://apijson.cn\",\"port\":\"8080\"}}], [{\"global\":true,\"type\":\"unitauto.test.TestSDK$Callback\",\"value\":{\"response(Map<String, java.lang.Object>)\":{\"callback\":true}}}], [{\"type\":\"Map<String, String>\",\"value\":{\"host\":\"http://apijson.cn\",\"port\":\"8080\"}},{\"global\":true,\"type\":\"unitauto.test.TestSDK$Callback\",\"value\":{\"response(Map<String, java.lang.Object>)\":{\"callback\":true}}}])','2022-04-12 07:49:30'),(1652249559702,0,0,82001,0,0,1649136956654,1,'随机配置 2022-05-11 14:12','','2022-05-11 06:12:39'),(1657016943691,1603015723182,0,82001,0,0,1603015723077,1,'null, [..2..]','static: null\nmethodArgs: [{\"type\":\"Number\",\"value\":5.9139310449596305},{\"type\":\"Number\",\"value\":17.409419140887884}]','2022-07-05 10:29:03'),(1657016954782,1603015723182,0,82001,0,0,1603015723077,1,'null, [..2..]','static: null\nmethodArgs: [{\"type\":\"Number\",\"value\":5.9139310449596305},{\"type\":\"Number\",\"value\":17.409419140887884}]','2022-07-05 10:29:14'),(1657045372256,0,0,82001,0,0,1657045372046,3,'id: ORDER_IN(undefined, null, 82001)','User/id: ORDER_IN(undefined, null, 82001)\n  // 可替代上面的 User/id: RANDOM_INT(1, 820010)','2022-07-05 18:22:52'),(1657117214268,0,0,82001,0,0,1657045372046,3,'随机配置 2022-07-06 22:20','User/id: ORDER_IN(undefined, null, 82001)\n  // 可替代上面的 User/id: RANDOM_INT(1, 820010)','2022-07-06 14:20:14'),(1657811332723,0,0,88888,0,0,1657811332517,1,'默认配置','User/id: RANDOM_INT(82001, 82020)  // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {})  // 随机取值\n[]/page: Math.round(5*Math.random())  // 通过代码来自定义\n@explain: ORDER_IN(true, false)  // 顺序取值\n  // 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n  // 注释可省略，但如果未省略则前面两个空格必须；清空文本内容可查看规则。\n\n  // ## 快捷键\n  // Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n  // Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n                        ','2022-07-14 15:08:52'),(1660718942085,0,0,82001,0,0,1546414192830,1,'随机配置 2022-08-17 14:48','','2022-08-17 06:49:02'),(1662114151774,0,0,1662112443331,0,0,1662114150688,1,'默认配置(上传测试用例时自动生成)','User/id: ORDER_IN(undefined, null, 82001)\n  // 可替代上面的 User/id: RANDOM_INT(1, 820010)','2022-09-02 10:22:31'),(1662568938554,0,0,82001,0,0,1662568938435,10,'默认配置','searchKey: \'%a%\'  // 固定常量值\nuserId: RANDOM_IN(82001, 82002, 82003)  // 随机选项取值\nlimit: ORDER_IN(1, 3, 5, 10)  // 顺序选项取值\noffset: RANDOM_INT(0, 5)  // 随机范围取值\n  // 从数据库随机取值  userId: RANDOM_DB(\'Comment\', \'userId\')\n\n  // 注释可省略，但如果未省略则前面两个空格必须；清空文本内容可查看规则。\n\n  // ## 快捷键\n  // Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n  // Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n                        ','2022-09-07 16:42:18'),(1662568964238,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82003, 3, 5','searchKey: \"%a%\"\nuserId: 82003\nlimit: 3\noffset: 5','2022-09-07 16:42:44'),(1662568964603,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 1, 4','searchKey: \"%a%\"\nuserId: 82002\nlimit: 1\noffset: 4','2022-09-07 16:42:44'),(1662568964909,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82003, 5, 2','searchKey: \"%a%\"\nuserId: 82003\nlimit: 5\noffset: 2','2022-09-07 16:42:44'),(1662568966295,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 1, 4','searchKey: \"%a%\"\nuserId: 82002\nlimit: 1\noffset: 4','2022-09-07 16:42:46'),(1662568966730,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 10, 5','searchKey: \"%a%\"\nuserId: 82002\nlimit: 10\noffset: 5','2022-09-07 16:42:46'),(1662568967663,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 3, 3','searchKey: \"%a%\"\nuserId: 82002\nlimit: 3\noffset: 3','2022-09-07 16:42:47'),(1662568967916,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 5, 2','searchKey: \"%a%\"\nuserId: 82002\nlimit: 5\noffset: 2','2022-09-07 16:42:47'),(1662568968142,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 10, 5','searchKey: \"%a%\"\nuserId: 82002\nlimit: 10\noffset: 5','2022-09-07 16:42:48'),(1662568969043,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 3, 4','searchKey: \"%a%\"\nuserId: 82002\nlimit: 3\noffset: 4','2022-09-07 16:42:49'),(1662568969328,1662568938554,0,82001,0,0,1662568938435,1,'%a%, 82002, 1, 0','searchKey: \"%a%\"\nuserId: 82002\nlimit: 1\noffset: 0','2022-09-07 16:42:49'),(1662569422158,0,0,82001,0,0,1662569033547,30,'ORDER_IN, RANDOM_INT','key: ORDER_IN(\'s\', \'q\', \'l\')  // 顺序选项取值\nlimit: RANDOM_INT(1, 10)  // 随机范围取值','2022-09-07 16:50:22'),(1662569443041,1662569422158,0,82001,0,0,1662569033547,1,'s, 2','key: \"s\"\nlimit: 2','2022-09-07 16:50:43'),(1662569444062,1662569422158,0,82001,0,0,1662569033547,1,'q, 6','key: \"q\"\nlimit: 6','2022-09-07 16:50:44'),(1662569445565,1662569422158,0,82001,0,0,1662569033547,1,'l, 1','key: \"l\"\nlimit: 1','2022-09-07 16:50:45'),(1662569447021,1662569422158,0,82001,0,0,1662569033547,1,'q, 8','key: \"q\"\nlimit: 8','2022-09-07 16:50:47'),(1662569447529,1662569422158,0,82001,0,0,1662569033547,1,'s, 10','key: \"s\"\nlimit: 10','2022-09-07 16:50:47'),(1662569448710,1662569422158,0,82001,0,0,1662569033547,1,'q, 7','key: \"q\"\nlimit: 7','2022-09-07 16:50:48'),(1662569449008,1662569422158,0,82001,0,0,1662569033547,1,'s, 10','key: \"s\"\nlimit: 10','2022-09-07 16:50:49'),(1662569449431,1662569422158,0,82001,0,0,1662569033547,1,'l, 2','key: \"l\"\nlimit: 2','2022-09-07 16:50:49'),(1662569450573,1662569422158,0,82001,0,0,1662569033547,1,'s, 6','key: \"s\"\nlimit: 6','2022-09-07 16:50:50'),(1662569450856,1662569422158,0,82001,0,0,1662569033547,1,'l, 3','key: \"l\"\nlimit: 3','2022-09-07 16:50:50'),(1662569451661,1662569422158,0,82001,0,0,1662569033547,1,'l, 3','key: \"l\"\nlimit: 3','2022-09-07 16:50:51'),(1662569451962,1662569422158,0,82001,0,0,1662569033547,1,'q, 3','key: \"q\"\nlimit: 3','2022-09-07 16:50:51'),(1662569452915,1662569422158,0,82001,0,0,1662569033547,1,'l, 7','key: \"l\"\nlimit: 7','2022-09-07 16:50:52'),(1662569453158,1662569422158,0,82001,0,0,1662569033547,1,'q, 3','key: \"q\"\nlimit: 3','2022-09-07 16:50:53'),(1662569453524,1662569422158,0,82001,0,0,1662569033547,1,'s, 2','key: \"s\"\nlimit: 2','2022-09-07 16:50:53'),(1662569453898,1662569422158,0,82001,0,0,1662569033547,1,'l, 4','key: \"l\"\nlimit: 4','2022-09-07 16:50:53'),(1662569458240,1662569422158,0,82001,0,0,1662569033547,1,'l, 1','key: \"l\"\nlimit: 1','2022-09-07 16:50:58'),(1662569464926,1662569422158,0,82001,0,0,1662569033547,1,'q, 8','key: \"q\"\nlimit: 8','2022-09-07 16:51:04'),(1662569465979,1662569422158,0,82001,0,0,1662569033547,1,'s, 3','key: \"s\"\nlimit: 3','2022-09-07 16:51:05'),(1662569467051,1662569422158,0,82001,0,0,1662569033547,1,'l, 6','key: \"l\"\nlimit: 6','2022-09-07 16:51:07'),(1662569467511,1662569422158,0,82001,0,0,1662569033547,1,'q, 3','key: \"q\"\nlimit: 3','2022-09-07 16:51:07'),(1662569477799,1662569422158,0,82001,0,0,1662569033547,1,'l, 8','key: \"l\"\nlimit: 8','2022-09-07 16:51:17'),(1662569776431,1662569422158,0,82001,0,0,1662569033547,1,'s, 6','key: \"s\"\nlimit: 6','2022-09-07 16:56:16'),(1662569791332,1662569422158,0,82001,0,0,1662569033547,1,'s, 9','key: \"s\"\nlimit: 9','2022-09-07 16:56:31'),(1662569791645,1662569422158,0,82001,0,0,1662569033547,1,'l, 5','key: \"l\"\nlimit: 5','2022-09-07 16:56:31'),(1662569792662,1662569422158,0,82001,0,0,1662569033547,1,'s, 8','key: \"s\"\nlimit: 8','2022-09-07 16:56:32'),(1662569792927,1662569422158,0,82001,0,0,1662569033547,1,'q, 8','key: \"q\"\nlimit: 8','2022-09-07 16:56:32'),(1662603588008,0,0,82001,0,0,1662603529187,24,'随机配置 2022-09-08 10:19','searchKey1: \'an\'  // 固定常量值\nsearchKey2: \'an\'  // 固定常量值\nsearchKey3: \'an\'  // 固定常量值\noffset: RANDOM_INT(0, 5)  // 随机范围取值\nlimit: ORDER_IN(1, 3, 5, 10)  // 顺序选项取值                    ','2022-09-08 02:19:48'),(1662603872492,0,0,82001,0,0,1662603872425,20,'默认配置','minToId: ORDER_IN(0, 1, 3, 5)  // 顺序选项取值\nmaxAvgId: RANDOM_INT(1000, 100000)  // 随机范围取值\n                        ','2022-09-08 02:24:32'),(1662603893076,1662603872492,0,82001,0,0,1662603872425,1,'0, 56784','minToId: 0\nmaxAvgId: 56784','2022-09-08 02:24:53'),(1662603893539,1662603872492,0,82001,0,0,1662603872425,1,'1, 37559','minToId: 1\nmaxAvgId: 37559','2022-09-08 02:24:53'),(1662603893861,1662603872492,0,82001,0,0,1662603872425,1,'3, 82504','minToId: 3\nmaxAvgId: 82504','2022-09-08 02:24:53'),(1662603894324,1662603872492,0,82001,0,0,1662603872425,1,'5, 17016','minToId: 5\nmaxAvgId: 17016','2022-09-08 02:24:54'),(1662603894668,1662603872492,0,82001,0,0,1662603872425,1,'0, 86991','minToId: 0\nmaxAvgId: 86991','2022-09-08 02:24:54'),(1662603895639,1662603872492,0,82001,0,0,1662603872425,1,'0, 72789','minToId: 0\nmaxAvgId: 72789','2022-09-08 02:24:55'),(1662603895877,1662603872492,0,82001,0,0,1662603872425,1,'5, 3122','minToId: 5\nmaxAvgId: 3122','2022-09-08 02:24:55'),(1662603896554,1662603872492,0,82001,0,0,1662603872425,1,'3, 61029','minToId: 3\nmaxAvgId: 61029','2022-09-08 02:24:56'),(1662603897416,1662603872492,0,82001,0,0,1662603872425,1,'1, 98272','minToId: 1\nmaxAvgId: 98272','2022-09-08 02:24:57'),(1662603898027,1662603872492,0,82001,0,0,1662603872425,1,'0, 41767','minToId: 0\nmaxAvgId: 41767','2022-09-08 02:24:58'),(1662603898591,1662603872492,0,82001,0,0,1662603872425,1,'5, 78787','minToId: 5\nmaxAvgId: 78787','2022-09-08 02:24:58'),(1662603899616,1662603872492,0,82001,0,0,1662603872425,1,'3, 38492','minToId: 3\nmaxAvgId: 38492','2022-09-08 02:24:59'),(1662603899970,1662603872492,0,82001,0,0,1662603872425,1,'1, 43049','minToId: 1\nmaxAvgId: 43049','2022-09-08 02:24:59'),(1662603900399,1662603872492,0,82001,0,0,1662603872425,1,'5, 48646','minToId: 5\nmaxAvgId: 48646','2022-09-08 02:25:00'),(1662603901295,1662603872492,0,82001,0,0,1662603872425,1,'1, 99621','minToId: 1\nmaxAvgId: 99621','2022-09-08 02:25:01'),(1662603901698,1662603872492,0,82001,0,0,1662603872425,1,'3, 22039','minToId: 3\nmaxAvgId: 22039','2022-09-08 02:25:01'),(1662603902522,1662603872492,0,82001,0,0,1662603872425,1,'0, 25691','minToId: 0\nmaxAvgId: 25691','2022-09-08 02:25:02'),(1662603902779,1662603872492,0,82001,0,0,1662603872425,1,'5, 85496','minToId: 5\nmaxAvgId: 85496','2022-09-08 02:25:02'),(1662603903910,1662603872492,0,82001,0,0,1662603872425,1,'3, 53684','minToId: 3\nmaxAvgId: 53684','2022-09-08 02:25:03'),(1662603904614,1662603872492,0,82001,0,0,1662603872425,1,'1, 52879','minToId: 1\nmaxAvgId: 52879','2022-09-08 02:25:04'),(1662604351860,0,0,82001,0,0,1662604351793,60,'默认配置','key1: ORDER_IN(\'tom*\', \'api*\', \'test*\')\nkey2: ORDER_IN(\'tom*\', \'api*\', \'test*\', \'le*\')\nkey3: ORDER_IN(\'tom*\', \'api*\', \'test*\', \'le*\', \'mi*\')','2022-09-08 02:32:31'),(1662604390896,1662604351860,0,82001,0,0,1662604351793,1,'tom*, tom*, tom*','key1: \"tom*\"\nkey2: \"tom*\"\nkey3: \"tom*\"','2022-09-08 02:33:10'),(1662604391194,1662604351860,0,82001,0,0,1662604351793,1,'api*, api*, api*','key1: \"api*\"\nkey2: \"api*\"\nkey3: \"api*\"','2022-09-08 02:33:11'),(1662604391592,1662604351860,0,82001,0,0,1662604351793,1,'test*, test*, test*','key1: \"test*\"\nkey2: \"test*\"\nkey3: \"test*\"','2022-09-08 02:33:11'),(1662604391922,1662604351860,0,82001,0,0,1662604351793,1,'tom*, le*, le*','key1: \"tom*\"\nkey2: \"le*\"\nkey3: \"le*\"','2022-09-08 02:33:11'),(1662604392325,1662604351860,0,82001,0,0,1662604351793,1,'api*, tom*, mi*','key1: \"api*\"\nkey2: \"tom*\"\nkey3: \"mi*\"','2022-09-08 02:33:12'),(1662604393124,1662604351860,0,82001,0,0,1662604351793,1,'test*, api*, tom*','key1: \"test*\"\nkey2: \"api*\"\nkey3: \"tom*\"','2022-09-08 02:33:13'),(1662604393404,1662604351860,0,82001,0,0,1662604351793,1,'tom*, test*, api*','key1: \"tom*\"\nkey2: \"test*\"\nkey3: \"api*\"','2022-09-08 02:33:13'),(1662604393647,1662604351860,0,82001,0,0,1662604351793,1,'api*, le*, test*','key1: \"api*\"\nkey2: \"le*\"\nkey3: \"test*\"','2022-09-08 02:33:13'),(1662604394478,1662604351860,0,82001,0,0,1662604351793,1,'tom*, api*, mi*','key1: \"tom*\"\nkey2: \"api*\"\nkey3: \"mi*\"','2022-09-08 02:33:14'),(1662604394808,1662604351860,0,82001,0,0,1662604351793,1,'test*, tom*, le*','key1: \"test*\"\nkey2: \"tom*\"\nkey3: \"le*\"','2022-09-08 02:33:14'),(1662604395625,1662604351860,0,82001,0,0,1662604351793,1,'api*, test*, tom*','key1: \"api*\"\nkey2: \"test*\"\nkey3: \"tom*\"','2022-09-08 02:33:15'),(1662604396249,1662604351860,0,82001,0,0,1662604351793,1,'test*, le*, api*','key1: \"test*\"\nkey2: \"le*\"\nkey3: \"api*\"','2022-09-08 02:33:16'),(1662604396619,1662604351860,0,82001,0,0,1662604351793,1,'tom*, tom*, test*','key1: \"tom*\"\nkey2: \"tom*\"\nkey3: \"test*\"','2022-09-08 02:33:16'),(1662604397050,1662604351860,0,82001,0,0,1662604351793,1,'api*, api*, le*','key1: \"api*\"\nkey2: \"api*\"\nkey3: \"le*\"','2022-09-08 02:33:17'),(1662604397443,1662604351860,0,82001,0,0,1662604351793,1,'test*, test*, mi*','key1: \"test*\"\nkey2: \"test*\"\nkey3: \"mi*\"','2022-09-08 02:33:17'),(1662604398501,1662604351860,0,82001,0,0,1662604351793,1,'tom*, le*, tom*','key1: \"tom*\"\nkey2: \"le*\"\nkey3: \"tom*\"','2022-09-08 02:33:18'),(1662604398805,1662604351860,0,82001,0,0,1662604351793,1,'api*, tom*, api*','key1: \"api*\"\nkey2: \"tom*\"\nkey3: \"api*\"','2022-09-08 02:33:18'),(1662604399069,1662604351860,0,82001,0,0,1662604351793,1,'test*, api*, test*','key1: \"test*\"\nkey2: \"api*\"\nkey3: \"test*\"','2022-09-08 02:33:19'),(1662604399985,1662604351860,0,82001,0,0,1662604351793,1,'api*, le*, mi*','key1: \"api*\"\nkey2: \"le*\"\nkey3: \"mi*\"','2022-09-08 02:33:20'),(1662604400320,1662604351860,0,82001,0,0,1662604351793,1,'tom*, test*, le*','key1: \"tom*\"\nkey2: \"test*\"\nkey3: \"le*\"','2022-09-08 02:33:20'),(1662604400689,1662604351860,0,82001,0,0,1662604351793,1,'tom*, api*, api*','key1: \"tom*\"\nkey2: \"api*\"\nkey3: \"api*\"','2022-09-08 02:33:20'),(1662604401097,1662604351860,0,82001,0,0,1662604351793,1,'test*, tom*, tom*','key1: \"test*\"\nkey2: \"tom*\"\nkey3: \"tom*\"','2022-09-08 02:33:21'),(1662604402979,1662604351860,0,82001,0,0,1662604351793,1,'test*, le*, le*','key1: \"test*\"\nkey2: \"le*\"\nkey3: \"le*\"','2022-09-08 02:33:22'),(1662604403344,1662604351860,0,82001,0,0,1662604351793,1,'tom*, tom*, mi*','key1: \"tom*\"\nkey2: \"tom*\"\nkey3: \"mi*\"','2022-09-08 02:33:23'),(1662604404117,1662604351860,0,82001,0,0,1662604351793,1,'api*, test*, test*','key1: \"api*\"\nkey2: \"test*\"\nkey3: \"test*\"','2022-09-08 02:33:24'),(1662604404486,1662604351860,0,82001,0,0,1662604351793,1,'api*, api*, tom*','key1: \"api*\"\nkey2: \"api*\"\nkey3: \"tom*\"','2022-09-08 02:33:24'),(1662604404991,1662604351860,0,82001,0,0,1662604351793,1,'test*, test*, api*','key1: \"test*\"\nkey2: \"test*\"\nkey3: \"api*\"','2022-09-08 02:33:25'),(1662604405776,1662604351860,0,82001,0,0,1662604351793,1,'tom*, le*, test*','key1: \"tom*\"\nkey2: \"le*\"\nkey3: \"test*\"','2022-09-08 02:33:25'),(1662604406032,1662604351860,0,82001,0,0,1662604351793,1,'api*, tom*, le*','key1: \"api*\"\nkey2: \"tom*\"\nkey3: \"le*\"','2022-09-08 02:33:26'),(1662604407050,1662604351860,0,82001,0,0,1662604351793,1,'test*, api*, mi*','key1: \"test*\"\nkey2: \"api*\"\nkey3: \"mi*\"','2022-09-08 02:33:27'),(1662604408100,1662604351860,0,82001,0,0,1662604351793,1,'api*, le*, api*','key1: \"api*\"\nkey2: \"le*\"\nkey3: \"api*\"','2022-09-08 02:33:28'),(1662604408861,1662604351860,0,82001,0,0,1662604351793,1,'tom*, test*, tom*','key1: \"tom*\"\nkey2: \"test*\"\nkey3: \"tom*\"','2022-09-08 02:33:28'),(1662604409267,1662604351860,0,82001,0,0,1662604351793,1,'test*, tom*, test*','key1: \"test*\"\nkey2: \"tom*\"\nkey3: \"test*\"','2022-09-08 02:33:29'),(1662604409604,1662604351860,0,82001,0,0,1662604351793,1,'tom*, api*, le*','key1: \"tom*\"\nkey2: \"api*\"\nkey3: \"le*\"','2022-09-08 02:33:29'),(1662604410448,1662604351860,0,82001,0,0,1662604351793,1,'test*, le*, tom*','key1: \"test*\"\nkey2: \"le*\"\nkey3: \"tom*\"','2022-09-08 02:33:30'),(1662604411377,1662604351860,0,82001,0,0,1662604351793,1,'api*, test*, mi*','key1: \"api*\"\nkey2: \"test*\"\nkey3: \"mi*\"','2022-09-08 02:33:31'),(1662604412363,1662604351860,0,82001,0,0,1662604351793,1,'test*, test*, le*','key1: \"test*\"\nkey2: \"test*\"\nkey3: \"le*\"','2022-09-08 02:33:32'),(1662604412699,1662604351860,0,82001,0,0,1662604351793,1,'api*, api*, test*','key1: \"api*\"\nkey2: \"api*\"\nkey3: \"test*\"','2022-09-08 02:33:32'),(1662604413067,1662604351860,0,82001,0,0,1662604351793,1,'tom*, tom*, api*','key1: \"tom*\"\nkey2: \"tom*\"\nkey3: \"api*\"','2022-09-08 02:33:33'),(1662604413765,1662604351860,0,82001,0,0,1662604351793,1,'tom*, le*, mi*','key1: \"tom*\"\nkey2: \"le*\"\nkey3: \"mi*\"','2022-09-08 02:33:33'),(1662604414076,1662604351860,0,82001,0,0,1662604351793,1,'api*, tom*, tom*','key1: \"api*\"\nkey2: \"tom*\"\nkey3: \"tom*\"','2022-09-08 02:33:34'),(1662604414341,1662604351860,0,82001,0,0,1662604351793,1,'test*, api*, api*','key1: \"test*\"\nkey2: \"api*\"\nkey3: \"api*\"','2022-09-08 02:33:34'),(1662604415232,1662604351860,0,82001,0,0,1662604351793,1,'tom*, api*, tom*','key1: \"tom*\"\nkey2: \"api*\"\nkey3: \"tom*\"','2022-09-08 02:33:35'),(1662604415518,1662604351860,0,82001,0,0,1662604351793,1,'test*, tom*, mi*','key1: \"test*\"\nkey2: \"tom*\"\nkey3: \"mi*\"','2022-09-08 02:33:35'),(1662604415945,1662604351860,0,82001,0,0,1662604351793,1,'api*, le*, le*','key1: \"api*\"\nkey2: \"le*\"\nkey3: \"le*\"','2022-09-08 02:33:35'),(1662604417081,1662604351860,0,82001,0,0,1662604351793,1,'tom*, test*, test*','key1: \"tom*\"\nkey2: \"test*\"\nkey3: \"test*\"','2022-09-08 02:33:37'),(1662604417717,1662604351860,0,82001,0,0,1662604351793,1,'api*, test*, api*','key1: \"api*\"\nkey2: \"test*\"\nkey3: \"api*\"','2022-09-08 02:33:37'),(1662604418558,1662604351860,0,82001,0,0,1662604351793,1,'tom*, le*, api*','key1: \"tom*\"\nkey2: \"le*\"\nkey3: \"api*\"','2022-09-08 02:33:38'),(1662604418870,1662604351860,0,82001,0,0,1662604351793,1,'test*, test*, tom*','key1: \"test*\"\nkey2: \"test*\"\nkey3: \"tom*\"','2022-09-08 02:33:38'),(1662604419254,1662604351860,0,82001,0,0,1662604351793,1,'api*, api*, mi*','key1: \"api*\"\nkey2: \"api*\"\nkey3: \"mi*\"','2022-09-08 02:33:39'),(1662604419559,1662604351860,0,82001,0,0,1662604351793,1,'tom*, tom*, le*','key1: \"tom*\"\nkey2: \"tom*\"\nkey3: \"le*\"','2022-09-08 02:33:39'),(1662604420073,1662604351860,0,82001,0,0,1662604351793,1,'test*, le*, test*','key1: \"test*\"\nkey2: \"le*\"\nkey3: \"test*\"','2022-09-08 02:33:40'),(1662604421484,1662604351860,0,82001,0,0,1662604351793,1,'tom*, test*, mi*','key1: \"tom*\"\nkey2: \"test*\"\nkey3: \"mi*\"','2022-09-08 02:33:41'),(1662604421846,1662604351860,0,82001,0,0,1662604351793,1,'test*, api*, le*','key1: \"test*\"\nkey2: \"api*\"\nkey3: \"le*\"','2022-09-08 02:33:41'),(1662604422154,1662604351860,0,82001,0,0,1662604351793,1,'api*, tom*, test*','key1: \"api*\"\nkey2: \"tom*\"\nkey3: \"test*\"','2022-09-08 02:33:42'),(1662604423282,1662604351860,0,82001,0,0,1662604351793,1,'test*, tom*, api*','key1: \"test*\"\nkey2: \"tom*\"\nkey3: \"api*\"','2022-09-08 02:33:43'),(1662604423613,1662604351860,0,82001,0,0,1662604351793,1,'api*, le*, tom*','key1: \"api*\"\nkey2: \"le*\"\nkey3: \"tom*\"','2022-09-08 02:33:43'),(1662604424031,1662604351860,0,82001,0,0,1662604351793,1,'tom*, api*, test*','key1: \"tom*\"\nkey2: \"api*\"\nkey3: \"test*\"','2022-09-08 02:33:44'),(1662604425205,1662604351860,0,82001,0,0,1662604351793,1,'test*, le*, mi*','key1: \"test*\"\nkey2: \"le*\"\nkey3: \"mi*\"','2022-09-08 02:33:45'),(1662604425511,1662604351860,0,82001,0,0,1662604351793,1,'api*, test*, le*','key1: \"api*\"\nkey2: \"test*\"\nkey3: \"le*\"','2022-09-08 02:33:45'),(1662604680580,0,0,82001,0,0,1662604680510,12,'默认配置','like: ORDER_IN(\'%s%\', \'%q%\', \'%l%\')\nregexp: ORDER_IN(\'a\', \'u\', \'t\', \'o\')','2022-09-08 02:38:00'),(1662604697485,1662604680580,0,82001,0,0,1662604680510,1,'%s%, a','like: \"%s%\"\nregexp: \"a\"','2022-09-08 02:38:17'),(1662604697719,1662604680580,0,82001,0,0,1662604680510,1,'%q%, u','like: \"%q%\"\nregexp: \"u\"','2022-09-08 02:38:17'),(1662604698769,1662604680580,0,82001,0,0,1662604680510,1,'%q%, a','like: \"%q%\"\nregexp: \"a\"','2022-09-08 02:38:18'),(1662604699105,1662604680580,0,82001,0,0,1662604680510,1,'%s%, o','like: \"%s%\"\nregexp: \"o\"','2022-09-08 02:38:19'),(1662604699475,1662604680580,0,82001,0,0,1662604680510,1,'%l%, t','like: \"%l%\"\nregexp: \"t\"','2022-09-08 02:38:19'),(1662604700380,1662604680580,0,82001,0,0,1662604680510,1,'%s%, t','like: \"%s%\"\nregexp: \"t\"','2022-09-08 02:38:20'),(1662604701849,1662604680580,0,82001,0,0,1662604680510,1,'%l%, u','like: \"%l%\"\nregexp: \"u\"','2022-09-08 02:38:21'),(1662604704762,1662604680580,0,82001,0,0,1662604680510,1,'%l%, a','like: \"%l%\"\nregexp: \"a\"','2022-09-08 02:38:24'),(1662604705058,1662604680580,0,82001,0,0,1662604680510,1,'%q%, o','like: \"%q%\"\nregexp: \"o\"','2022-09-08 02:38:25'),(1662604705462,1662604680580,0,82001,0,0,1662604680510,1,'%s%, u','like: \"%s%\"\nregexp: \"u\"','2022-09-08 02:38:25'),(1662604706918,1662604680580,0,82001,0,0,1662604680510,1,'%q%, t','like: \"%q%\"\nregexp: \"t\"','2022-09-08 02:38:26'),(1662604708071,1662604680580,0,82001,0,0,1662604680510,1,'%l%, o','like: \"%l%\"\nregexp: \"o\"','2022-09-08 02:38:28'),(1662605088600,0,0,82001,0,0,1662605088494,60,'默认配置','limit: ORDER_IN(1, 3, 5, 8, 10)\noffset: RANDOM_INT(0, 5)','2022-09-08 02:44:48'),(1662605495972,0,0,82001,0,0,1662605495868,6,'默认配置','regexp: ORDER_IN(\'a\', \'p\', \'i\')\nsex: RANDOM_INT(0, 2)','2022-09-08 02:51:36'),(1662605510076,1662605495972,0,82001,0,0,1662605495868,1,'a, 1','regexp: \"a\"\nsex: 1','2022-09-08 02:51:50'),(1662605510347,1662605495972,0,82001,0,0,1662605495868,1,'p, 2','regexp: \"p\"\nsex: 2','2022-09-08 02:51:50'),(1662605511079,1662605495972,0,82001,0,0,1662605495868,1,'i, 1','regexp: \"i\"\nsex: 1','2022-09-08 02:51:51'),(1662605514260,1662605495972,0,82001,0,0,1662605495868,1,'a, 0','regexp: \"a\"\nsex: 0','2022-09-08 02:51:54'),(1662605515693,1662605495972,0,82001,0,0,1662605495868,1,'p, 1','regexp: \"p\"\nsex: 1','2022-09-08 02:51:55'),(1662605516862,1662605495972,0,82001,0,0,1662605495868,1,'i, 1','regexp: \"i\"\nsex: 1','2022-09-08 02:51:56'),(1662606200887,0,0,82001,0,0,1662606200791,50,'默认配置','momentId: RANDOM_IN(12, 15, 401)\nuserId: ORDER_INT(82001, 82010)\ncontent: RANDOM_STR()','2022-09-08 03:03:20'),(1662606482729,0,0,82001,0,0,1662606482664,1,'默认配置','name: RANDOM_STR()\nid: ORDER_IN(82001, 82010, 82345)','2022-09-08 03:08:02'),(1662607238174,0,0,82001,0,0,1662606992370,24,'随机配置 2022-09-08 11:20','minId: ORDER_IN(82001, 82005, 82010)  // 顺序选项取值\nmaxId: RANDOM_INT(82005, 82012)  // 随机范围取值','2022-09-08 03:20:38'),(1662607255913,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82010','minId: 82001\nmaxId: 82010','2022-09-08 03:20:55'),(1662607256144,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82005','minId: 82005\nmaxId: 82005','2022-09-08 03:20:56'),(1662607259133,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82009','minId: 82001\nmaxId: 82009','2022-09-08 03:20:59'),(1662607259487,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82009','minId: 82010\nmaxId: 82009','2022-09-08 03:20:59'),(1662607328439,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82009','minId: 82010\nmaxId: 82009','2022-09-08 03:22:08'),(1662607328736,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82007','minId: 82005\nmaxId: 82007','2022-09-08 03:22:08'),(1662607329401,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82005','minId: 82010\nmaxId: 82005','2022-09-08 03:22:09'),(1662607329753,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82007','minId: 82001\nmaxId: 82007','2022-09-08 03:22:09'),(1662607330809,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82008','minId: 82001\nmaxId: 82008','2022-09-08 03:22:10'),(1662607382483,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82006','minId: 82001\nmaxId: 82006','2022-09-08 03:23:02'),(1662607382806,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82008','minId: 82010\nmaxId: 82008','2022-09-08 03:23:02'),(1662607384317,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82011','minId: 82010\nmaxId: 82011','2022-09-08 03:23:04'),(1662607384663,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82008','minId: 82005\nmaxId: 82008','2022-09-08 03:23:04'),(1662607385506,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82007','minId: 82005\nmaxId: 82007','2022-09-08 03:23:05'),(1662607385814,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82011','minId: 82001\nmaxId: 82011','2022-09-08 03:23:05'),(1662607387195,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82012','minId: 82010\nmaxId: 82012','2022-09-08 03:23:07'),(1662607387596,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82010','minId: 82005\nmaxId: 82010','2022-09-08 03:23:07'),(1662607388014,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82005','minId: 82001\nmaxId: 82005','2022-09-08 03:23:08'),(1662607388478,1662607238174,0,82001,0,0,1662606992370,1,'82010, 82006','minId: 82010\nmaxId: 82006','2022-09-08 03:23:08'),(1662607390981,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82007','minId: 82005\nmaxId: 82007','2022-09-08 03:23:10'),(1662607391931,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82008','minId: 82001\nmaxId: 82008','2022-09-08 03:23:11'),(1662607393512,1662607238174,0,82001,0,0,1662606992370,1,'82005, 82008','minId: 82005\nmaxId: 82008','2022-09-08 03:23:13'),(1662607394206,1662607238174,0,82001,0,0,1662606992370,1,'82001, 82009','minId: 82001\nmaxId: 82009','2022-09-08 03:23:14'),(1662624731925,0,0,82001,0,0,1662569033547,9,'ORDER_IN, ORDER_IN','key: ORDER_IN(\'s\', \'q\', \'l\')  // 顺序选项取值\nlimit: ORDER_IN(1, 5, 10)  // 顺序范围取值','2022-09-08 08:12:11'),(1662624739168,1662624731925,0,82001,0,0,1662569033547,1,'q, 5','key: \"q\"\nlimit: 5','2022-09-08 08:12:19'),(1662624739443,1662624731925,0,82001,0,0,1662569033547,1,'l, 10','key: \"l\"\nlimit: 10','2022-09-08 08:12:19'),(1662624739642,1662624731925,0,82001,0,0,1662569033547,1,'s, 1','key: \"s\"\nlimit: 1','2022-09-08 08:12:19'),(1662624739882,1662624731925,0,82001,0,0,1662569033547,1,'q, 5','key: \"q\"\nlimit: 5','2022-09-08 08:12:19'),(1662624740692,1662624731925,0,82001,0,0,1662569033547,1,'s, 1','key: \"s\"\nlimit: 1','2022-09-08 08:12:20'),(1662624741140,1662624731925,0,82001,0,0,1662569033547,1,'l, 10','key: \"l\"\nlimit: 10','2022-09-08 08:12:21'),(1662624741910,1662624731925,0,82001,0,0,1662569033547,1,'q, 5','key: \"q\"\nlimit: 5','2022-09-08 08:12:21'),(1662624742278,1662624731925,0,82001,0,0,1662569033547,1,'l, 10','key: \"l\"\nlimit: 10','2022-09-08 08:12:22'),(1662624831439,1662624731925,0,82001,0,0,1662569033547,1,'s, 1','key: \"s\"\nlimit: 1','2022-09-08 08:13:51'),(1662624831798,1662624731925,0,82001,0,0,1662569033547,1,'q, 5','key: \"q\"\nlimit: 5','2022-09-08 08:13:51'),(1662624832543,1662624731925,0,82001,0,0,1662569033547,1,'q, 5','key: \"q\"\nlimit: 5','2022-09-08 08:13:52'),(1662624832822,1662624731925,0,82001,0,0,1662569033547,1,'s, 1','key: \"s\"\nlimit: 1','2022-09-08 08:13:52'),(1662624833111,1662624731925,0,82001,0,0,1662569033547,1,'l, 10','key: \"l\"\nlimit: 10','2022-09-08 08:13:53'),(1662624833954,1662624731925,0,82001,0,0,1662569033547,1,'s, 1','key: \"s\"\nlimit: 1','2022-09-08 08:13:53'),(1662634326721,1657045372256,0,82001,0,0,1657045372046,1,'undefined','User/id: undefined','2022-09-08 10:52:06'),(1662634328100,1657045372256,0,82001,0,0,1657045372046,1,'null','User/id: null','2022-09-08 10:52:08'),(1662634329013,1657045372256,0,82001,0,0,1657045372046,1,'82001','User/id: 82001','2022-09-08 10:52:09'),(1662634839880,0,0,82001,0,0,1662634839699,3,'默认配置','gql: ORDER_IN(\"MATCH (n) WHERE id(n) IN [\\\"monster033\\\", \\\"poison\\\", \\\"monster034\\\"] RETURN n\", \"fetch prop on `evolves_to` \\\"monster033\\\"->\\\"monster034\\\"@0 YIELD edge as `edge_`\", \"fetch prop on `monster_type` \\\"monster033\\\"->\\\"poison\\\"@0 YIELD edge as `edge_`\")','2022-09-08 11:00:39'),(1662989441967,0,0,82001,0,0,1511796155276,20,'RANDOM_INT','phone: RANDOM_INT(13000082001, 13000082020) + \"\"','2022-09-12 13:30:41'),(1663144540439,0,0,82001,0,0,1663144540138,10,'默认配置','id: \'testNode_\' + Math.round(10*Math.random())','2022-09-14 08:35:40'),(1663144844950,1663144540439,0,82001,0,0,1663144540138,1,'testNode_0','id: \'testNode_0\'','2022-09-14 08:40:45'),(1663144845933,1663144540439,0,82001,0,0,1663144540138,1,'testNode_4','id: \'testNode_4\'','2022-09-14 08:40:46'),(1663144846662,1663144540439,0,82001,0,0,1663144540138,1,'testNode_3','id: \'testNode_3\'','2022-09-14 08:40:46'),(1663144847655,1663144540439,0,82001,0,0,1663144540138,1,'testNode_1','id: \'testNode_1\'','2022-09-14 08:40:48'),(1663144847958,1663144540439,0,82001,0,0,1663144540138,1,'testNode_8','id: \'testNode_8\'','2022-09-14 08:40:48'),(1663144849025,1663144540439,0,82001,0,0,1663144540138,1,'testNode_7','id: \'testNode_7\'','2022-09-14 08:40:49'),(1663144849497,1663144540439,0,82001,0,0,1663144540138,1,'testNode_3','id: \'testNode_3\'','2022-09-14 08:40:49'),(1663144850835,1663144540439,0,82001,0,0,1663144540138,1,'testNode_8','id: \'testNode_8\'','2022-09-14 08:40:51'),(1663144851155,1663144540439,0,82001,0,0,1663144540138,1,'testNode_0','id: \'testNode_0\'','2022-09-14 08:40:51'),(1663144851396,1663144540439,0,82001,0,0,1663144540138,1,'testNode_7','id: \'testNode_7\'','2022-09-14 08:40:51'),(1663320436769,0,0,82001,0,0,1657797765823,1,'随机配置 2022-09-16 17:27','','2022-09-16 09:27:16'),(1663749767628,0,0,82001,0,0,1663749767546,10,'默认配置','searchKey: \'%a%\'  // 固定常量值\nuserId: RANDOM_IN(82001, 82002, 82003)  // 随机选项取值\nlimit: ORDER_IN(1, 3, 5, 10)  // 顺序选项取值\noffset: RANDOM_INT(0, 5)  // 随机范围取值\n  // 从数据库随机取值  userId: RANDOM_DB(\'Comment\', \'userId\')\n\n  // 注释可省略，但如果未省略则前面两个空格必须；清空文本内容可查看规则。\n\n  // ## 快捷键\n  // Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n  // Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n                        ','2022-09-21 08:42:47'),(1664264870372,0,0,82001,0,0,1663749767546,1,'随机配置 2022-09-27 15:47','searchKey: \'%a%\'  // 固定常量值\nuserId: RANDOM_IN(82001, 82002, 82003)  // 随机选项取值\nlimit: ORDER_IN(1, 3, 5, 10)  // 顺序选项取值\noffset: RANDOM_INT(0, 5)  // 随机范围取值\n  // 从数据库随机取值  userId: RANDOM_DB(\'Comment\', \'userId\')\n\n  // 注释可省略，但如果未省略则前面两个空格必须；清空文本内容可查看规则。\n\n  // ## 快捷键\n  // Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n  // Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n                        ','2022-09-27 07:47:50'),(1664264877007,0,0,82001,0,0,1663749767546,1,'随机配置 2022-09-27 15:47','searchKey: \'%a%\'  // 固定常量值\nuserId: RANDOM_IN(82001, 82002, 82003)  // 随机选项取值\nlimit: ORDER_IN(1, 3, 5, 10)  // 顺序选项取值\noffset: RANDOM_INT(0, 5)  // 随机范围取值\n  // 从数据库随机取值  userId: RANDOM_DB(\'Comment\', \'userId\')\n\n  // 注释可省略，但如果未省略则前面两个空格必须；清空文本内容可查看规则。\n\n  // ## 快捷键\n  // Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n  // Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n                        ','2022-09-27 07:47:57'),(1665343358997,0,0,88888,0,0,1665343358862,1,'默认配置(上传测试用例时自动生成)','[]/Comment/name$: ORDER_IN(undefined, null, \"\", \"%a%\")\n[]/Comment/content$: ORDER_IN(undefined, null, \"\", \"%b%\")\n[]/Comment/@from@/from: ORDER_IN(undefined, null, \"\", \"Comment\")\n[]/Comment/@from@/join: ORDER_IN(undefined, null, \"\", \"&/User/id@\")\n[]/Comment/@from@/User/sex: ORDER_INT(0, 10)\n  // 可替代上面的 []/Comment/@from@/User/sex: RANDOM_INT(0, 100)','2022-10-09 19:22:39'),(1665343764091,0,0,88888,0,0,1665343763962,1,'默认配置(上传测试用例时自动生成)','[]/join: ORDER_IN(undefined, null, \"\", \"*/Moment\")\n[]/Comment/name$: ORDER_IN(undefined, null, \"\", \"%a%\")\n[]/Comment/content$: ORDER_IN(undefined, null, \"\", \"%b%\")\n[]/Comment/@from@/from: ORDER_IN(undefined, null, \"\", \"Comment\")\n[]/Comment/@from@/join: ORDER_IN(undefined, null, \"\", \"&/User/id@\")\n[]/Comment/@from@/User/sex: ORDER_INT(0, 10)\n  // 可替代上面的 []/Comment/@from@/User/sex: RANDOM_INT(0, 100)\n[]/Moment/userId>: RANDOM_INT(0, 100)','2022-10-09 19:29:24'),(1666202661929,0,0,88888,0,0,1666202661817,1,'默认配置(上传测试用例时自动生成)','User/id: ORDER_IN(undefined, null, 38710)\n  // 可替代上面的 User/id: RANDOM_INT(1, 387100)','2022-10-19 18:04:21'),(1667382803181,0,0,82001,0,0,1634724321770,50,'ORDER_INT(-100, 10000)/1000','methodArgs/0/value: ORDER_INT(-100, 10000)/1000 + \'\'','2022-11-02 09:53:23'),(1667382864199,1667382803181,0,82001,0,0,1634724321770,1,'-0.1','methodArgs/0/value: \"-0.1\"','2022-11-02 09:54:24'),(1667382864481,1667382803181,0,82001,0,0,1634724321770,1,'-0.099','methodArgs/0/value: \"-0.099\"','2022-11-02 09:54:24'),(1667382865714,1667382803181,0,82001,0,0,1634724321770,1,'-0.097','methodArgs/0/value: \"-0.097\"','2022-11-02 09:54:25'),(1667382866203,1667382803181,0,82001,0,0,1634724321770,1,'-0.098','methodArgs/0/value: \"-0.098\"','2022-11-02 09:54:26'),(1667382866689,1667382803181,0,82001,0,0,1634724321770,1,'-0.096','methodArgs/0/value: \"-0.096\"','2022-11-02 09:54:26'),(1667382866984,1667382803181,0,82001,0,0,1634724321770,1,'-0.095','methodArgs/0/value: \"-0.095\"','2022-11-02 09:54:27'),(1667382867759,1667382803181,0,82001,0,0,1634724321770,1,'-0.089','methodArgs/0/value: \"-0.089\"','2022-11-02 09:54:27'),(1667382868052,1667382803181,0,82001,0,0,1634724321770,1,'-0.09','methodArgs/0/value: \"-0.09\"','2022-11-02 09:54:28'),(1667382868424,1667382803181,0,82001,0,0,1634724321770,1,'-0.091','methodArgs/0/value: \"-0.091\"','2022-11-02 09:54:28'),(1667382868840,1667382803181,0,82001,0,0,1634724321770,1,'-0.092','methodArgs/0/value: \"-0.092\"','2022-11-02 09:54:28'),(1667382869273,1667382803181,0,82001,0,0,1634724321770,1,'-0.093','methodArgs/0/value: \"-0.093\"','2022-11-02 09:54:29'),(1667382870122,1667382803181,0,82001,0,0,1634724321770,1,'-0.094','methodArgs/0/value: \"-0.094\"','2022-11-02 09:54:30'),(1667382871236,1667382803181,0,82001,0,0,1634724321770,1,'-0.083','methodArgs/0/value: \"-0.083\"','2022-11-02 09:54:31'),(1667382871549,1667382803181,0,82001,0,0,1634724321770,1,'-0.084','methodArgs/0/value: \"-0.084\"','2022-11-02 09:54:31'),(1667382872431,1667382803181,0,82001,0,0,1634724321770,1,'-0.086','methodArgs/0/value: \"-0.086\"','2022-11-02 09:54:32'),(1667382872775,1667382803181,0,82001,0,0,1634724321770,1,'-0.087','methodArgs/0/value: \"-0.087\"','2022-11-02 09:54:32'),(1667382873360,1667382803181,0,82001,0,0,1634724321770,1,'-0.085','methodArgs/0/value: \"-0.085\"','2022-11-02 09:54:33'),(1667382874388,1667382803181,0,82001,0,0,1634724321770,1,'-0.088','methodArgs/0/value: \"-0.088\"','2022-11-02 09:54:34'),(1667382876235,1667382803181,0,82001,0,0,1634724321770,1,'-0.077','methodArgs/0/value: \"-0.077\"','2022-11-02 09:54:36'),(1667382876529,1667382803181,0,82001,0,0,1634724321770,1,'-0.078','methodArgs/0/value: \"-0.078\"','2022-11-02 09:54:36'),(1667382877500,1667382803181,0,82001,0,0,1634724321770,1,'-0.079','methodArgs/0/value: \"-0.079\"','2022-11-02 09:54:37'),(1667382878122,1667382803181,0,82001,0,0,1634724321770,1,'-0.08','methodArgs/0/value: \"-0.08\"','2022-11-02 09:54:38'),(1667382879890,1667382803181,0,82001,0,0,1634724321770,1,'-0.076','methodArgs/0/value: \"-0.076\"','2022-11-02 09:54:39'),(1667382915549,0,0,82001,0,0,1634724321770,50,'RANDOM_INT(-100, 10000)/1000','methodArgs/0/value: RANDOM_INT(-100, 10000)/1000 + \'\'','2022-11-02 09:55:15'),(1667382934335,1667382915549,0,82001,0,0,1634724321770,1,'0.484','methodArgs/0/value: \"0.484\"','2022-11-02 09:55:34'),(1667382940787,1667382915549,0,82001,0,0,1634724321770,1,'1.047','methodArgs/0/value: \"1.047\"','2022-11-02 09:55:40'),(1667382945603,1667382915549,0,82001,0,0,1634724321770,1,'7.735','methodArgs/0/value: \"7.735\"','2022-11-02 09:55:45'),(1667382947849,1667382915549,0,82001,0,0,1634724321770,1,'4.087','methodArgs/0/value: \"4.087\"','2022-11-02 09:55:47'),(1667382956747,1667382915549,0,82001,0,0,1634724321770,1,'-0.045','methodArgs/0/value: \"-0.045\"','2022-11-02 09:55:56'),(1667382958568,1667382915549,0,82001,0,0,1634724321770,1,'9.24','methodArgs/0/value: \"9.24\"','2022-11-02 09:55:58'),(1667382959770,1667382915549,0,82001,0,0,1634724321770,1,'3.408','methodArgs/0/value: \"3.408\"','2022-11-02 09:55:59'),(1667382960606,1667382915549,0,82001,0,0,1634724321770,1,'0.049','methodArgs/0/value: \"0.049\"','2022-11-02 09:56:00'),(1667382961518,1667382915549,0,82001,0,0,1634724321770,1,'7.944','methodArgs/0/value: \"7.944\"','2022-11-02 09:56:01'),(1667383482020,1667382915549,0,82001,0,0,1634724321770,1,'6.614','methodArgs/0/value: \"6.614\"','2022-11-02 10:04:42'),(1667383482287,1667382915549,0,82001,0,0,1634724321770,1,'8.014','methodArgs/0/value: \"8.014\"','2022-11-02 10:04:42'),(1667383485433,1667382915549,0,82001,0,0,1634724321770,1,'1.226','methodArgs/0/value: \"1.226\"','2022-11-02 10:04:45'),(1667383488638,1667382915549,0,82001,0,0,1634724321770,1,'9.994','methodArgs/0/value: \"9.994\"','2022-11-02 10:04:48'),(1667383490357,1667382915549,0,82001,0,0,1634724321770,1,'7.102','methodArgs/0/value: \"7.102\"','2022-11-02 10:04:50'),(1667383492713,1667382915549,0,82001,0,0,1634724321770,1,'7.128','methodArgs/0/value: \"7.128\"','2022-11-02 10:04:52'),(1667383493056,1667382915549,0,82001,0,0,1634724321770,1,'8.911','methodArgs/0/value: \"8.911\"','2022-11-02 10:04:53'),(1667383496539,1667382915549,0,82001,0,0,1634724321770,1,'4.073','methodArgs/0/value: \"4.073\"','2022-11-02 10:04:56'),(1667383497221,1667382915549,0,82001,0,0,1634724321770,1,'9.004','methodArgs/0/value: \"9.004\"','2022-11-02 10:04:57'),(1667383499501,1667382915549,0,82001,0,0,1634724321770,1,'0.343','methodArgs/0/value: \"0.343\"','2022-11-02 10:04:59'),(1667383499947,1667382915549,0,82001,0,0,1634724321770,1,'9.564','methodArgs/0/value: \"9.564\"','2022-11-02 10:04:59'),(1667383500869,1667382915549,0,82001,0,0,1634724321770,1,'4.632','methodArgs/0/value: \"4.632\"','2022-11-02 10:05:00'),(1667383501470,1667382915549,0,82001,0,0,1634724321770,1,'7.253','methodArgs/0/value: \"7.253\"','2022-11-02 10:05:01'),(1667383502862,1667382915549,0,82001,0,0,1634724321770,1,'4.613','methodArgs/0/value: \"4.613\"','2022-11-02 10:05:02'),(1667383503207,1667382915549,0,82001,0,0,1634724321770,1,'9.003','methodArgs/0/value: \"9.003\"','2022-11-02 10:05:03'),(1667383504347,1667382915549,0,82001,0,0,1634724321770,1,'2.798','methodArgs/0/value: \"2.798\"','2022-11-02 10:05:04'),(1667383504674,1667382915549,0,82001,0,0,1634724321770,1,'6.432','methodArgs/0/value: \"6.432\"','2022-11-02 10:05:04'),(1667383505994,1667382915549,0,82001,0,0,1634724321770,1,'4.539','methodArgs/0/value: \"4.539\"','2022-11-02 10:05:06'),(1667383507275,1667382915549,0,82001,0,0,1634724321770,1,'8.752','methodArgs/0/value: \"8.752\"','2022-11-02 10:05:07'),(1667383507659,1667382915549,0,82001,0,0,1634724321770,1,'3.86','methodArgs/0/value: \"3.86\"','2022-11-02 10:05:07'),(1667383509355,1667382915549,0,82001,0,0,1634724321770,1,'8.202','methodArgs/0/value: \"8.202\"','2022-11-02 10:05:09'),(1667383509717,1667382915549,0,82001,0,0,1634724321770,1,'3.12','methodArgs/0/value: \"3.12\"','2022-11-02 10:05:09'),(1667383510946,1667382915549,0,82001,0,0,1634724321770,1,'3.614','methodArgs/0/value: \"3.614\"','2022-11-02 10:05:10'),(1667383511582,1667382915549,0,82001,0,0,1634724321770,1,'6.017','methodArgs/0/value: \"6.017\"','2022-11-02 10:05:11'),(1667383512972,1667382915549,0,82001,0,0,1634724321770,1,'9.327','methodArgs/0/value: \"9.327\"','2022-11-02 10:05:12'),(1667383513397,1667382915549,0,82001,0,0,1634724321770,1,'2.328','methodArgs/0/value: \"2.328\"','2022-11-02 10:05:13'),(1667383521818,1667382915549,0,82001,0,0,1634724321770,1,'1.794','methodArgs/0/value: \"1.794\"','2022-11-02 10:05:21'),(1667383522256,1667382915549,0,82001,0,0,1634724321770,1,'0.45','methodArgs/0/value: \"0.45\"','2022-11-02 10:05:22'),(1667383523110,1667382915549,0,82001,0,0,1634724321770,1,'7.217','methodArgs/0/value: \"7.217\"','2022-11-02 10:05:23'),(1667383624762,0,0,82001,0,0,1634724321770,3,'ORDER_IN(\'2.025\', \'-1.9\', \'5.145\')','methodArgs/0/value: ORDER_IN(\'2.025\', \'-1.9\', \'5.145\')','2022-11-02 10:07:04'),(1667383651006,1667383624762,0,82001,0,0,1634724321770,1,'2.025','methodArgs/0/value: \"2.025\"','2022-11-02 10:07:31'),(1667383651420,1667383624762,0,82001,0,0,1634724321770,1,'-1.9','methodArgs/0/value: \"-1.9\"','2022-11-02 10:07:31'),(1667383651813,1667383624762,0,82001,0,0,1634724321770,1,'5.145','methodArgs/0/value: \"5.145\"','2022-11-02 10:07:31'),(1667384116837,1667382915549,0,82001,0,0,1634724321770,1,'6.84','methodArgs/0/value: \"6.84\"','2022-11-02 10:15:16'),(1667384118148,1667382915549,0,82001,0,0,1634724321770,1,'2.028','methodArgs/0/value: \"2.028\"','2022-11-02 10:15:18'),(1667787712970,0,0,82001,0,0,1522905868719,1,'随机配置 2022-11-07 10:21','','2022-11-07 02:21:52'),(1668482296815,0,0,82001,0,0,1654148705805,1,'随机配置 2022-11-15 11:18','','2022-11-15 03:18:16'),(1669096654703,0,0,82001,0,0,1546904653622,1,'随机配置 2022-11-22 13:57','','2022-11-22 05:57:34'),(1669109550840,0,0,82001,0,0,1660136144185,1,'随机配置 2022-11-22 17:32','','2022-11-22 09:32:30'),(1669208451892,1657117214268,0,82001,0,0,1657045372046,1,'82001','User/id: 82001','2022-11-23 13:00:51'),(1669208465728,1657117214268,0,82001,0,0,1657045372046,1,'82001','User/id: 82001','2022-11-23 13:01:05'),(1669281248085,0,0,82001,0,0,1660136144185,1,'User/id: RANDOM_DB()','','2022-11-24 09:14:08'),(1669281263512,0,0,82001,0,0,1660136144185,1,'User/id: RANDOM_DB()','','2022-11-24 09:14:23'),(1671011031082,0,0,82001,0,0,1657797765823,1,'随机配置 2022-12-14 17:43','','2022-12-14 09:43:51'),(1671271730041,0,0,82001,0,0,1564483634844,1,'随机配置 2022-12-17 18:08','','2022-12-17 10:08:50'),(1677491836171,0,0,1677037331169,0,0,1677491836069,1,'默认配置(上传测试用例时自动生成)','Student/id: ORDER_IN(undefined, null, 9527)\n  // 可替代上面的 Student/id: RANDOM_INT(1, 95270)','2023-02-27 09:57:16'),(1677578896726,0,0,82001,0,0,1655374307487,1,'随机配置 2023-02-28 18:08','methodArgs/0/value: ORDER_IN(\'11\', \'22\', \'33\', \'44\', \'55\')','2023-02-28 10:08:16'),(1678424346769,0,0,82001,0,0,1678424346646,10,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"int:2\"], [{\"type\":\"func(int,int)int\",\"value\":{\"type\":\"int\",\"return\":5,\"callback\":true}}], [\"int:8\"], [\"int:2\",\"int:8\",{\"type\":\"func(int,int)int\",\"value\":{\"type\":\"int\",\"return\":5,\"callback\":true}}])','2023-03-10 04:59:06'),(1678424613845,0,0,82001,0,0,1678424613776,6,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [9], [\"float64:2\"], [9,\"float64:2\"])','2023-03-10 05:03:33'),(1678426425415,1678424613845,0,82001,0,0,1678424613776,1,'[..2..]','methodArgs: [9,\"float64:2\"]','2023-03-10 05:33:45'),(1678815250598,0,0,82001,0,0,1678815250428,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [{\"type\":\"unitauto.test.Test\",\"value\":{\"Id\":2,\"Name\":\"UnitAuto2\"}}], [{\"type\":\"unitauto.test.Test\",\"value\":{\"Id\":1,\"Name\":\"UnitAuto\"}}], [{\"type\":\"unitauto.test.Test\",\"value\":{\"Id\":2,\"Name\":\"UnitAuto2\"}},{\"type\":\"unitauto.test.Test\",\"value\":{\"Id\":1,\"Name\":\"UnitAuto\"}}])','2023-03-14 17:34:10'),(1678863230715,0,0,82001,0,0,1655368441953,1,'随机配置 2023-03-15 14:53','','2023-03-15 06:53:50'),(1678863255229,0,0,82001,0,0,1655368441953,1,'随机配置 2023-03-15 14:54','','2023-03-15 06:54:15'),(1678871669809,0,0,82001,0,0,1678871669660,1,'默认配置(上传测试用例时自动生成)','methodArgs: ORDER_IN(undefined, null, [], [\"int64:1\"], [\"int64:9\"], [\"int64:1\",\"int64:9\"])','2023-03-15 09:14:29'),(1678937795783,0,0,82001,0,0,1678937795573,1,'默认配置(上传测试用例时自动生成)','this/type: ORDER_IN(undefined, null, \"\", \"*unitauto.test.Test\")\nthis/value/Id: ORDER_IN(undefined, null, 2)\n  // 可替代上面的 this/value/Id: RANDOM_INT(1, 20)\nthis/value/Name: ORDER_IN(undefined, null, \"\", \"hello\")\nmethodArgs: ORDER_IN(undefined, null, [], [\"tesa\"])','2023-03-16 03:36:35'),(1678955132368,0,0,82001,0,0,1677916404679,1,'随机配置 2023-03-16 16:25','\n\nmethodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null)  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\n//  {\"methodArgs/0/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/0/value\":\"RANDOM_IN(1, 0.1, -10, 9.99, null)\",\n//  \"methodArgs/1/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/1/value\":\"ORDER_INT(-10, 100)\"}','2023-03-16 08:25:32'),(1678955137167,0,0,82001,0,0,1677916404679,1,'随机配置 2023-03-16 16:25','\n\nmethodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null)  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\n//  {\"methodArgs/0/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/0/value\":\"RANDOM_IN(1, 0.1, -10, 9.99, null)\",\n//  \"methodArgs/1/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/1/value\":\"ORDER_INT(-10, 100)\"}','2023-03-16 08:25:37'),(1678955181745,0,0,82001,0,0,1677916404679,1,'随机配置 2023-03-16 16:26','\n\nmethodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null)  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100,null)  // 顺序整数\n\n//  {\"methodArgs/0/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/0/value\":\"RANDOM_IN(1, 0.1, -10, 9.99, null)\",\n//  \"methodArgs/1/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/1/value\":\"ORDER_INT(-10, 100)\"}','2023-03-16 08:26:21'),(1678955228769,0,0,82001,0,0,1677916404679,1,'随机配置 2023-03-16 16:27','\n\nmethodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null,\'ssds\')  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\n//  {\"methodArgs/0/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/0/value\":\"RANDOM_IN(1, 0.1, -10, 9.99, null)\",\n//  \"methodArgs/1/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/1/value\":\"ORDER_INT(-10, 100)\"}','2023-03-16 08:27:08'),(1678955278634,0,0,82001,0,0,1677916404679,1,'aa随机配置 2023-03-16 16:30','\n\nmethodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null,\'aaaa\')  // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')  // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100)  // 顺序整数\n\n//  {\"methodArgs/0/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/0/value\":\"RANDOM_IN(1, 0.1, -10, 9.99, null)\",\n//  \"methodArgs/1/type\":\"ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\')\",\n//  \"methodArgs/1/value\":\"ORDER_INT(-10, 100)\"}','2023-03-16 08:27:58'),(1679378042590,0,0,82001,0,0,1655893080449,1,'随机配置 2023-03-21 13:54','methodArgs/0/value: RANDOM_STR(3,10)','2023-03-21 05:54:02'),(1679391631736,0,0,82001,0,0,1678871646344,32,'ORDER_IN, ORDER_IN','methodArgs/0: ORDER_IN(\'^[a-z]+$\', \'^[A-Z]+$\', \'^[A-Za-z]+$\', \'^[A-Za-z0-9]+$\')\nmethodArgs/1: ORDER_IN(\'a\', \'bco\', \'Adt\', \'IDE\', \'123\', \'aewEds\', \'FC8fihn93\', \'@d3a%\')\n','2023-03-21 09:40:31'),(1679391643269,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, a','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"a\"','2023-03-21 09:40:43'),(1679391643737,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, bco','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"bco\"','2023-03-21 09:40:43'),(1679391644575,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, Adt','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"Adt\"','2023-03-21 09:40:44'),(1679391645045,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., IDE','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"IDE\"','2023-03-21 09:40:45'),(1679391649268,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, aewEds','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"aewEds\"','2023-03-21 09:40:49'),(1679391652191,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, FC8fihn93','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"FC8fihn93\"','2023-03-21 09:40:52'),(1679391654172,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., @d3a%','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"@d3a%\"','2023-03-21 09:40:54'),(1679391656231,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, a','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"a\"','2023-03-21 09:40:56'),(1679391658266,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, bco','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"bco\"','2023-03-21 09:40:58'),(1679391661079,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, Adt','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"Adt\"','2023-03-21 09:41:01'),(1679391663276,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., IDE','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"IDE\"','2023-03-21 09:41:03'),(1679391665667,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, 123','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"123\"','2023-03-21 09:41:05'),(1679391667637,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, aewEds','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"aewEds\"','2023-03-21 09:41:07'),(1679391668445,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, FC8fihn93','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"FC8fihn93\"','2023-03-21 09:41:08'),(1679391668784,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., @d3a%','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"@d3a%\"','2023-03-21 09:41:08'),(1679391669517,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, bco','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"bco\"','2023-03-21 09:41:09'),(1679391669931,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, a','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"a\"','2023-03-21 09:41:09'),(1679391670858,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., IDE','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"IDE\"','2023-03-21 09:41:10'),(1679391671163,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, 123','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"123\"','2023-03-21 09:41:11'),(1679391671728,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, Adt','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"Adt\"','2023-03-21 09:41:11'),(1679391672765,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., IDE','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"IDE\"','2023-03-21 09:41:12'),(1679391673147,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, Adt','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"Adt\"','2023-03-21 09:41:13'),(1679391673879,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, bco','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"bco\"','2023-03-21 09:41:13'),(1679391674557,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, a','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"a\"','2023-03-21 09:41:14'),(1679391675409,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., @d3a%','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"@d3a%\"','2023-03-21 09:41:15'),(1679391675814,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, FC8fihn93','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"FC8fihn93\"','2023-03-21 09:41:15'),(1679391676965,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z]+$, aewEds','methodArgs/0: \"^[A-Z]+$\"\nmethodArgs/1: \"aewEds\"','2023-03-21 09:41:16'),(1679391677340,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, 123','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"123\"','2023-03-21 09:41:17'),(1679391679854,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Z..., @d3a%','methodArgs/0: \"^[A-Za-z0-9]+$\"\nmethodArgs/1: \"@d3a%\"','2023-03-21 09:41:19'),(1679969072975,1679378042590,0,82001,0,0,1655893080449,1,'Ab_Cd...','methodArgs/0/value: \"Ab_Cd-896558060350928\"','2023-03-28 02:04:32'),(1680101356238,0,0,82001,0,0,1546414155879,80,'随机配置 2023-03-29 22:49','[]/count: ORDER_IN(1, true, 3, \'a\', 5)\n[]/page: RANDOM_INT(-1, 15)\n','2023-03-29 14:49:16'),(1680101766579,1680101356238,0,82001,0,0,1546414155879,1,'1, 7','[]/count: 1\n[]/page: 7','2023-03-29 14:56:06'),(1680101860783,1680101356238,0,82001,0,0,1546414155879,1,'true, 2','[]/count: true\n[]/page: 2','2023-03-29 14:57:40'),(1680101966400,1680101356238,0,82001,0,0,1546414155879,1,'1, 6','[]/count: 1\n[]/page: 6','2023-03-29 14:59:26'),(1680101973185,1680101356238,0,82001,0,0,1546414155879,1,'1, 3','[]/count: 1\n[]/page: 3','2023-03-29 14:59:33'),(1680101974829,1680101356238,0,82001,0,0,1546414155879,1,'5, 3','[]/count: 5\n[]/page: 3','2023-03-29 14:59:34'),(1680101983833,1680101356238,0,82001,0,0,1546414155879,1,'3, 13','[]/count: 3\n[]/page: 13','2023-03-29 14:59:43'),(1680101986392,1680101356238,0,82001,0,0,1546414155879,1,'5, 13','[]/count: 5\n[]/page: 13','2023-03-29 14:59:46'),(1680101992365,1680101356238,0,82001,0,0,1546414155879,1,'a, 13','[]/count: \"a\"\n[]/page: 13','2023-03-29 14:59:52'),(1680101995928,1680101356238,0,82001,0,0,1546414155879,1,'true, -1','[]/count: true\n[]/page: -1','2023-03-29 14:59:55'),(1680102000160,1680101356238,0,82001,0,0,1546414155879,1,'3, 15','[]/count: 3\n[]/page: 15','2023-03-29 15:00:00'),(1680102012467,1680101356238,0,82001,0,0,1546414155879,1,'3, 9','[]/count: 3\n[]/page: 9','2023-03-29 15:00:12'),(1680102015194,1680101356238,0,82001,0,0,1546414155879,1,'1, 2','[]/count: 1\n[]/page: 2','2023-03-29 15:00:15'),(1680102018231,1680101356238,0,82001,0,0,1546414155879,1,'1, 13','[]/count: 1\n[]/page: 13','2023-03-29 15:00:18'),(1680102022906,1680101356238,0,82001,0,0,1546414155879,1,'1, 1','[]/count: 1\n[]/page: 1','2023-03-29 15:00:22'),(1680102023870,1680101356238,0,82001,0,0,1546414155879,1,'3, 0','[]/count: 3\n[]/page: 0','2023-03-29 15:00:23'),(1680102025122,1680101356238,0,82001,0,0,1546414155879,1,'5, 2','[]/count: 5\n[]/page: 2','2023-03-29 15:00:25'),(1680102027320,1680101356238,0,82001,0,0,1546414155879,1,'a, 5','[]/count: \"a\"\n[]/page: 5','2023-03-29 15:00:27'),(1680102082478,1680101356238,0,82001,0,0,1546414155879,1,'1, 7','[]/count: 1\n[]/page: 7','2023-03-29 15:01:22'),(1680102282573,1680101356238,0,82001,0,0,1546414155879,1,'3, 14','[]/count: 3\n[]/page: 14','2023-03-29 15:04:42'),(1680102285170,1680101356238,0,82001,0,0,1546414155879,1,'true, 12','[]/count: true\n[]/page: 12','2023-03-29 15:04:45'),(1680102293685,1680101356238,0,82001,0,0,1546414155879,1,'5, 6','[]/count: 5\n[]/page: 6','2023-03-29 15:04:53'),(1680102294965,1680101356238,0,82001,0,0,1546414155879,1,'1, 9','[]/count: 1\n[]/page: 9','2023-03-29 15:04:54'),(1680108490104,0,0,82001,0,0,1678866752788,50,'随机配置 2023-03-30 00:48','methodArgs/0/value: ORDER_INT(-10, 100)\nmethodArgs/1/value: RANDOM_NUM(-9.9, 99.99)\n','2023-03-29 16:48:10'),(1680108501662,1680108490104,0,82001,0,0,1678866752788,1,'-10, 79.17','methodArgs/0/value: -10\nmethodArgs/1/value: 79.17','2023-03-29 16:48:21'),(1680108515820,1680108490104,0,82001,0,0,1678866752788,1,'-9, 7.95','methodArgs/0/value: -9\nmethodArgs/1/value: 7.95','2023-03-29 16:48:35'),(1680108573038,1680108490104,0,82001,0,0,1678866752788,1,'33, 2.78','methodArgs/0/value: 33\nmethodArgs/1/value: 2.78','2023-03-29 16:49:33'),(1680108577261,1680108490104,0,82001,0,0,1678866752788,1,'-9, 5.04','methodArgs/0/value: -9\nmethodArgs/1/value: 5.04','2023-03-29 16:49:37'),(1680108577506,1680108490104,0,82001,0,0,1678866752788,1,'-8, 81.01','methodArgs/0/value: -8\nmethodArgs/1/value: 81.01','2023-03-29 16:49:37'),(1680108578555,1680108490104,0,82001,0,0,1678866752788,1,'32, 48.15','methodArgs/0/value: 32\nmethodArgs/1/value: 48.15','2023-03-29 16:49:38'),(1680108578918,1680108490104,0,82001,0,0,1678866752788,1,'31, 96.54','methodArgs/0/value: 31\nmethodArgs/1/value: 96.54','2023-03-29 16:49:38'),(1680108579261,1680108490104,0,82001,0,0,1678866752788,1,'30, 67.67','methodArgs/0/value: 30\nmethodArgs/1/value: 67.67','2023-03-29 16:49:39'),(1680108580485,1680108490104,0,82001,0,0,1678866752788,1,'35, 93.28','methodArgs/0/value: 35\nmethodArgs/1/value: 93.28','2023-03-29 16:49:40'),(1680108580791,1680108490104,0,82001,0,0,1678866752788,1,'34, 90.24','methodArgs/0/value: 34\nmethodArgs/1/value: 90.24','2023-03-29 16:49:40'),(1680108581264,1680108490104,0,82001,0,0,1678866752788,1,'37, 40.73','methodArgs/0/value: 37\nmethodArgs/1/value: 40.73','2023-03-29 16:49:41'),(1680108582523,1680108490104,0,82001,0,0,1678866752788,1,'17, 27.75','methodArgs/0/value: 17\nmethodArgs/1/value: 27.75','2023-03-29 16:49:42'),(1680108583669,1680108490104,0,82001,0,0,1678866752788,1,'8, 74.38','methodArgs/0/value: 8\nmethodArgs/1/value: 74.38','2023-03-29 16:49:43'),(1680108583985,1680108490104,0,82001,0,0,1678866752788,1,'7, 26.56','methodArgs/0/value: 7\nmethodArgs/1/value: 26.56','2023-03-29 16:49:44'),(1680108584314,1680108490104,0,82001,0,0,1678866752788,1,'6, 62.8','methodArgs/0/value: 6\nmethodArgs/1/value: 62.8','2023-03-29 16:49:44'),(1680108584633,1680108490104,0,82001,0,0,1678866752788,1,'5, 83.19','methodArgs/0/value: 5\nmethodArgs/1/value: 83.19','2023-03-29 16:49:44'),(1680108585706,1680108490104,0,82001,0,0,1678866752788,1,'-10, 84.49','methodArgs/0/value: -10\nmethodArgs/1/value: 84.49','2023-03-29 16:49:45'),(1680108586325,1680108490104,0,82001,0,0,1678866752788,1,'-7, 83.69','methodArgs/0/value: -7\nmethodArgs/1/value: 83.69','2023-03-29 16:49:46'),(1680108587219,1680108490104,0,82001,0,0,1678866752788,1,'11, -0.62','methodArgs/0/value: 11\nmethodArgs/1/value: -0.62','2023-03-29 16:49:47'),(1680108587531,1680108490104,0,82001,0,0,1678866752788,1,'10, 31.1','methodArgs/0/value: 10\nmethodArgs/1/value: 31.1','2023-03-29 16:49:47'),(1680108587841,1680108490104,0,82001,0,0,1678866752788,1,'9, 76.36','methodArgs/0/value: 9\nmethodArgs/1/value: 76.36','2023-03-29 16:49:47'),(1680108614721,1680108490104,0,82001,0,0,1678866752788,1,'1, 41.88','methodArgs/0/value: 1\nmethodArgs/1/value: 41.88','2023-03-29 16:50:14'),(1680108619637,1680108490104,0,82001,0,0,1678866752788,1,'2, 66.83','methodArgs/0/value: 2\nmethodArgs/1/value: 66.83','2023-03-29 16:50:19'),(1680108620088,1680108490104,0,82001,0,0,1678866752788,1,'3, -5.38','methodArgs/0/value: 3\nmethodArgs/1/value: -5.38','2023-03-29 16:50:20'),(1680196601998,1680101356238,0,82001,0,0,1546414155879,1,'5, 1','[]/count: 5\n[]/page: 1','2023-03-30 17:16:42'),(1680196606610,1680101356238,0,82001,0,0,1546414155879,1,'1, -1','[]/count: 1\n[]/page: -1','2023-03-30 17:16:46'),(1680196609498,1680101356238,0,82001,0,0,1546414155879,1,'a, 5','[]/count: \"a\"\n[]/page: 5','2023-03-30 17:16:49'),(1680196612863,1680101356238,0,82001,0,0,1546414155879,1,'a, 7','[]/count: \"a\"\n[]/page: 7','2023-03-30 17:16:52'),(1680196627747,1680101356238,0,82001,0,0,1546414155879,1,'1, 1','[]/count: 1\n[]/page: 1','2023-03-30 17:17:07'),(1680196682909,1680101356238,0,82001,0,0,1546414155879,1,'5, 8','[]/count: 5\n[]/page: 8','2023-03-30 17:18:02'),(1680196799707,0,0,82001,0,0,1559995734352,60,'User/id: ORDER_INT, User/@value: RANDOM_IN','User/id: ORDER_INT(82001, 82020)\nUser/@value: RANDOM_IN(82001, 82002, 82003)\n','2023-03-30 17:19:59'),(1680196827403,1680196799707,0,82001,0,0,1559995734352,1,'82001, 82002','User/id: 82001\nUser/@value: 82002','2023-03-30 17:20:27'),(1680196830937,1680196799707,0,82001,0,0,1559995734352,1,'82002, 82002','User/id: 82002\nUser/@value: 82002','2023-03-30 17:20:30'),(1680196835924,1680196799707,0,82001,0,0,1559995734352,1,'82004, 82002','User/id: 82004\nUser/@value: 82002','2023-03-30 17:20:35'),(1680196839533,1680196799707,0,82001,0,0,1559995734352,1,'82003, 82003','User/id: 82003\nUser/@value: 82003','2023-03-30 17:20:39'),(1680196842497,1680196799707,0,82001,0,0,1559995734352,1,'82006, 82003','User/id: 82006\nUser/@value: 82003','2023-03-30 17:20:42'),(1680196847057,1680196799707,0,82001,0,0,1559995734352,1,'82005, 82002','User/id: 82005\nUser/@value: 82002','2023-03-30 17:20:47'),(1680196852557,1680196799707,0,82001,0,0,1559995734352,1,'82007, 82003','User/id: 82007\nUser/@value: 82003','2023-03-30 17:20:52'),(1680196855166,1680196799707,0,82001,0,0,1559995734352,1,'82008, 82001','User/id: 82008\nUser/@value: 82001','2023-03-30 17:20:55'),(1680196860728,1680196799707,0,82001,0,0,1559995734352,1,'82009, 82001','User/id: 82009\nUser/@value: 82001','2023-03-30 17:21:00'),(1680196862994,1680196799707,0,82001,0,0,1559995734352,1,'82016, 82002','User/id: 82016\nUser/@value: 82002','2023-03-30 17:21:03'),(1680196865299,1680196799707,0,82001,0,0,1559995734352,1,'82018, 82003','User/id: 82018\nUser/@value: 82003','2023-03-30 17:21:05'),(1680196868836,1680196799707,0,82001,0,0,1559995734352,1,'82019, 82003','User/id: 82019\nUser/@value: 82003','2023-03-30 17:21:08'),(1680196872220,1680196799707,0,82001,0,0,1559995734352,1,'82020, 82002','User/id: 82020\nUser/@value: 82002','2023-03-30 17:21:12'),(1680196878330,1680196799707,0,82001,0,0,1559995734352,1,'82002, 82002','User/id: 82002\nUser/@value: 82002','2023-03-30 17:21:18'),(1680196943277,1680196799707,0,82001,0,0,1559995734352,1,'82002, 82003','User/id: 82002\nUser/@value: 82003','2023-03-30 17:22:23'),(1680196960236,1680196799707,0,82001,0,0,1559995734352,1,'82005, 82001','User/id: 82005\nUser/@value: 82001','2023-03-30 17:22:40'),(1680196963623,1680196799707,0,82001,0,0,1559995734352,1,'82006, 82003','User/id: 82006\nUser/@value: 82003','2023-03-30 17:22:43'),(1680196981698,1680196799707,0,82001,0,0,1559995734352,1,'82005, 82002','User/id: 82005\nUser/@value: 82002','2023-03-30 17:23:01'),(1680201155217,0,0,82001,0,0,1564483634846,50,'format, version, @role, @explain, @cache','format: ORDER_IN(true, false, null)\nversion: ORDER_INT(-1, 5)\n@role: RANDOM_IN(\"UNKNOWN\", \"LOGIN\", \"CONTACT\", \"CIRCLE\", \"OWNER\", \"ADMIN\")\n@explain: RANDOM_IN(true, false, null)\n@cache: ORDER_IN(\"ALL\", \"RAM\", \"ROM\", 1, 2, 0)','2023-03-30 18:32:35'),(1680201206042,1680201155217,0,82001,0,0,1564483634846,1,'false, -1, UNKNOWN, null, RAM','format: false\nversion: -1\n@role: \"UNKNOWN\"\n@explain: null\n@cache: \"RAM\"','2023-03-30 18:33:26'),(1680201221185,1680201155217,0,82001,0,0,1564483634846,1,'true, 2, UNKNOWN, true, 1','format: true\nversion: 2\n@role: \"UNKNOWN\"\n@explain: true\n@cache: 1','2023-03-30 18:33:41'),(1680201225072,1680201155217,0,82001,0,0,1564483634846,1,'null, 3, UNKNOWN, false, ROM','format: null\nversion: 3\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ROM\"','2023-03-30 18:33:45'),(1680201228810,1680201155217,0,82001,0,0,1564483634846,1,'true, -1, UNKNOWN, true, 1','format: true\nversion: -1\n@role: \"UNKNOWN\"\n@explain: true\n@cache: 1','2023-03-30 18:33:48'),(1680201251547,1680201155217,0,82001,0,0,1564483634846,1,'null, 3, UNKNOWN, false, 0','format: null\nversion: 3\n@role: \"UNKNOWN\"\n@explain: false\n@cache: 0','2023-03-30 18:34:11'),(1680201268602,1680201155217,0,82001,0,0,1564483634846,1,'null, -1, UNKNOWN, true, ROM','format: null\nversion: -1\n@role: \"UNKNOWN\"\n@explain: true\n@cache: \"ROM\"','2023-03-30 18:34:28'),(1680201271101,1680201155217,0,82001,0,0,1564483634846,1,'false, 3, UNKNOWN, true, 2','format: false\nversion: 3\n@role: \"UNKNOWN\"\n@explain: true\n@cache: 2','2023-03-30 18:34:31'),(1680201275624,1680201155217,0,82001,0,0,1564483634846,1,'false, 3, UNKNOWN, false, RAM','format: false\nversion: 3\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"RAM\"','2023-03-30 18:34:35'),(1680201276702,1680201155217,0,82001,0,0,1564483634846,1,'null, 4, UNKNOWN, false, ROM','format: null\nversion: 4\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ROM\"','2023-03-30 18:34:36'),(1680201283671,1680201155217,0,82001,0,0,1564483634846,1,'null, -1, UNKNOWN, true, 0','format: null\nversion: -1\n@role: \"UNKNOWN\"\n@explain: true\n@cache: 0','2023-03-30 18:34:43'),(1680201295174,1680201155217,0,82001,0,0,1564483634846,1,'false, 5, UNKNOWN, true, 2','format: false\nversion: 5\n@role: \"UNKNOWN\"\n@explain: true\n@cache: 2','2023-03-30 18:34:55'),(1680201296610,1680201155217,0,82001,0,0,1564483634846,1,'true, 3, UNKNOWN, false, ALL','format: true\nversion: 3\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ALL\"','2023-03-30 18:34:56'),(1680201298119,1680201155217,0,82001,0,0,1564483634846,1,'true, 1, UNKNOWN, false, ALL','format: true\nversion: 1\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ALL\"','2023-03-30 18:34:58'),(1680201299931,1680201155217,0,82001,0,0,1564483634846,1,'null, 0, UNKNOWN, false, ROM','format: null\nversion: 0\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ROM\"','2023-03-30 18:34:59'),(1680201336159,1680201155217,0,82001,0,0,1564483634846,1,'true, 5, UNKNOWN, true, ALL','format: true\nversion: 5\n@role: \"UNKNOWN\"\n@explain: true\n@cache: \"ALL\"','2023-03-30 18:35:36'),(1680201339904,1680201155217,0,82001,0,0,1564483634846,1,'false, 0, UNKNOWN, false, RAM','format: false\nversion: 0\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"RAM\"','2023-03-30 18:35:39'),(1680201368782,1680201155217,0,82001,0,0,1564483634846,1,'true, 1, UNKNOWN, null, 1','format: true\nversion: 1\n@role: \"UNKNOWN\"\n@explain: null\n@cache: 1','2023-03-30 18:36:08'),(1680201403539,1680201155217,0,82001,0,0,1564483634846,1,'true, 1, UNKNOWN, true, ALL','format: true\nversion: 1\n@role: \"UNKNOWN\"\n@explain: true\n@cache: \"ALL\"','2023-03-30 18:36:43'),(1680201406914,1680201155217,0,82001,0,0,1564483634846,1,'true, 3, UNKNOWN, false, ALL','format: true\nversion: 3\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"ALL\"','2023-03-30 18:36:46'),(1680201411199,1680201155217,0,82001,0,0,1564483634846,1,'false, 2, UNKNOWN, null, 2','format: false\nversion: 2\n@role: \"UNKNOWN\"\n@explain: null\n@cache: 2','2023-03-30 18:36:51'),(1680201414432,1680201155217,0,82001,0,0,1564483634846,1,'false, 0, UNKNOWN, false, RAM','format: false\nversion: 0\n@role: \"UNKNOWN\"\n@explain: false\n@cache: \"RAM\"','2023-03-30 18:36:54'),(1680201506265,0,0,82001,0,0,1522905599150,20,'ORDER_INT,RANDOM_STR','Moment/id: ORDER_INT(230, 250)\nMoment/content: RANDOM_STR()\n','2023-03-30 18:38:26'),(1680201651876,0,0,82001,0,0,1648334213866,12,'RANDOM_INT,ORDER_IN','Moment[].page: RANDOM_INT(-1, 5)\nMoment[].count: ORDER_IN(1, 2, \'a\', 3, 5, false)\n','2023-03-30 18:40:51'),(1680201666891,1680201651876,0,82001,0,0,1648334213866,1,'4, 1','Moment[].page: 4\nMoment[].count: 1','2023-03-30 18:41:06'),(1680201668409,1680201651876,0,82001,0,0,1648334213866,1,'5, 2','Moment[].page: 5\nMoment[].count: 2','2023-03-30 18:41:08'),(1680201677844,1680201651876,0,82001,0,0,1648334213866,1,'2, a','Moment[].page: 2\nMoment[].count: \"a\"','2023-03-30 18:41:17'),(1680201679826,1680201651876,0,82001,0,0,1648334213866,1,'4, 3','Moment[].page: 4\nMoment[].count: 3','2023-03-30 18:41:19'),(1680201681610,1680201651876,0,82001,0,0,1648334213866,1,'2, 5','Moment[].page: 2\nMoment[].count: 5','2023-03-30 18:41:21'),(1680201685357,1680201651876,0,82001,0,0,1648334213866,1,'1, false','Moment[].page: 1\nMoment[].count: false','2023-03-30 18:41:25'),(1680201687432,1680201651876,0,82001,0,0,1648334213866,1,'-1, 1','Moment[].page: -1\nMoment[].count: 1','2023-03-30 18:41:27'),(1680201688792,1680201651876,0,82001,0,0,1648334213866,1,'0, 2','Moment[].page: 0\nMoment[].count: 2','2023-03-30 18:41:28'),(1680201690308,1680201651876,0,82001,0,0,1648334213866,1,'0, a','Moment[].page: 0\nMoment[].count: \"a\"','2023-03-30 18:41:30'),(1680201692077,1680201651876,0,82001,0,0,1648334213866,1,'2, 3','Moment[].page: 2\nMoment[].count: 3','2023-03-30 18:41:32'),(1680201693648,1680201651876,0,82001,0,0,1648334213866,1,'1, 5','Moment[].page: 1\nMoment[].count: 5','2023-03-30 18:41:33'),(1680201714042,1680201651876,0,82001,0,0,1648334213866,1,'4, 1','Moment[].page: 4\nMoment[].count: 1','2023-03-30 18:41:54'),(1680201830209,0,0,82001,0,0,1521907333044,30,'ORDER_INT,RANDOM_IN','User/id: ORDER_INT(82001, 82020)\nMoment-firstPicture[]/count: RANDOM_IN(1, true, 3, \'a\', 5)\n','2023-03-30 18:43:50'),(1680201841932,1680201830209,0,82001,0,0,1521907333044,1,'82003, 5','User/id: 82003\nMoment-firstPicture[]/count: 5','2023-03-30 18:44:01'),(1680201843567,1680201830209,0,82001,0,0,1521907333044,1,'82002, a','User/id: 82002\nMoment-firstPicture[]/count: \"a\"','2023-03-30 18:44:03'),(1680201849043,1680201830209,0,82001,0,0,1521907333044,1,'82001, 5','User/id: 82001\nMoment-firstPicture[]/count: 5','2023-03-30 18:44:09'),(1680201851559,1680201830209,0,82001,0,0,1521907333044,1,'82004, 3','User/id: 82004\nMoment-firstPicture[]/count: 3','2023-03-30 18:44:11'),(1680201854801,1680201830209,0,82001,0,0,1521907333044,1,'82006, true','User/id: 82006\nMoment-firstPicture[]/count: true','2023-03-30 18:44:14'),(1680201858809,1680201830209,0,82001,0,0,1521907333044,1,'82005, a','User/id: 82005\nMoment-firstPicture[]/count: \"a\"','2023-03-30 18:44:18'),(1680201861239,1680201830209,0,82001,0,0,1521907333044,1,'82007, a','User/id: 82007\nMoment-firstPicture[]/count: \"a\"','2023-03-30 18:44:21'),(1680201870301,1680201830209,0,82001,0,0,1521907333044,1,'82011, 5','User/id: 82011\nMoment-firstPicture[]/count: 5','2023-03-30 18:44:30'),(1680201886530,1680201830209,0,82001,0,0,1521907333044,1,'82012, 5','User/id: 82012\nMoment-firstPicture[]/count: 5','2023-03-30 18:44:46'),(1680201891535,1680201830209,0,82001,0,0,1521907333044,1,'82016, 1','User/id: 82016\nMoment-firstPicture[]/count: 1','2023-03-30 18:44:51'),(1680201894293,1680201830209,0,82001,0,0,1521907333044,1,'82002, 1','User/id: 82002\nMoment-firstPicture[]/count: 1','2023-03-30 18:44:54'),(1680201898678,1680201830209,0,82001,0,0,1521907333044,1,'82005, 5','User/id: 82005\nMoment-firstPicture[]/count: 5','2023-03-30 18:44:58'),(1680201901116,1680201830209,0,82001,0,0,1521907333044,1,'82012, true','User/id: 82012\nMoment-firstPicture[]/count: true','2023-03-30 18:45:01'),(1680201903927,1680201830209,0,82001,0,0,1521907333044,1,'82004, 5','User/id: 82004\nMoment-firstPicture[]/count: 5','2023-03-30 18:45:03'),(1680201905359,1680201830209,0,82001,0,0,1521907333044,1,'82005, 5','User/id: 82005\nMoment-firstPicture[]/count: 5','2023-03-30 18:45:05'),(1680201927042,1680201830209,0,82001,0,0,1521907333044,1,'82002, a','User/id: 82002\nMoment-firstPicture[]/count: \"a\"','2023-03-30 18:45:27'),(1680201940310,1680201830209,0,82001,0,0,1521907333044,1,'82003, true','User/id: 82003\nMoment-firstPicture[]/count: true','2023-03-30 18:45:40'),(1680201960723,1680201830209,0,82001,0,0,1521907333044,1,'82005, 3','User/id: 82005\nMoment-firstPicture[]/count: 3','2023-03-30 18:46:00'),(1680201970255,1680201830209,0,82001,0,0,1521907333044,1,'82002, true','User/id: 82002\nMoment-firstPicture[]/count: true','2023-03-30 18:46:10'),(1680202050651,0,0,82001,0,0,1546904617127,8,'ORDER_IN','Moment/id: ORDER_IN(235, 301, 0, -1, [])\n','2023-03-30 18:47:30'),(1680202060162,1680202050651,0,82001,0,0,1546904617127,1,'235','Moment/id: 235','2023-03-30 18:47:40'),(1680202066930,1680202050651,0,82001,0,0,1546904617127,1,'0','Moment/id: 0','2023-03-30 18:47:46'),(1680202069596,1680202050651,0,82001,0,0,1546904617127,1,'-1','Moment/id: -1','2023-03-30 18:47:49'),(1680202073018,1680202050651,0,82001,0,0,1546904617127,1,'[]','Moment/id: []','2023-03-30 18:47:53'),(1680202107741,1680202050651,0,82001,0,0,1546904617127,1,'0','Moment/id: 0','2023-03-30 18:48:27'),(1680202108861,1680202050651,0,82001,0,0,1546904617127,1,'-1','Moment/id: -1','2023-03-30 18:48:28'),(1680202110546,1680202050651,0,82001,0,0,1546904617127,1,'235','Moment/id: 235','2023-03-30 18:48:30'),(1680202111721,1680202050651,0,82001,0,0,1546904617127,1,'[]','Moment/id: []','2023-03-30 18:48:31'),(1680202232159,0,0,82001,0,0,1546904437584,12,'ORDER_IN','User[]/User/name$: ORDER_IN(\"%m%\", \"%a\", \"y%\", \"%b%e%\", \"_u%\", \"%r_\", \"_o%k_\")\n','2023-03-30 18:50:32'),(1680202239528,1680202232159,0,82001,0,0,1546904437584,1,'%a','User[]/User/name$: \"%a\"','2023-03-30 18:50:39'),(1680202240587,1680202232159,0,82001,0,0,1546904437584,1,'y%','User[]/User/name$: \"y%\"','2023-03-30 18:50:40'),(1680202243486,1680202232159,0,82001,0,0,1546904437584,1,'%b%e%','User[]/User/name$: \"%b%e%\"','2023-03-30 18:50:43'),(1680202244674,1680202232159,0,82001,0,0,1546904437584,1,'_u%','User[]/User/name$: \"_u%\"','2023-03-30 18:50:44'),(1680202246837,1680202232159,0,82001,0,0,1546904437584,1,'%r_','User[]/User/name$: \"%r_\"','2023-03-30 18:50:46'),(1680202249811,1680202232159,0,82001,0,0,1546904437584,1,'_o%k_','User[]/User/name$: \"_o%k_\"','2023-03-30 18:50:49'),(1680202324833,0,0,82001,0,0,1546904337054,3,'ORDER_IN','Comment/@column: ORDER_IN(\"id,toId:parentId\", \"id,toId:pId\", \"id,toId:father_id\")\n','2023-03-30 18:52:04'),(1680202348448,1680202324833,0,82001,0,0,1546904337054,1,'id,toId:pId','Comment/@column: \"id,toId:pId\"','2023-03-30 18:52:28'),(1680202349937,1680202324833,0,82001,0,0,1546904337054,1,'id,to...','Comment/@column: \"id,toId:father_id\"','2023-03-30 18:52:29'),(1680202426856,1680202232159,0,82001,0,0,1546904437584,1,'%a','User[]/User/name$: \"%a\"','2023-03-30 18:53:46'),(1680202428081,1680202232159,0,82001,0,0,1546904437584,1,'y%','User[]/User/name$: \"y%\"','2023-03-30 18:53:48'),(1680202428943,1680202232159,0,82001,0,0,1546904437584,1,'%b%e%','User[]/User/name$: \"%b%e%\"','2023-03-30 18:53:48'),(1680202429735,1680202232159,0,82001,0,0,1546904437584,1,'_u%','User[]/User/name$: \"_u%\"','2023-03-30 18:53:49'),(1680202430626,1680202232159,0,82001,0,0,1546904437584,1,'%r_','User[]/User/name$: \"%r_\"','2023-03-30 18:53:50'),(1680202431981,1680202232159,0,82001,0,0,1546904437584,1,'_o%k_','User[]/User/name$: \"_o%k_\"','2023-03-30 18:53:51'),(1680202523498,0,0,82001,0,0,1546904394042,8,'ORDER_IN','User[]/User/name~: ORDER_IN(\"^[0-9]+$\", \"^[a-z]+$\", \"^[A-Z]+$\", \"^[A-Za-z]+$\", \"^[A-Za-z0-9]+$\")','2023-03-30 18:55:23'),(1680202532217,1680202523498,0,82001,0,0,1546904394042,1,'^[a-z]+$','User[]/User/name~: \"^[a-z]+$\"','2023-03-30 18:55:32'),(1680202532629,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Z]+$','User[]/User/name~: \"^[A-Z]+$\"','2023-03-30 18:55:32'),(1680202537138,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Za-z]+$','User[]/User/name~: \"^[A-Za-z]+$\"','2023-03-30 18:55:37'),(1680202538510,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Z...','User[]/User/name~: \"^[A-Za-z0-9]+$\"','2023-03-30 18:55:38'),(1680202551688,1680202523498,0,82001,0,0,1546904394042,1,'^[a-z]+$','User[]/User/name~: \"^[a-z]+$\"','2023-03-30 18:55:51'),(1680202551922,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Z]+$','User[]/User/name~: \"^[A-Z]+$\"','2023-03-30 18:55:51'),(1680202553044,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Za-z]+$','User[]/User/name~: \"^[A-Za-z]+$\"','2023-03-30 18:55:53'),(1680202553621,1680202523498,0,82001,0,0,1546904394042,1,'^[A-Z...','User[]/User/name~: \"^[A-Za-z0-9]+$\"','2023-03-30 18:55:53'),(1680202586560,0,0,82001,0,0,1546904162066,30,'ORDER_INT','Moment/praiseUserIdList+/0: ORDER_INT(82001, 82030)\n','2023-03-30 18:56:26'),(1680202605628,1680202586560,0,82001,0,0,1546904162066,1,'82001','Moment/praiseUserIdList+/0: 82001','2023-03-30 18:56:45'),(1680202606062,1680202586560,0,82001,0,0,1546904162066,1,'82002','Moment/praiseUserIdList+/0: 82002','2023-03-30 18:56:46'),(1680202608298,1680202586560,0,82001,0,0,1546904162066,1,'82005','Moment/praiseUserIdList+/0: 82005','2023-03-30 18:56:48'),(1680202627152,1680202586560,0,82001,0,0,1546904162066,1,'82005','Moment/praiseUserIdList+/0: 82005','2023-03-30 18:57:07'),(1680202679924,0,0,82001,0,0,1546904098111,71,'RANDOM_NUM','Privacy/balance+: RANDOM_NUM(-20, 50)','2023-03-30 18:57:59'),(1680202722960,1680202679924,0,82001,0,0,1546904098111,1,'48.68','Privacy/balance+: 48.68','2023-03-30 18:58:42'),(1680202725687,1680202679924,0,82001,0,0,1546904098111,1,'29.08','Privacy/balance+: 29.08','2023-03-30 18:58:45'),(1680202728764,1680202679924,0,82001,0,0,1546904098111,1,'16.36','Privacy/balance+: 16.36','2023-03-30 18:58:48'),(1680202731666,1680202679924,0,82001,0,0,1546904098111,1,'-11.86','Privacy/balance+: -11.86','2023-03-30 18:58:51'),(1680202734285,1680202679924,0,82001,0,0,1546904098111,1,'-3.12','Privacy/balance+: -3.12','2023-03-30 18:58:54'),(1680202737336,1680202679924,0,82001,0,0,1546904098111,1,'17.67','Privacy/balance+: 17.67','2023-03-30 18:58:57'),(1680202738576,1680202679924,0,82001,0,0,1546904098111,1,'9.7','Privacy/balance+: 9.7','2023-03-30 18:58:58'),(1680202739678,1680202679924,0,82001,0,0,1546904098111,1,'49.35','Privacy/balance+: 49.35','2023-03-30 18:58:59'),(1680202740928,1680202679924,0,82001,0,0,1546904098111,1,'25.91','Privacy/balance+: 25.91','2023-03-30 18:59:00'),(1680202742638,1680202679924,0,82001,0,0,1546904098111,1,'17.3','Privacy/balance+: 17.3','2023-03-30 18:59:02'),(1680202743450,1680202679924,0,82001,0,0,1546904098111,1,'29.9','Privacy/balance+: 29.9','2023-03-30 18:59:03'),(1680202744053,1680202679924,0,82001,0,0,1546904098111,1,'25.04','Privacy/balance+: 25.04','2023-03-30 18:59:04'),(1680202744409,1680202679924,0,82001,0,0,1546904098111,1,'38.32','Privacy/balance+: 38.32','2023-03-30 18:59:04'),(1680202745216,1680202679924,0,82001,0,0,1546904098111,1,'41','Privacy/balance+: 41','2023-03-30 18:59:05'),(1680202746151,1680202679924,0,82001,0,0,1546904098111,1,'5.16','Privacy/balance+: 5.16','2023-03-30 18:59:06'),(1680202746433,1680202679924,0,82001,0,0,1546904098111,1,'11.48','Privacy/balance+: 11.48','2023-03-30 18:59:06'),(1680202746779,1680202679924,0,82001,0,0,1546904098111,1,'10.04','Privacy/balance+: 10.04','2023-03-30 18:59:06'),(1680202747161,1680202679924,0,82001,0,0,1546904098111,1,'47.31','Privacy/balance+: 47.31','2023-03-30 18:59:07'),(1680202747734,1680202679924,0,82001,0,0,1546904098111,1,'29.48','Privacy/balance+: 29.48','2023-03-30 18:59:07'),(1680202748734,1680202679924,0,82001,0,0,1546904098111,1,'42.29','Privacy/balance+: 42.29','2023-03-30 18:59:08'),(1680202749001,1680202679924,0,82001,0,0,1546904098111,1,'-1.09','Privacy/balance+: -1.09','2023-03-30 18:59:09'),(1680202749245,1680202679924,0,82001,0,0,1546904098111,1,'32.35','Privacy/balance+: 32.35','2023-03-30 18:59:09'),(1680202806264,0,0,82001,0,0,1522905895591,5,'ORDER_IN','Moment/userId: ORDER_IN(38710, 70793, 82001, 82002, 82020)\n','2023-03-30 19:00:06'),(1680202839402,1680202806264,0,82001,0,0,1522905895591,1,'70793','Moment/userId: 70793','2023-03-30 19:00:39'),(1680202840716,1680202806264,0,82001,0,0,1522905895591,1,'82001','Moment/userId: 82001','2023-03-30 19:00:40'),(1680202843003,1680202806264,0,82001,0,0,1522905895591,1,'82002','Moment/userId: 82002','2023-03-30 19:00:43'),(1680202845174,1680202806264,0,82001,0,0,1522905895591,1,'82020','Moment/userId: 82020','2023-03-30 19:00:45'),(1680203909639,1680101356238,0,82001,0,0,1546414155879,1,'1, 5','[]/count: 1\n[]/page: 5','2023-03-30 19:18:29'),(1680203915296,1680101356238,0,82001,0,0,1546414155879,1,'5, 11','[]/count: 5\n[]/page: 11','2023-03-30 19:18:35'),(1680203916714,1680101356238,0,82001,0,0,1546414155879,1,'1, 5','[]/count: 1\n[]/page: 5','2023-03-30 19:18:36'),(1680203918065,1680101356238,0,82001,0,0,1546414155879,1,'true, 2','[]/count: true\n[]/page: 2','2023-03-30 19:18:38'),(1680203920714,1680101356238,0,82001,0,0,1546414155879,1,'1, 6','[]/count: 1\n[]/page: 6','2023-03-30 19:18:40'),(1680203921255,1680101356238,0,82001,0,0,1546414155879,1,'true, 0','[]/count: true\n[]/page: 0','2023-03-30 19:18:41'),(1680203922644,1680101356238,0,82001,0,0,1546414155879,1,'3, 11','[]/count: 3\n[]/page: 11','2023-03-30 19:18:42'),(1680203923166,1680101356238,0,82001,0,0,1546414155879,1,'true, 5','[]/count: true\n[]/page: 5','2023-03-30 19:18:43'),(1680203926197,1680101356238,0,82001,0,0,1546414155879,1,'a, 6','[]/count: \"a\"\n[]/page: 6','2023-03-30 19:18:46'),(1680203931200,1680101356238,0,82001,0,0,1546414155879,1,'3, 8','[]/count: 3\n[]/page: 8','2023-03-30 19:18:51'),(1680203933485,1680101356238,0,82001,0,0,1546414155879,1,'5, 9','[]/count: 5\n[]/page: 9','2023-03-30 19:18:53'),(1680203934971,1680101356238,0,82001,0,0,1546414155879,1,'1, 8','[]/count: 1\n[]/page: 8','2023-03-30 19:18:54'),(1680203942046,1680101356238,0,82001,0,0,1546414155879,1,'3, 10','[]/count: 3\n[]/page: 10','2023-03-30 19:19:02'),(1680204126715,1662989441967,0,82001,0,0,1511796155276,1,'13000082005','phone: \"13000082005\"','2023-03-30 19:22:06'),(1680204128572,1662989441967,0,82001,0,0,1511796155276,1,'13000082015','phone: \"13000082015\"','2023-03-30 19:22:08'),(1680204129012,1662989441967,0,82001,0,0,1511796155276,1,'13000082004','phone: \"13000082004\"','2023-03-30 19:22:09'),(1680204129538,1662989441967,0,82001,0,0,1511796155276,1,'13000082002','phone: \"13000082002\"','2023-03-30 19:22:09'),(1680204129946,1662989441967,0,82001,0,0,1511796155276,1,'13000082003','phone: \"13000082003\"','2023-03-30 19:22:09'),(1680204130395,1662989441967,0,82001,0,0,1511796155276,1,'13000082001','phone: \"13000082001\"','2023-03-30 19:22:10'),(1680204134836,1662989441967,0,82001,0,0,1511796155276,1,'13000082015','phone: \"13000082015\"','2023-03-30 19:22:14'),(1680204142900,1662989441967,0,82001,0,0,1511796155276,1,'13000082018','phone: \"13000082018\"','2023-03-30 19:22:22'),(1680204144048,1662989441967,0,82001,0,0,1511796155276,1,'13000082008','phone: \"13000082008\"','2023-03-30 19:22:24'),(1680204146558,1662989441967,0,82001,0,0,1511796155276,1,'13000082008','phone: \"13000082008\"','2023-03-30 19:22:26'),(1680204147058,1662989441967,0,82001,0,0,1511796155276,1,'13000082013','phone: \"13000082013\"','2023-03-30 19:22:27'),(1680204147599,1662989441967,0,82001,0,0,1511796155276,1,'13000082004','phone: \"13000082004\"','2023-03-30 19:22:27'),(1680204148081,1662989441967,0,82001,0,0,1511796155276,1,'13000082014','phone: \"13000082014\"','2023-03-30 19:22:28'),(1680204271064,0,0,82001,0,0,1511969630372,3,'ORDER_IN,RANDOM_STR','Comment/momentId: ORDER_IN(12, 15, 235)\nComment/content: RANDOM_STR()\n','2023-03-30 19:24:31'),(1680204298800,1680204271064,0,82001,0,0,1511969630372,1,'12, Ab_Cd...','Comment/momentId: 12\nComment/content: \"Ab_Cd6844800776712211\"','2023-03-30 19:24:58'),(1680204300205,1680204271064,0,82001,0,0,1511969630372,1,'15, Ab_Cd...','Comment/momentId: 15\nComment/content: \"Ab_Cd-8926385067555135\"','2023-03-30 19:25:00'),(1680204301392,1680204271064,0,82001,0,0,1511969630372,1,'235, Ab_Cd...','Comment/momentId: 235\nComment/content: \"Ab_Cd4426623868886511\"','2023-03-30 19:25:01'),(1680289150185,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 1, 10','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 1\nlimit: 10','2023-03-31 18:59:10'),(1680289151607,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 3, 3','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 3\nlimit: 3','2023-03-31 18:59:11'),(1680289152463,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 5, 10','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 5\nlimit: 10','2023-03-31 18:59:12'),(1680289152708,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 3, 1','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 3\nlimit: 1','2023-03-31 18:59:12'),(1680289153762,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 2, 5','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 2\nlimit: 5','2023-03-31 18:59:13'),(1680289154089,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 1, 3','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 1\nlimit: 3','2023-03-31 18:59:14'),(1680289154458,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 4, 1','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 4\nlimit: 1','2023-03-31 18:59:14'),(1680289155606,1662603588008,0,82003,0,0,1662603529187,1,'an, an, an, 1, 1','searchKey1: \'an\'\nsearchKey2: \'an\'\nsearchKey3: \'an\'\noffset: 1\nlimit: 1','2023-03-31 18:59:15'),(1680289340849,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 5, 3','searchKey: \'%a%\'\nuserId: 82002\nlimit: 5\noffset: 3','2023-03-31 19:02:20'),(1680289341206,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 3, 2','searchKey: \'%a%\'\nuserId: 82002\nlimit: 3\noffset: 2','2023-03-31 19:02:21'),(1680289341894,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 1, 3','searchKey: \'%a%\'\nuserId: 82002\nlimit: 1\noffset: 3','2023-03-31 19:02:21'),(1680289342821,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 5, 2','searchKey: \'%a%\'\nuserId: 82002\nlimit: 5\noffset: 2','2023-03-31 19:02:22'),(1680289343326,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 3, 3','searchKey: \'%a%\'\nuserId: 82002\nlimit: 3\noffset: 3','2023-03-31 19:02:23'),(1680289343796,1663749767628,0,82003,0,0,1663749767546,1,'%a%, 82002, 1, 3','searchKey: \'%a%\'\nuserId: 82002\nlimit: 1\noffset: 3','2023-03-31 19:02:23'),(1680752426370,0,0,82001,0,0,1560737118846,2,'随机配置 2023-04-06 11:40','','2023-04-06 03:40:26'),(1680757832450,1678424346769,0,82001,0,0,1678424346646,1,'[..3..]','methodArgs: [\"int:2\",\"int:8\",{\"type\":\"func(int,int)int\",\"value\":{\"type\":\"int\",\"return\":5,\"callback\":true}}]','2023-04-06 05:10:32'),(1681030706870,0,0,82001,0,0,1678946364270,50,'随机配置 2023-04-09 16:58','methodArgs/0/value: ORDER_INT(-10, 100)\nmethodArgs/1/value: RANDOM_NUM(-9.9, 99.99)\n','2023-04-09 08:58:26'),(1681207794001,1681030706870,0,82001,0,0,1678946364270,1,'-9, 62.19','methodArgs/0/value: -9\nmethodArgs/1/value: 62.19','2023-04-11 10:09:54'),(1681207795249,1681030706870,0,82001,0,0,1678946364270,1,'-7, 21.61','methodArgs/0/value: -7\nmethodArgs/1/value: 21.61','2023-04-11 10:09:55'),(1681207795634,1681030706870,0,82001,0,0,1678946364270,1,'-6, 33.81','methodArgs/0/value: -6\nmethodArgs/1/value: 33.81','2023-04-11 10:09:55'),(1681207796559,1681030706870,0,82001,0,0,1678946364270,1,'4, 50.27','methodArgs/0/value: 4\nmethodArgs/1/value: 50.27','2023-04-11 10:09:56'),(1681207797031,1681030706870,0,82001,0,0,1678946364270,1,'3, 13.74','methodArgs/0/value: 3\nmethodArgs/1/value: 13.74','2023-04-11 10:09:57'),(1681207797660,1681030706870,0,82001,0,0,1678946364270,1,'2, 38.46','methodArgs/0/value: 2\nmethodArgs/1/value: 38.46','2023-04-11 10:09:57'),(1681207799650,1681030706870,0,82001,0,0,1678946364270,1,'23, 62.73','methodArgs/0/value: 23\nmethodArgs/1/value: 62.73','2023-04-11 10:09:59'),(1681207800071,1681030706870,0,82001,0,0,1678946364270,1,'24, 97.23','methodArgs/0/value: 24\nmethodArgs/1/value: 97.23','2023-04-11 10:10:00'),(1681207801029,1681030706870,0,82001,0,0,1678946364270,1,'25, 92.57','methodArgs/0/value: 25\nmethodArgs/1/value: 92.57','2023-04-11 10:10:01'),(1681207810230,1681030706870,0,82001,0,0,1678946364270,1,'26, 29.54','methodArgs/0/value: 26\nmethodArgs/1/value: 29.54','2023-04-11 10:10:10'),(1681207819346,1681030706870,0,82001,0,0,1678946364270,1,'7, 37.73','methodArgs/0/value: 7\nmethodArgs/1/value: 37.73','2023-04-11 10:10:19'),(1681207819886,1681030706870,0,82001,0,0,1678946364270,1,'8, 55','methodArgs/0/value: 8\nmethodArgs/1/value: 55','2023-04-11 10:10:19'),(1681207820471,1681030706870,0,82001,0,0,1678946364270,1,'9, -0.25','methodArgs/0/value: 9\nmethodArgs/1/value: -0.25','2023-04-11 10:10:20'),(1681207823241,1681030706870,0,82001,0,0,1678946364270,1,'37, -8.18','methodArgs/0/value: 37\nmethodArgs/1/value: -8.18','2023-04-11 10:10:23'),(1681207823690,1681030706870,0,82001,0,0,1678946364270,1,'38, 91.44','methodArgs/0/value: 38\nmethodArgs/1/value: 91.44','2023-04-11 10:10:23'),(1681207824090,1681030706870,0,82001,0,0,1678946364270,1,'39, -1.13','methodArgs/0/value: 39\nmethodArgs/1/value: -1.13','2023-04-11 10:10:24'),(1682433103869,0,0,82002,0,0,1682433103665,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2023-04-25 14:31:43'),(1682434635561,0,0,82002,0,0,1682434635082,1,'默认配置(上传测试用例时自动生成)','name: ORDER_IN(undefined, null, \"\", \"定时推送示例\")\nenabled: ORDER_IN(undefined, null, false, true)\ntrigger/single/time: ORDER_IN(undefined, null, \"\", \"2022-11-23 19:20:00\")\ntrigger/single/zone_type: ORDER_INT(0, 10)\n // 可替代上面的 trigger/single/zone_type: RANDOM_INT(0, 100)\npush/from: ORDER_IN(undefined, null, \"\", \"push\")\npush/to/registration_id: ORDER_IN(undefined, null, [], [\"1a0018970ab49abda3e\"], [\"100d85590955c1d2793\"], [\"1a0018970ab49abda3e\",\"100d85590955c1d2793\"])\npush/body/platform: ORDER_IN(undefined, null, \"\", \"android\")\npush/body/notification/alert: ORDER_IN(undefined, null, \"\", \"api终端定时任务\")\npush/body/notification/android/title: ORDER_IN(undefined, null, \"\", \"api终端定时任务\")\npush/body/notification/android/extras/key1: ORDER_IN(undefined, null, \"\", \"value1\")\npush/body/options/time_to_live: RANDOM_INT(0, 100)\npush/request_id: ORDER_IN(undefined, null, \"\", \"12345\")\npush/custom_args: ORDER_IN(undefined, null, \"\", \"business info\")','2023-04-25 14:57:15'),(1682435154169,0,0,82002,0,0,1682435153810,1,'默认配置(上传测试用例时自动生成)','total: ORDER_INT(0, 10)\n // 可替代上面的 total: RANDOM_INT(0, 100)\nrows: ORDER_IN(undefined, null, [], [{\"message_id\":\"1666165485030094861\",\"from\":\"\",\"to\":\"\",\"server\":\"AppPush\",\"channel\":\"FCM\",\"custom_args\":{},\"itime\":1640707579,\"status\":{\"message_status\":\"delivered\",\"status_data\":{\"channel_message_id\":\"wamid.123321abcdefed==\"},\"error_code\":0,\"error_detail\":{\"message\":\"\"},\"loss\":{\"loss_source\":\"vivo\",\"loss_step\":1}}}])','2023-04-25 15:05:54'),(1682435294721,0,0,82002,0,0,1682435294373,1,'默认配置(上传测试用例时自动生成)','message_ids: ORDER_IN(undefined, null, \"\", \"1613113584,1229760629\")','2023-04-25 15:08:14'),(1682435911149,0,0,82002,0,0,1682435910743,1,'默认配置(上传测试用例时自动生成)','from: ORDER_IN(undefined, null, \"\", \"push\")\nto: ORDER_IN(undefined, null, \"\", \"all\")\nbody/platform: ORDER_IN(undefined, null, \"\", \"all\")\nbody/notification/android/alert: ORDER_IN(undefined, null, \"\", \"Hi, Push!\")\nbody/notification/android/title: ORDER_IN(undefined, null, \"\", \"Send to Android\")\nbody/notification/android/builder_id: ORDER_IN(undefined, null, 1)\n // 可替代上面的 body/notification/android/builder_id: RANDOM_INT(1, 10)\nbody/notification/android/extras/newsid: RANDOM_INT(0, 32100)\n // 可替代上面的 body/notification/android/extras/newsid: RANDOM_INT(0, 32100)\nbody/notification/ios/alert: ORDER_IN(undefined, null, \"\", \"Hi, MTPush!\")\nbody/notification/ios/sound: ORDER_IN(undefined, null, \"\", \"default\")\nbody/notification/ios/badge: ORDER_IN(undefined, null, \"\", \"+1\")\nbody/notification/ios/extras/newsid: RANDOM_INT(0, 32100)\n // 可替代上面的 body/notification/ios/extras/newsid: RANDOM_INT(0, 32100)\nbody/message/msg_content: ORDER_IN(undefined, null, \"\", \"Hi,MTPush\")\nbody/message/content_type: ORDER_IN(undefined, null, \"\", \"text\")\nbody/message/title: ORDER_IN(undefined, null, \"\", \"msg\")\nbody/message/extras/key: ORDER_IN(undefined, null, \"\", \"value\")\nbody/options/time_to_live: RANDOM_INT(0, 100)\nbody/options/apns_production: ORDER_IN(undefined, null, false, true)\nrequest_id: ORDER_IN(undefined, null, \"\", \"12345678\")\ncustom_args: ORDER_IN(undefined, null, \"\", \"business info\")','2023-04-25 15:18:31'),(1682436186568,0,0,82002,0,0,1682436186370,1,'默认配置(上传测试用例时自动生成)','from: ORDER_IN(undefined, null, \"\", \"+8613800138000\")\nto: ORDER_IN(undefined, null, [], [\"00447911123456\"])\nbody/type: ORDER_IN(undefined, null, \"\", \"template\")\nbody/template/name: ORDER_IN(undefined, null, \"\", \"code\")\nbody/template/language: ORDER_IN(undefined, null, \"\", \"zh_CN\")\nbody/template/components: ORDER_IN(undefined, null, [], [{\"type\":\"body\",\"parameters\":[{\"type\":\"text\",\"text\":\"12345\"}]}])\nrequest_id: ORDER_IN(undefined, null, \"\", \"123asdbbqwe9faweg\")\ncustom_args/arg1: ORDER_IN(undefined, null, \"\", \"string val\")\ncustom_args/arg2: RANDOM_INT(0, 12300)\n // 可替代上面的 custom_args/arg2: RANDOM_INT(0, 12300)','2023-04-25 15:23:06'),(1682437178516,0,0,82002,0,0,1682437178141,1,'默认配置(上传测试用例时自动生成)','total: ORDER_INT(0, 10)\n // 可替代上面的 total: RANDOM_INT(0, 100)\nrows: ORDER_IN(undefined, null, [], [{\"message_id\":\"1666165485030094861\",\"from\":\"\",\"to\":\"\",\"server\":\"whatsapp\",\"channel\":\"whatsapp\",\"itime\":1640707579,\"custom_args\":{},\"status\":{\"message_status\":\"delivered\",\"status_data\":{\"msg_time\":1663432355,\"channel_message_id\":\"wamid.123321abcdefed==\",\"whatsapp_business_account_id\":\"\",\"timezone\":\"\",\"plan_user_total\":2007,\"country_code\":\"CN\",\"from_phone_id\":\"111111\",\"conversation\":{\"id\":\"ebe2398cdaa37a0899ca5268b987b0c8\",\"origin\":{\"type\":\"business_initiated\"}},\"pricing\":{\"pricing_model\":\"CBP\",\"category\":\"business_initiated\"}},\"error_code\":0,\"error_detail\":{\"message\":\"\"},\"loss\":{\"loss_step\":1,\"loss_source\":\"aa\"}}}])','2023-04-25 15:39:38'),(1683353123110,0,0,82001,0,0,1634666781005,1,'随机配置 2023-05-06 14:05','methodArgs: ORDER_IN(undefined, null, [], [\"Long:1\"], [\"Long:2\"], [\"Long:1\",\"Long:2\"])','2023-05-06 06:05:23'),(1685936444062,1678424346769,0,82001,0,0,1678424346646,1,'[..3..]','methodArgs: [\"int:2\",\"int:8\",{\"type\":\"func(int,int)int\",\"value\":{\"type\":\"int\",\"return\":5,\"callback\":true}}]','2023-06-05 03:40:44'),(1686497411523,1680201830209,0,82001,0,0,1521907333044,1,'82001, 3','User/id: 82001\nMoment-firstPicture[]/count: 3','2023-06-11 15:30:11'),(1687626343025,0,0,82001,0,0,1687626342940,5,'默认配置(上传测试用例时自动生成)','classArgs: ORDER_IN(undefined, null, [], [12])','2023-06-24 17:05:43'),(1688712102646,0,0,1688710551421,0,0,1688712102374,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2023-07-07 06:41:42'),(1689683593889,0,0,82001,0,0,1682176720349,1,'随机配置 2023-07-18 20:33','','2023-07-18 12:33:13'),(1692085240075,0,0,82001,0,0,1684293776769,1,'随机配置 2023-08-15 15:39','','2023-08-15 07:40:40'),(1692340270860,0,0,82001,0,0,1683536364665,1,'随机配置 2023-08-18 14:31','','2023-08-18 06:31:10'),(1692600834699,0,0,82001,0,0,1684293776769,1,'随机配置 2023-08-21 14:53','','2023-08-21 06:53:54'),(1692600856634,0,0,82001,0,0,1684293776769,1,'随机配置 2023-08-21 14:54','','2023-08-21 06:54:16'),(1692709494510,0,0,82001,0,0,1692709494416,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-22 13:04:54'),(1692709494525,0,0,82001,0,0,1692709494416,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-22 13:04:54'),(1692759487814,0,0,82001,0,0,1564907459034,1,'随机配置 2023-08-23 10:58','','2023-08-23 02:58:07'),(1692791653443,0,0,82001,0,0,1692791652891,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-23 11:54:13'),(1692791653490,0,0,82001,0,0,1692791652891,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-23 11:54:13'),(1692791656284,0,0,82001,0,0,1692791648052,5,'默认配置(上传测试用例时自动生成)','begin: ORDER_IN(undefined, null, \"\")\nend: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656348,0,0,82001,0,0,1692791648052,5,'默认配置(上传测试用例时自动生成)','begin: RANDOM_IN(undefined, null, \"\")\nend: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656414,0,0,82001,0,0,1692791648342,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656458,0,0,82001,0,0,1692791648342,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656507,0,0,82001,0,0,1692791648495,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656557,0,0,82001,0,0,1692791648495,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656611,0,0,82001,0,0,1692791648627,5,'默认配置(上传测试用例时自动生成)','barrageId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656723,0,0,82001,0,0,1692791648682,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:16'),(1692791656783,0,0,82001,0,0,1692791648682,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:16'),(1692791656846,0,0,82001,0,0,1692791648706,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:16'),(1692791656883,0,0,82001,0,0,1692791648706,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:16'),(1692791656914,0,0,82001,0,0,1692791648781,5,'默认配置(上传测试用例时自动生成)','barrageId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:16'),(1692791656975,0,0,82001,0,0,1692791648781,5,'默认配置(上传测试用例时自动生成)','barrageId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791656999,0,0,82001,0,0,1692791648627,5,'默认配置(上传测试用例时自动生成)','barrageId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657109,0,0,82001,0,0,1692791648842,5,'默认配置(上传测试用例时自动生成)','busiType: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657127,0,0,82001,0,0,1692791648842,5,'默认配置(上传测试用例时自动生成)','busiType: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657278,0,0,82001,0,0,1692791649113,5,'默认配置(上传测试用例时自动生成)','path: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657305,0,0,82001,0,0,1692791649113,5,'默认配置(上传测试用例时自动生成)','path: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657378,0,0,82001,0,0,1692791649224,5,'默认配置(上传测试用例时自动生成)','year: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657384,0,0,82001,0,0,1692791649224,5,'默认配置(上传测试用例时自动生成)','year: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657448,0,0,82001,0,0,1692791649403,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657473,0,0,82001,0,0,1692791649385,5,'默认配置(上传测试用例时自动生成)','pkLevel: ORDER_INT(0, 10)\n// 可替代上面的 kLevel: RANDOM_INT(0, 100)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657475,0,0,82001,0,0,1692791649403,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657496,0,0,82001,0,0,1692791649385,5,'默认配置(上传测试用例时自动生成)','pkLevel: RANDOM_INT(0, 10)\n// 可替代上面的 kLevel: RANDOM_INT(0, 100)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657574,0,0,82001,0,0,1692791649496,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657608,0,0,82001,0,0,1692791649198,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657609,0,0,82001,0,0,1692791649198,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657631,0,0,82001,0,0,1692791649496,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657735,0,0,82001,0,0,1692791649582,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657758,0,0,82001,0,0,1692791649582,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657776,0,0,82001,0,0,1692791649654,5,'默认配置(上传测试用例时自动生成)','asc: ORDER_IN(undefined, null, false, true)\nholderId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 olderId: RANDOM_INT(1, 10)\nholderName: ORDER_IN(undefined, null, \"\")\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657815,0,0,82001,0,0,1692791649654,5,'默认配置(上传测试用例时自动生成)','asc: RANDOM_IN(undefined, null, false, true)\nholderId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 olderId: RANDOM_INT(1, 10)\nholderName: RANDOM_IN(undefined, null, \"\")\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:17'),(1692791657850,0,0,82001,0,0,1692791649170,5,'默认配置(上传测试用例时自动生成)','type: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:17'),(1692791657978,0,0,82001,0,0,1692791649878,5,'默认配置(上传测试用例时自动生成)','max: RANDOM_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: RANDOM_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:18'),(1692791657980,0,0,82001,0,0,1692791649721,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:18'),(1692791658019,0,0,82001,0,0,1692791649170,5,'默认配置(上传测试用例时自动生成)','type: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658036,0,0,82001,0,0,1692791649878,5,'默认配置(上传测试用例时自动生成)','max: ORDER_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: ORDER_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:18'),(1692791658102,0,0,82001,0,0,1692791649947,5,'默认配置(上传测试用例时自动生成)','holderName: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658167,0,0,82001,0,0,1692791649947,5,'默认配置(上传测试用例时自动生成)','holderName: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658208,0,0,82001,0,0,1692791649751,5,'默认配置(上传测试用例时自动生成)','max: RANDOM_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: RANDOM_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:18'),(1692791658232,0,0,82001,0,0,1692791649721,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:18'),(1692791658300,0,0,82001,0,0,1692791649751,5,'默认配置(上传测试用例时自动生成)','max: ORDER_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: ORDER_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:18'),(1692791658320,0,0,82001,0,0,1692791649524,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:18'),(1692791658322,0,0,82001,0,0,1692791649524,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:18'),(1692791658420,0,0,82001,0,0,1692791650009,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658422,0,0,82001,0,0,1692791650045,5,'默认配置(上传测试用例时自动生成)','year: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658423,0,0,82001,0,0,1692791650009,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658443,0,0,82001,0,0,1692791650045,5,'默认配置(上传测试用例时自动生成)','year: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658501,0,0,82001,0,0,1692791650201,5,'默认配置(上传测试用例时自动生成)','path: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658515,0,0,82001,0,0,1692791650201,5,'默认配置(上传测试用例时自动生成)','path: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658589,0,0,82001,0,0,1692791650363,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658603,0,0,82001,0,0,1692791650383,5,'默认配置(上传测试用例时自动生成)','name: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658612,0,0,82001,0,0,1692791650363,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658614,0,0,82001,0,0,1692791650383,5,'默认配置(上传测试用例时自动生成)','name: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658648,0,0,82001,0,0,1692791650490,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658722,0,0,82001,0,0,1692791650490,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:18'),(1692791658836,0,0,82001,0,0,1692791650516,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791658878,0,0,82001,0,0,1692791650560,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")\nfoldMinPrice: ORDER_INT(0, 10)\n// 可替代上面的 oldMinPrice: RANDOM_INT(0, 100)','2023-08-23 11:54:19'),(1692791658881,0,0,82001,0,0,1692791650560,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")\nfoldMinPrice: RANDOM_INT(0, 10)\n// 可替代上面的 oldMinPrice: RANDOM_INT(0, 100)','2023-08-23 11:54:19'),(1692791658919,0,0,82001,0,0,1692791650608,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791658931,0,0,82001,0,0,1692791650608,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791658934,0,0,82001,0,0,1692791650516,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659124,0,0,82001,0,0,1692791650861,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659169,0,0,82001,0,0,1692791650951,5,'默认配置(上传测试用例时自动生成)','failures: ORDER_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659171,0,0,82001,0,0,1692791650951,5,'默认配置(上传测试用例时自动生成)','failures: RANDOM_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659174,0,0,82001,0,0,1692791650861,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659175,0,0,82001,0,0,1692791650938,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659243,0,0,82001,0,0,1692791650938,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659361,0,0,82001,0,0,1692791650895,5,'默认配置(上传测试用例时自动生成)','codes: []','2023-08-23 11:54:19'),(1692791659370,0,0,82001,0,0,1692791651016,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659380,0,0,82001,0,0,1692791651013,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659408,0,0,82001,0,0,1692791651016,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659411,0,0,82001,0,0,1692791650895,5,'默认配置(上传测试用例时自动生成)','codes: []\ncodes/0: ORDER_IN(undefined, null)\ncodes/1: ORDER_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659422,0,0,82001,0,0,1692791651013,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:19'),(1692791659534,0,0,82001,0,0,1692791651778,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659536,0,0,82001,0,0,1692791651449,5,'默认配置(上传测试用例时自动生成)','stockCode: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659538,0,0,82001,0,0,1692791651778,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659560,0,0,82001,0,0,1692791651328,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659561,0,0,82001,0,0,1692791651328,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659582,0,0,82001,0,0,1692791651449,5,'默认配置(上传测试用例时自动生成)','stockCode: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:19'),(1692791659751,0,0,82001,0,0,1692791652362,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659753,0,0,82001,0,0,1692791652426,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659786,0,0,82001,0,0,1692791652426,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659800,0,0,82001,0,0,1692791652362,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659815,0,0,82001,0,0,1692791652750,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659855,0,0,82001,0,0,1692791652750,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:54:19'),(1692791659987,0,0,82001,0,0,1692791652790,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:20'),(1692791660022,0,0,82001,0,0,1692791652843,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:20'),(1692791660034,0,0,82001,0,0,1692791653106,5,'默认配置(上传测试用例时自动生成)','keyword: RANDOM_IN(undefined, null, \"\")\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:20'),(1692791660036,0,0,82001,0,0,1692791652790,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:20'),(1692791660068,0,0,82001,0,0,1692791653106,5,'默认配置(上传测试用例时自动生成)','keyword: ORDER_IN(undefined, null, \"\")\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:20'),(1692791660128,0,0,82001,0,0,1692791652843,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:20'),(1692791660243,0,0,82001,0,0,1692791653281,5,'默认配置(上传测试用例时自动生成)','requestId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660261,0,0,82001,0,0,1692791653165,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:20'),(1692791660269,0,0,82001,0,0,1692791653281,5,'默认配置(上传测试用例时自动生成)','requestId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660272,0,0,82001,0,0,1692791653509,5,'默认配置(上传测试用例时自动生成)','file: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660290,0,0,82001,0,0,1692791653165,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:20'),(1692791660324,0,0,82001,0,0,1692791653509,5,'默认配置(上传测试用例时自动生成)','file: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660437,0,0,82001,0,0,1692791653758,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")\nrequestId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660454,0,0,82001,0,0,1692791653806,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660487,0,0,82001,0,0,1692791653864,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660497,0,0,82001,0,0,1692791653806,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660503,0,0,82001,0,0,1692791653758,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")\nrequestId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660525,0,0,82001,0,0,1692791653864,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660611,0,0,82001,0,0,1692791654310,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660612,0,0,82001,0,0,1692791654398,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660629,0,0,82001,0,0,1692791654398,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660657,0,0,82001,0,0,1692791654310,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660673,0,0,82001,0,0,1692791654857,5,'默认配置(上传测试用例时自动生成)','endTime: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660683,0,0,82001,0,0,1692791654857,5,'默认配置(上传测试用例时自动生成)','endTime: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660773,0,0,82001,0,0,1692791655651,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660798,0,0,82001,0,0,1692791655706,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660801,0,0,82001,0,0,1692791655651,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660845,0,0,82001,0,0,1692791655755,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660877,0,0,82001,0,0,1692791655706,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:20'),(1692791660903,0,0,82001,0,0,1692791655755,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661039,0,0,82001,0,0,1692791656101,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661045,0,0,82001,0,0,1692791656231,5,'默认配置(上传测试用例时自动生成)','agent: RANDOM_IN(undefined, null, \"\")\nreqDtos: RANDOM_IN(undefined, null)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:21'),(1692791661081,0,0,82001,0,0,1692791656231,5,'默认配置(上传测试用例时自动生成)','agent: ORDER_IN(undefined, null, \"\")\nreqDtos: ORDER_IN(undefined, null)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:21'),(1692791661092,0,0,82001,0,0,1692791656384,5,'默认配置(上传测试用例时自动生成)','sort: ORDER_IN(undefined, null, \"\", \"DESC\")\ntarget: ORDER_IN(undefined, null, \"\")\ntype: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661094,0,0,82001,0,0,1692791656384,5,'默认配置(上传测试用例时自动生成)','sort: RANDOM_IN(undefined, null, \"\", \"DESC\")\ntarget: RANDOM_IN(undefined, null, \"\")\ntype: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661147,0,0,82001,0,0,1692791656101,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661266,0,0,82001,0,0,1692791657124,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:21'),(1692791661274,0,0,82001,0,0,1692791657035,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791661308,0,0,82001,0,0,1692791657124,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:21'),(1692791661327,0,0,82001,0,0,1692791657035,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:21'),(1692791696318,0,0,82001,0,0,1692791689150,5,'默认配置(上传测试用例时自动生成)','begin: RANDOM_IN(undefined, null, \"\")\nend: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696369,0,0,82001,0,0,1692791689150,5,'默认配置(上传测试用例时自动生成)','begin: ORDER_IN(undefined, null, \"\")\nend: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696409,0,0,82001,0,0,1692791689384,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:56'),(1692791696430,0,0,82001,0,0,1692791689384,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:56'),(1692791696607,0,0,82001,0,0,1692791689426,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696653,0,0,82001,0,0,1692791689426,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696696,0,0,82001,0,0,1692791689475,5,'默认配置(上传测试用例时自动生成)','barrageId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696735,0,0,82001,0,0,1692791689475,5,'默认配置(上传测试用例时自动生成)','barrageId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696757,0,0,82001,0,0,1692791689522,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:56'),(1692791696819,0,0,82001,0,0,1692791689522,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:56'),(1692791696852,0,0,82001,0,0,1692791689688,5,'默认配置(上传测试用例时自动生成)','year: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791696905,0,0,82001,0,0,1692791689688,5,'默认配置(上传测试用例时自动生成)','year: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:56'),(1692791697015,0,0,82001,0,0,1692791689618,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697045,0,0,82001,0,0,1692791689524,5,'默认配置(上传测试用例时自动生成)','barrageId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697112,0,0,82001,0,0,1692791689524,5,'默认配置(上传测试用例时自动生成)','barrageId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697135,0,0,82001,0,0,1692791689618,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697200,0,0,82001,0,0,1692791690063,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697211,0,0,82001,0,0,1692791690110,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697223,0,0,82001,0,0,1692791690007,5,'默认配置(上传测试用例时自动生成)','path: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697323,0,0,82001,0,0,1692791690007,5,'默认配置(上传测试用例时自动生成)','path: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697345,0,0,82001,0,0,1692791690063,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697394,0,0,82001,0,0,1692791690165,5,'默认配置(上传测试用例时自动生成)','busiType: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697443,0,0,82001,0,0,1692791690110,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697486,0,0,82001,0,0,1692791690165,5,'默认配置(上传测试用例时自动生成)','busiType: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:57'),(1692791697494,0,0,82001,0,0,1692791690228,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697530,0,0,82001,0,0,1692791690228,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697587,0,0,82001,0,0,1692791690267,5,'默认配置(上传测试用例时自动生成)','pkLevel: ORDER_INT(0, 10)\n// 可替代上面的 kLevel: RANDOM_INT(0, 100)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697610,0,0,82001,0,0,1692791690267,5,'默认配置(上传测试用例时自动生成)','pkLevel: RANDOM_INT(0, 10)\n// 可替代上面的 kLevel: RANDOM_INT(0, 100)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697652,0,0,82001,0,0,1692791690335,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697729,0,0,82001,0,0,1692791690546,5,'默认配置(上传测试用例时自动生成)','asc: ORDER_IN(undefined, null, false, true)\nholderId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 olderId: RANDOM_INT(1, 10)\nholderName: ORDER_IN(undefined, null, \"\")\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697731,0,0,82001,0,0,1692791690546,5,'默认配置(上传测试用例时自动生成)','asc: RANDOM_IN(undefined, null, false, true)\nholderId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 olderId: RANDOM_INT(1, 10)\nholderName: RANDOM_IN(undefined, null, \"\")\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697751,0,0,82001,0,0,1692791690335,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:57'),(1692791697793,0,0,82001,0,0,1692791690599,5,'默认配置(上传测试用例时自动生成)','max: ORDER_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: ORDER_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:57'),(1692791697844,0,0,82001,0,0,1692791690599,5,'默认配置(上传测试用例时自动生成)','max: RANDOM_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: RANDOM_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:57'),(1692791697954,0,0,82001,0,0,1692791690404,5,'默认配置(上传测试用例时自动生成)','type: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791697957,0,0,82001,0,0,1692791690404,5,'默认配置(上传测试用例时自动生成)','type: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791697959,0,0,82001,0,0,1692791690673,5,'默认配置(上传测试用例时自动生成)','max: RANDOM_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: RANDOM_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:58'),(1692791697963,0,0,82001,0,0,1692791690673,5,'默认配置(上传测试用例时自动生成)','max: ORDER_INT(0, 10)\n// 可替代上面的 ax: RANDOM_INT(0, 100)\nmin: ORDER_INT(0, 10)\n// 可替代上面的 in: RANDOM_INT(0, 100)','2023-08-23 11:54:58'),(1692791698015,0,0,82001,0,0,1692791690629,5,'默认配置(上传测试用例时自动生成)','year: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698097,0,0,82001,0,0,1692791690726,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698219,0,0,82001,0,0,1692791690452,5,'默认配置(上传测试用例时自动生成)','holderName: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698220,0,0,82001,0,0,1692791690452,5,'默认配置(上传测试用例时自动生成)','holderName: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698226,0,0,82001,0,0,1692791690808,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698259,0,0,82001,0,0,1692791690629,5,'默认配置(上传测试用例时自动生成)','year: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698260,0,0,82001,0,0,1692791690726,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698353,0,0,82001,0,0,1692791690808,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698507,0,0,82001,0,0,1692791690775,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")\nfoldMinPrice: RANDOM_INT(0, 10)\n// 可替代上面的 oldMinPrice: RANDOM_INT(0, 100)','2023-08-23 11:54:58'),(1692791698509,0,0,82001,0,0,1692791690971,5,'默认配置(上传测试用例时自动生成)','path: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698527,0,0,82001,0,0,1692791690887,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:58'),(1692791698529,0,0,82001,0,0,1692791690971,5,'默认配置(上传测试用例时自动生成)','path: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698557,0,0,82001,0,0,1692791690887,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:58'),(1692791698624,0,0,82001,0,0,1692791690775,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")\nfoldMinPrice: ORDER_INT(0, 10)\n// 可替代上面的 oldMinPrice: RANDOM_INT(0, 100)','2023-08-23 11:54:58'),(1692791698707,0,0,82001,0,0,1692791691067,5,'默认配置(上传测试用例时自动生成)','code: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698739,0,0,82001,0,0,1692791691119,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698741,0,0,82001,0,0,1692791691067,5,'默认配置(上传测试用例时自动生成)','code: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698772,0,0,82001,0,0,1692791691180,5,'默认配置(上传测试用例时自动生成)','failures: RANDOM_IN(undefined, null)','2023-08-23 11:54:58'),(1692791698774,0,0,82001,0,0,1692791691119,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:58'),(1692791698803,0,0,82001,0,0,1692791691180,5,'默认配置(上传测试用例时自动生成)','failures: ORDER_IN(undefined, null)','2023-08-23 11:54:58'),(1692791698954,0,0,82001,0,0,1692791691013,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791698993,0,0,82001,0,0,1692791691013,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699016,0,0,82001,0,0,1692791691296,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699040,0,0,82001,0,0,1692791691296,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699060,0,0,82001,0,0,1692791691356,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699166,0,0,82001,0,0,1692791691356,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699234,0,0,82001,0,0,1692791691413,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699236,0,0,82001,0,0,1692791691413,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699265,0,0,82001,0,0,1692791691460,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699282,0,0,82001,0,0,1692791691564,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699293,0,0,82001,0,0,1692791691460,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699400,0,0,82001,0,0,1692791691564,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699418,0,0,82001,0,0,1692791691752,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699443,0,0,82001,0,0,1692791692037,5,'默认配置(上传测试用例时自动生成)','chosenDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699516,0,0,82001,0,0,1692791691752,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:54:59'),(1692791699559,0,0,82001,0,0,1692791692113,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:59'),(1692791699561,0,0,82001,0,0,1692791692037,5,'默认配置(上传测试用例时自动生成)','chosenDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699588,0,0,82001,0,0,1692791692113,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:59'),(1692791699621,0,0,82001,0,0,1692791692473,5,'默认配置(上传测试用例时自动生成)','stockCode: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699710,0,0,82001,0,0,1692791692473,5,'默认配置(上传测试用例时自动生成)','stockCode: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699732,0,0,82001,0,0,1692791692604,5,'默认配置(上传测试用例时自动生成)','name: ORDER_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699734,0,0,82001,0,0,1692791692604,5,'默认配置(上传测试用例时自动生成)','name: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:54:59'),(1692791699761,0,0,82001,0,0,1692791692705,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:59'),(1692791699810,0,0,82001,0,0,1692791692759,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:54:59'),(1692791699844,0,0,82001,0,0,1692791692705,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:54:59'),(1692791699931,0,0,82001,0,0,1692791693285,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:55:00'),(1692791699932,0,0,82001,0,0,1692791692759,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791699950,0,0,82001,0,0,1692791693097,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791699953,0,0,82001,0,0,1692791693224,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791699994,0,0,82001,0,0,1692791693285,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:55:00'),(1692791699997,0,0,82001,0,0,1692791693224,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700151,0,0,82001,0,0,1692791693097,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 1)\n// 可替代上面的 d: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791700167,0,0,82001,0,0,1692791693396,5,'默认配置(上传测试用例时自动生成)','requestId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700172,0,0,82001,0,0,1692791693339,5,'默认配置(上传测试用例时自动生成)','keyword: ORDER_IN(undefined, null, \"\")\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791700198,0,0,82001,0,0,1692791693396,5,'默认配置(上传测试用例时自动生成)','requestId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700227,0,0,82001,0,0,1692791693339,5,'默认配置(上传测试用例时自动生成)','keyword: RANDOM_IN(undefined, null, \"\")\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791700266,0,0,82001,0,0,1692791693885,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791700385,0,0,82001,0,0,1692791694096,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700407,0,0,82001,0,0,1692791693928,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700415,0,0,82001,0,0,1692791694096,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700447,0,0,82001,0,0,1692791693885,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:00'),(1692791700458,0,0,82001,0,0,1692791693928,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700514,0,0,82001,0,0,1692791693988,5,'默认配置(上传测试用例时自动生成)','req: RANDOM_IN(undefined, null)','2023-08-23 11:55:00'),(1692791700544,0,0,82001,0,0,1692791694355,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700545,0,0,82001,0,0,1692791694042,5,'默认配置(上传测试用例时自动生成)','endTime: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700572,0,0,82001,0,0,1692791693988,5,'默认配置(上传测试用例时自动生成)','req: ORDER_IN(undefined, null)','2023-08-23 11:55:00'),(1692791700619,0,0,82001,0,0,1692791694355,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700642,0,0,82001,0,0,1692791694042,5,'默认配置(上传测试用例时自动生成)','endTime: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700712,0,0,82001,0,0,1692791694458,5,'默认配置(上传测试用例时自动生成)','codes: []\ncodes/0: ORDER_IN(undefined, null)\ncodes/1: ORDER_IN(undefined, null)\ncodes/2: ORDER_IN(undefined, null)\ncodes/3: ORDER_IN(undefined, null)\ncodes/4: ORDER_IN(undefined, null)','2023-08-23 11:55:00'),(1692791700731,0,0,82001,0,0,1692791694828,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700756,0,0,82001,0,0,1692791694828,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700768,0,0,82001,0,0,1692791694458,5,'默认配置(上传测试用例时自动生成)','codes: []\ncodes/0: RANDOM_IN(undefined, null)\ncodes/1: RANDOM_IN(undefined, null)\ncodes/2: RANDOM_IN(undefined, null)\ncodes/3: RANDOM_IN(undefined, null)\ncodes/4: RANDOM_IN(undefined, null)\ncodes/5: RANDOM_IN(undefined, null)\ncodes/6: RANDOM_IN(undefined, null)\ncodes/7: RANDOM_IN(undefined, null)\ncodes/8: RANDOM_IN(undefined, null)','2023-08-23 11:55:00'),(1692791700849,0,0,82001,0,0,1692791694893,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791700852,0,0,82001,0,0,1692791694893,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:00'),(1692791702946,0,0,82001,0,0,1692791695264,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791702961,0,0,82001,0,0,1692791695264,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791702984,0,0,82001,0,0,1692791695726,5,'默认配置(上传测试用例时自动生成)','date: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791702985,0,0,82001,0,0,1692791695726,5,'默认配置(上传测试用例时自动生成)','date: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703013,0,0,82001,0,0,1692791696225,5,'默认配置(上传测试用例时自动生成)','file: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703031,0,0,82001,0,0,1692791696160,5,'默认配置(上传测试用例时自动生成)','agent: RANDOM_IN(undefined, null, \"\")\nreqDtos: RANDOM_IN(undefined, null)\nuserId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:03'),(1692791703131,0,0,82001,0,0,1692791696287,5,'默认配置(上传测试用例时自动生成)','userId: RANDOM_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:03'),(1692791703136,0,0,82001,0,0,1692791696225,5,'默认配置(上传测试用例时自动生成)','file: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703171,0,0,82001,0,0,1692791696160,5,'默认配置(上传测试用例时自动生成)','agent: ORDER_IN(undefined, null, \"\")\nreqDtos: ORDER_IN(undefined, null)\nuserId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:03'),(1692791703185,0,0,82001,0,0,1692791696287,5,'默认配置(上传测试用例时自动生成)','userId: ORDER_IN(undefined, null, 1)\n// 可替代上面的 serId: RANDOM_INT(1, 10)','2023-08-23 11:55:03'),(1692791703777,0,0,82001,0,0,1692791698439,5,'默认配置(上传测试用例时自动生成)','sort: ORDER_IN(undefined, null, \"\", \"DESC\")\ntarget: ORDER_IN(undefined, null, \"\")\ntype: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703785,0,0,82001,0,0,1692791697415,5,'默认配置(上传测试用例时自动生成)','beginDate: RANDOM_IN(undefined, null, \"\")\nendDate: RANDOM_IN(undefined, null, \"\")\nrequestId: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703800,0,0,82001,0,0,1692791698439,5,'默认配置(上传测试用例时自动生成)','sort: RANDOM_IN(undefined, null, \"\", \"DESC\")\ntarget: RANDOM_IN(undefined, null, \"\")\ntype: RANDOM_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692791703820,0,0,82001,0,0,1692791697415,5,'默认配置(上传测试用例时自动生成)','beginDate: ORDER_IN(undefined, null, \"\")\nendDate: ORDER_IN(undefined, null, \"\")\nrequestId: ORDER_IN(undefined, null, \"\")','2023-08-23 11:55:03'),(1692868332864,0,0,82001,0,0,1692868332493,5,'默认配置(上传测试用例时自动生成)','id: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-24 09:12:12'),(1692868332886,0,0,82001,0,0,1692868332493,5,'默认配置(上传测试用例时自动生成)','id: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 d: RANDOM_INT(1, 820010)','2023-08-24 09:12:12'),(1693396504086,0,0,1693396359887,0,0,1693396503985,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2023-08-30 11:55:04'),(1693620205033,0,0,82001,0,0,1546414179257,1,'随机配置 2023-09-02 10:03','','2023-09-02 02:03:25'),(1693732468012,0,0,88888,0,0,1693732467768,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2023-09-03 09:14:28'),(1696680836396,0,0,82001,0,0,1693905185531,1,'/test','','2023-10-07 12:13:56'),(1697699777624,0,0,82001,0,0,1693905185531,1,'随机配置 2023-10-19 15:16','','2023-10-19 07:16:17'),(1700623901751,0,0,82001,0,0,1683536365154,2,'随机配置 2023-11-22 11:31','','2023-11-22 03:31:41'),(1700623915967,0,0,82001,0,0,1683536365154,1,'随机配置 2023-11-22 11:31','','2023-11-22 03:31:55'),(1700623921701,0,0,82001,0,0,1683536365154,1,'随机配置 2023-11-22 11:31','','2023-11-22 03:32:01'),(1700909801376,0,0,82001,0,0,1700909801216,1,'默认配置','methodArgs/0/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\') // 顺序取值\nmethodArgs/0/value: RANDOM_IN(1, 0.1, -10, 9.99, null) // 随机取值\n\nmethodArgs/1/type: ORDER_IN(\'long\', \'double\', \'Number\', \'int\', \'Float\') // 顺序取值\nmethodArgs/1/value: ORDER_INT(-10, 100) // 顺序整数\n\n// 从数据库随机取值  methodArgs/1/value: RANDOM_DB(0, 1000, \'Random\', \'count\')\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2023-11-25 10:56:41'),(1701328826994,0,0,82001,0,0,1564907459034,1,'随机配置 2023-11-30 15:20','','2023-11-30 07:20:27'),(1702528495720,1680202324833,0,82001,0,0,1546904337054,1,'id,to..','Comment/@column: \"id,toId:parentId\"','2023-12-14 04:34:56'),(1702957508472,1680201155217,0,82001,0,0,1564483634846,1,'true, null, CONTACT, undefined, ALL','format: true\nversion: NaN\n@role: \"CONTACT\"\n@explain: null\n@cache: \"ALL\"','2023-12-19 03:45:08'),(1702957514329,1680201155217,0,82001,0,0,1564483634846,1,'undefined, null, LOGIN, true, 0','format: null\nversion: NaN\n@role: \"LOGIN\"\n@explain: true\n@cache: 0','2023-12-19 03:45:14'),(1702957522478,1680201155217,0,82001,0,0,1564483634846,1,'false, null, CIRCLE, undefined, RAM','format: false\nversion: NaN\n@role: \"CIRCLE\"\n@explain: null\n@cache: \"RAM\"','2023-12-19 03:45:22'),(1702957676037,1680196799707,0,82001,0,0,1559995734352,1,'null, 82002','User/id: NaN\nUser/@value: 82002','2023-12-19 03:47:56'),(1702957770899,1680196799707,0,82001,0,0,1559995734352,1,'null, 82001','User/id: NaN\nUser/@value: 82001','2023-12-19 03:49:31'),(1702957775416,1680196799707,0,82001,0,0,1559995734352,1,'null, 82002','User/id: NaN\nUser/@value: 82002','2023-12-19 03:49:35'),(1702957778636,1680196799707,0,82001,0,0,1559995734352,1,'null, 82002','User/id: NaN\nUser/@value: 82002','2023-12-19 03:49:39'),(1702957785759,1680196799707,0,82001,0,0,1559995734352,1,'null, 82002','User/id: NaN\nUser/@value: 82002','2023-12-19 03:49:46'),(1703475692658,1687626343025,0,82001,0,0,1687626342940,1,'undefined','classArgs: undefined','2023-12-25 03:41:32'),(1703475693997,1687626343025,0,82001,0,0,1687626342940,1,'null','classArgs: null','2023-12-25 03:41:34'),(1703475704007,1687626343025,0,82001,0,0,1687626342940,1,'[]','classArgs: []','2023-12-25 03:41:44'),(1703476393851,0,0,82001,0,0,1687626342940,20,'ORDER_INT','classArgs/0: ORDER_INT(-10, 100)\n','2023-12-25 03:53:13'),(1703476404774,1703476393851,0,82001,0,0,1687626342940,1,'-10','classArgs/0: -10','2023-12-25 03:53:24'),(1703476406499,1703476393851,0,82001,0,0,1687626342940,1,'-2','classArgs/0: -2','2023-12-25 03:53:26'),(1703476406968,1703476393851,0,82001,0,0,1687626342940,1,'-1','classArgs/0: -1','2023-12-25 03:53:26'),(1703476456480,0,0,82001,0,0,1687626342940,5,'RANDOM_INT','classArgs/0: RANDOM_INT(1, 100)\n','2023-12-25 03:54:16'),(1703476468873,1703476456480,0,82001,0,0,1687626342940,1,'84','classArgs/0: 84','2023-12-25 03:54:28'),(1703476470856,1703476456480,0,82001,0,0,1687626342940,1,'17','classArgs/0: 17','2023-12-25 03:54:30'),(1703476471913,1703476456480,0,82001,0,0,1687626342940,1,'75','classArgs/0: 75','2023-12-25 03:54:31'),(1703476477540,1703476393851,0,82001,0,0,1687626342940,1,'3','classArgs/0: 3','2023-12-25 03:54:37'),(1703476478874,1703476393851,0,82001,0,0,1687626342940,1,'6','classArgs/0: 6','2023-12-25 03:54:38'),(1703476482738,1703476393851,0,82001,0,0,1687626342940,1,'0','classArgs/0: 0','2023-12-25 03:54:42'),(1703476483581,1703476393851,0,82001,0,0,1687626342940,1,'1','classArgs/0: 1','2023-12-25 03:54:43'),(1703476485176,1703476393851,0,82001,0,0,1687626342940,1,'-1','classArgs/0: -1','2023-12-25 03:54:45'),(1704192205539,0,0,82003,0,0,1704192205411,1,'默认配置(上传测试用例时自动生成)','type: ORDER_INT(0, 10)\n// 可替代上面的 type: RANDOM_INT(0, 100)\nphone: ORDER_IN(undefined, null, \"\", \"13000082003\")\npassword: ORDER_IN(undefined, null, \"\", \"123456\")\nremember: ORDER_IN(undefined, null, false, true)','2024-01-02 10:43:25'),(1704192205572,0,0,82003,0,0,1704192205411,1,'默认配置(上传测试用例时自动生成)','type: RANDOM_INT(0, 10)\n// 可替代上面的 type: RANDOM_INT(0, 100)\nphone: RANDOM_IN(undefined, null, \"\", \"13000082003\")\npassword: RANDOM_IN(undefined, null, \"\", \"123456\")\nremember: RANDOM_IN(undefined, null, false, true)','2024-01-02 10:43:25'),(1704192205573,0,0,82002,0,0,1704192205412,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2024-01-17 07:25:49'),(1704192205574,0,0,82002,0,0,1704192205413,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2024-01-17 07:28:00'),(1704192205575,0,0,82002,0,0,1704192205414,1,'默认配置','User/id: RANDOM_INT(82001, 82020) // 随机整数\n[]/count: RANDOM_IN(5, 10, \'s\', false, [], {}) // 随机取值\n[]/page: Math.round(5*Math.random()) // 通过代码来自定义\n@explain: ORDER_IN(true, false) // 顺序取值\n// 从数据库随机取值  []/Comment/toId: RANDOM_DB()\n\n// 回车智能生成。注释可省略，未省略则前面必须空格；清空文本内容可查看规则。\n\n// ## 快捷键\n// Ctrl + I 或 Command + I 格式化文本，清除所有注释和无效空格、换行等；\n// Ctrl + / 或 Command + / 对选中行 新增行注释 或 取消行注释；\n// Ctrl + D 或 Command + D 删除 选中行；\n// Ctrl + S 或 Command + S 保存当前请求；\n                        ','2024-01-17 07:32:57'),(1705485879188,0,0,82001,0,0,1564907459034,1,'随机配置 2024-01-17 18:04','','2024-01-17 10:04:39'),(1705485879245,1679391631736,0,82001,0,0,1678871646344,1,'^[A-Za-z]+$, Adt','methodArgs/0: \"^[A-Za-z]+$\"\nmethodArgs/1: \"Adt\"','2024-01-19 10:34:43'),(1705485879246,1679391631736,0,82001,0,0,1678871646344,1,'^[a-z]+$, a','methodArgs/0: \"^[a-z]+$\"\nmethodArgs/1: \"a\"','2024-01-19 10:34:45'),(1705485879247,1680101356238,0,82001,0,0,1546414155879,1,'5, 1','[]/count: 5\n[]/page: 1','2024-01-22 01:59:01'),(1705485879248,1680101356238,0,82001,0,0,1546414155879,1,'a, 2','[]/count: \"a\"\n[]/page: 2','2024-01-22 01:59:36'),(1705485879249,1680101356238,0,82001,0,0,1546414155879,1,'3, 3','[]/count: 3\n[]/page: 3','2024-01-22 01:59:44'),(1705485879250,1680101356238,0,82001,0,0,1546414155879,1,'5, 10','[]/count: 5\n[]/page: 10','2024-01-22 01:59:48'),(1705485879251,1680101356238,0,82001,0,0,1546414155879,1,'true, -1','[]/count: true\n[]/page: -1','2024-01-22 02:00:07'),(1705485879256,0,0,82001,0,0,1703475320972,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(-200, 0)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1\")\n\n\nMethod/methodArgs/3/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/3/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/3/value/sort()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\", \"n\")\n\nMethod/methodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(-200, 0)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879257,0,0,82001,0,0,1703475320972,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(-200, 0)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: ORDER_IN(undefined, null)\nMethod/methodArgs/3/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1\")\n\n\nMethod/methodArgs/3/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/3/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/3/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/3/value/append(L,L)/return: ORDER_IN(undefined, null, \"\", \"n\")\n\nMethod/methodArgs/3/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getId()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getData()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(-200, 0)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1<D>\")\n\n\nMethod/genericMethodArgs/3/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/3/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/3/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: ORDER_IN(undefined, null, \"\", \"n\")\n\nMethod/genericMethodArgs/3/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879258,0,0,82001,0,0,1703475320975,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(-900, 0)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/methodArgs/2/value/getId()/return: RANDOM_INT(0, 100)\n\nMethod/methodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/methodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(-900, 0)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/genericMethodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/genericMethodArgs/2/value/getId()/return: RANDOM_INT(0, 100)\n\nMethod/genericMethodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/2/value/sort()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879259,0,0,82001,0,0,1703475320975,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(-900, 0)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/methodArgs/2/value/getId()/return: RANDOM_INT(0, 100)\n\nMethod/methodArgs/2/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/2/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(-900, 0)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/genericMethodArgs/2/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/genericMethodArgs/2/value/getId()/return: RANDOM_INT(0, 100)\n\nMethod/genericMethodArgs/2/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/2/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getData()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879260,0,0,82001,0,0,1703475320974,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"findBean\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestBean[]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0/id: RANDOM_IN(undefined, null, 99)\n// 可替代上面的 Method/genericMethodArgs/0/value/0/id: RANDOM_INT(1, 990)\nMethod/genericMethodArgs/0/value/0/name: RANDOM_IN(undefined, null, \"\", \"k\")\nMethod/genericMethodArgs/0/value/0/time: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/0/value/0/tagList: []\nMethod/genericMethodArgs/0/value/0/tagList/0: RANDOM_IN(undefined, null, \"\", \"ZVK\")\nMethod/genericMethodArgs/0/value/0/tagList/1: RANDOM_IN(undefined, null, \"\")\nMethod/genericMethodArgs/0/value/0/tagList/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/tagList/12: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/timeAnnotations: []\nMethod/genericMethodArgs/0/value/0/classAnnotations: []\nMethod/genericMethodArgs/0/value/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-600, 0)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestBean\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestBean\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"findBean\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879261,0,0,82001,0,0,1703475320973,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"setPoint\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Object[][]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: []\nMethod/methodArgs/0/value/0/0: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/2: ORDER_IN(undefined, null)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"int\")\nMethod/methodArgs/1/value: RANDOM_INT(-100, 0)\nMethod/genericMethodArgs: []\nMethod/type: ORDER_IN(undefined, null)\nMethod/genericType: ORDER_IN(undefined, null)\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"setPoint\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879262,0,0,82001,0,0,1703475320973,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"setPoint\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Object[][]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0: []\nMethod/genericMethodArgs/0/value/0/0: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1: []\nMethod/genericMethodArgs/0/value/1/0: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/1/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"int\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-100, 0)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"int\")\nMethod/genericMethodArgs/2/value: RANDOM_INT(0, 10)\n// 可替代上面的 Method/genericMethodArgs/2/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null)\nMethod/genericType: RANDOM_IN(undefined, null)\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"setPoint\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879263,0,0,82001,0,0,1703475320976,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/0/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/1/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2\")\n\n\nMethod/methodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\")\n\nMethod/methodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/0/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/1/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\n\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\")\n\nMethod/genericMethodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879264,0,0,82001,0,0,1703475320979,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879265,0,0,82001,0,0,1703475320979,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879266,0,0,82001,0,0,1703475320977,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879267,0,0,82001,0,0,1703475320977,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/12: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879268,0,0,82001,0,0,1703475320978,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879269,0,0,82001,0,0,1703475320978,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879270,0,0,82001,0,0,1703475320976,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/0/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/0/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/1/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\n\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: ORDER_IN(undefined, null, \"\")\n\nMethod/genericMethodArgs/3/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/11: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:38'),(1705485879271,0,0,82001,0,0,1703475320981,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 10)\n// 可替代上面的 Method/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 10)\n// 可替代上面的 Method/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879272,0,0,82001,0,0,1703475320980,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-726.2424, 0, 6)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-726.2424, 0, 6)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879273,0,0,82001,0,0,1703475320981,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: ORDER_INT(0, 10)\n// 可替代上面的 Method/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: ORDER_INT(0, 10)\n// 可替代上面的 Method/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879274,0,0,82001,0,0,1703475320980,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-726.2424, 0, 6)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-726.2424, 0, 6)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879275,0,0,82001,0,0,1703475320982,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879276,0,0,82001,0,0,1703475320983,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879277,0,0,82001,0,0,1703475320983,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/11: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879278,0,0,82001,0,0,1703475320987,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879279,0,0,82001,0,0,1703475320986,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 7)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-733.5608, 0, 6)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 7)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-733.5608, 0, 6)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879280,0,0,82001,0,0,1703475320986,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 7)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-733.5608, 0, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 7)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-733.5608, 0, 6)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879281,0,0,82001,0,0,1703475320985,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879282,0,0,82001,0,0,1703475320984,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sort\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: RANDOM_INT(0, 100)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/0/value/1: ORDER_INT(0, 10)\n// 可替代上面的 Method/genericMethodArgs/0/value/1: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/0/value/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sort\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879283,0,0,82001,0,0,1703475320984,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sort\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: RANDOM_INT(0, 100)\nMethod/methodArgs/0/value/1: RANDOM_INT(0, 10)\n// 可替代上面的 Method/methodArgs/0/value/1: RANDOM_INT(0, 100)\nMethod/methodArgs/0/value/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sort\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879284,0,0,82001,0,0,1703475320985,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879285,0,0,82001,0,0,1703475320988,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:39'),(1705485879286,0,0,82001,0,0,1703475320982,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879287,0,0,82001,0,0,1703475320992,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879288,0,0,82001,0,0,1703475320992,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879289,0,0,82001,0,0,1703475320987,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879290,0,0,82001,0,0,1703475320993,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(-521.6109389612806, 0, 16)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-521.6109389612806, 0, 16)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879291,0,0,82001,0,0,1703475320990,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 1, 16)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 1, 16)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879292,0,0,82001,0,0,1703475320990,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 1, 16)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 1, 16)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879293,0,0,82001,0,0,1703475320993,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(-521.6109389612806, 0, 16)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-521.6109389612806, 0, 16)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879294,0,0,82001,0,0,1703475320991,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879295,0,0,82001,0,0,1703475320994,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-523.25935, 0, 7)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-523.25935, 0, 7)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879296,0,0,82001,0,0,1703475320994,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-523.25935, 0, 7)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-523.25935, 0, 7)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/12: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879297,0,0,82001,0,0,1703475320995,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879298,0,0,82001,0,0,1703475320989,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879299,0,0,82001,0,0,1703475320989,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879300,0,0,82001,0,0,1703475320991,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879301,0,0,82001,0,0,1703475320995,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879302,0,0,82001,0,0,1703475320988,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java,Kotlin,Go\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 03:18:40'),(1705485879303,0,0,82001,0,0,1703475320998,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"setPoint\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Object[][]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: []\nMethod/methodArgs/0/value/0/0: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/2: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/3: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/5: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/6: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/0/7: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1: []\nMethod/methodArgs/0/value/1/0: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1/2: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1/3: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/1/5: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2: []\nMethod/methodArgs/0/value/2/0: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/2: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/3: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/5: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2/6: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3: []\nMethod/methodArgs/0/value/3/0: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3/2: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3/3: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/5: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/6: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/7: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/8: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/9: ORDER_IN(undefined, null)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"int\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"int\")\nMethod/methodArgs/2/value: RANDOM_INT(0, 100)\nMethod/methodArgs/3/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/methodArgs/12: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Object[][]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0: []\nMethod/genericMethodArgs/0/value/0/0: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/0/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"int\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"int\")\nMethod/genericMethodArgs/2/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/3/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null)\nMethod/genericType: ORDER_IN(undefined, null)\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"setPoint\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879304,0,0,82001,0,0,1703475320996,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1\")\n\n\nMethod/methodArgs/3/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/3/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/3/value/sort()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\")\n\nMethod/methodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1<D>\")\n\n\nMethod/genericMethodArgs/3/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/3/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/3/value/sort()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\")\n\nMethod/genericMethodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/11: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879305,0,0,82001,0,0,1703475320997,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/methodArgs/2/value/getId()/return: RANDOM_INT(-900, 0)\n\nMethod/methodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/genericMethodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/genericMethodArgs/2/value/getId()/return: RANDOM_INT(-900, 0)\n\nMethod/genericMethodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/2/value/sort()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"Long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879306,0,0,82001,0,0,1703475320996,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: ORDER_IN(undefined, null)\nMethod/methodArgs/3/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1\")\n\n\nMethod/methodArgs/3/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/3/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/3/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getData()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/3/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/3/value/append(L,L)/return: ORDER_IN(undefined, null, \"\")\n\nMethod/methodArgs/3/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value/getId()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback1<D>\")\n\n\nMethod/genericMethodArgs/3/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/3/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/3/value/sort()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: ORDER_IN(undefined, null, \"\")\n\nMethod/genericMethodArgs/3/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879307,0,0,82001,0,0,1703475320997,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/2/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/methodArgs/2/value/getId()/return: RANDOM_INT(-900, 0)\n\nMethod/methodArgs/2/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestInterface\")\n\n\nMethod/genericMethodArgs/2/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getData()/return: ORDER_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/genericMethodArgs/2/value/getId()/return: RANDOM_INT(-900, 0)\n\nMethod/genericMethodArgs/2/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/2/value/sort()/return: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/12: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879308,0,0,82001,0,0,1703475320999,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback\")\n\n\nMethod/methodArgs/2/value/currentTime()/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/2/value/currentTime()/return: RANDOM_INT(0, 100)\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/sort()/type: ORDER_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: ORDER_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getData()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/2/value/getA()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getA()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/2/value/getB()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getB()/return: ORDER_IN(undefined, null)\n\nMethod/methodArgs/2/value/append(L,L)/type: ORDER_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/2/value/append(L,L)/return: ORDER_IN(undefined, null, \"\", \"FODT\")\n\nMethod/methodArgs/2/value/getId()/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getId()/return: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879309,0,0,82001,0,0,1703475320999,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback\")\n\n\nMethod/methodArgs/2/value/currentTime()/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/2/value/currentTime()/return: RANDOM_INT(0, 100)\n\nMethod/methodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/methodArgs/2/value/sort()/return: RANDOM_IN(undefined, null, false, true)\n\nMethod/methodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/2/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/2/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/methodArgs/2/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/methodArgs/2/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\", \"FODT\")\n\nMethod/methodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value/getId()/return: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback\")\n\n\nMethod/genericMethodArgs/2/value/currentTime()/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/2/value/currentTime()/return: RANDOM_INT(0, 100)\n\nMethod/genericMethodArgs/2/value/minusAsId(long,long)/callback: RANDOM_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/sort()/type: RANDOM_IN(undefined, null, \"\", \"Boolean\")\nMethod/genericMethodArgs/2/value/sort()/return: RANDOM_IN(undefined, null, false, true)\n\nMethod/genericMethodArgs/2/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/2/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/2/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\", \"FODT\")\n\nMethod/genericMethodArgs/2/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/2/value/getId()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879310,0,0,82001,0,0,1703475320998,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"setPoint\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Object[][]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: []\nMethod/methodArgs/0/value/0/0: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/0/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1: []\nMethod/methodArgs/0/value/1/0: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/1/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"int\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"int\")\nMethod/methodArgs/2/value: RANDOM_INT(0, 100)\nMethod/methodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/3/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/type: RANDOM_IN(undefined, null)\nMethod/genericType: RANDOM_IN(undefined, null)\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"setPoint\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879311,0,0,82001,0,0,1703475321001,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/0/value: ORDER_IN(undefined, null)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/1/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/0/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/1/value: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2/type: ORDER_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879312,0,0,82001,0,0,1703475321000,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"findBean\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestBean[]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/type: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestBean\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestBean\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"findBean\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879313,0,0,82001,0,0,1703475321001,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/0/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/1/value: RANDOM_IN(undefined, null)\nMethod/methodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/methodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/0/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"L\")\nMethod/genericMethodArgs/1/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2/type: RANDOM_IN(undefined, null, \"\", \"D\")\nMethod/genericMethodArgs/2/value: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\n\n\nMethod/genericMethodArgs/3/value/getData()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getData()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getA()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getA()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/getB()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getB()/return: RANDOM_IN(undefined, null)\n\nMethod/genericMethodArgs/3/value/append(L,L)/type: RANDOM_IN(undefined, null, \"\", \"String\")\nMethod/genericMethodArgs/3/value/append(L,L)/return: RANDOM_IN(undefined, null, \"\")\n\nMethod/genericMethodArgs/3/value/getId()/type: RANDOM_IN(undefined, null, \"\", \"Object\")\nMethod/genericMethodArgs/3/value/getId()/return: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/12: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil$Callback2<L, D>\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"computeAsync\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879314,0,0,82001,0,0,1703475321002,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879315,0,0,82001,0,0,1703475321003,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879316,0,0,82001,0,0,1703475321004,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 13)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 13)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879317,0,0,82001,0,0,1703475321004,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 13)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 13)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879318,0,0,82001,0,0,1703475321005,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"minus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/11: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879319,0,0,82001,0,0,1703475321003,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(-800, 0)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879320,0,0,82001,0,0,1703475321006,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-720.22963, 0, 7)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-720.22963, 0, 7)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879321,0,0,82001,0,0,1703475321006,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(-720.22963, 0, 7)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(-720.22963, 0, 7)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:16'),(1705485879322,0,0,82001,0,0,1703475321007,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"multiply\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(-994.9995159291578, 0, 15)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-994.9995159291578, 0, 15)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879323,0,0,82001,0,0,1703475321002,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879324,0,0,82001,0,0,1703475321007,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"multiply\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(-994.9995159291578, 0, 15)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-994.9995159291578, 0, 15)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/9: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"multiply\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879325,0,0,82001,0,0,1703475321005,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"minus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/methodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 5)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"minus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879326,0,0,82001,0,0,1703475321008,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879327,0,0,82001,0,0,1703475321008,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879328,0,0,82001,0,0,1703475321012,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-6.892422600000001, 0, 9)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/methodArgs/11: RANDOM_IN(undefined, null)\nMethod/methodArgs/12: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-6.892422600000001, 0, 9)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879329,0,0,82001,0,0,1703475321012,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-6.892422600000001, 0, 9)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-6.892422600000001, 0, 9)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879330,0,0,82001,0,0,1703475321009,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"plus\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879331,0,0,82001,0,0,1703475321009,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"plus\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"plus\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879332,0,0,82001,0,0,1703475321011,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879333,0,0,82001,0,0,1703475321010,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879334,0,0,82001,0,0,1703475321011,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/methodArgs/11: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879335,0,0,82001,0,0,1703475321013,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 5)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879336,0,0,82001,0,0,1703475321013,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 5)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 5)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/7: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879337,0,0,82001,0,0,1703475321016,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879338,0,0,82001,0,0,1703475321016,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 14)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 14)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:17'),(1705485879339,0,0,82001,0,0,1703475321014,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879340,0,0,82001,0,0,1703475321017,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/1/value: RANDOM_INT(0, 100)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879341,0,0,82001,0,0,1703475321010,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sqrt\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/methodArgs/1: ORDER_IN(undefined, null)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/methodArgs/8: ORDER_IN(undefined, null)\nMethod/methodArgs/9: ORDER_IN(undefined, null)\nMethod/methodArgs/10: ORDER_IN(undefined, null)\nMethod/methodArgs/11: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sqrt\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879342,0,0,82001,0,0,1703475321014,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"long\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879343,0,0,82001,0,0,1703475321015,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879344,0,0,82001,0,0,1703475321017,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/methodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/0/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"long\")\nMethod/genericMethodArgs/1/value: RANDOM_INT(0, 100)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879345,0,0,82001,0,0,1703475321018,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"pow\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-456.68244, 0, 7)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879346,0,0,82001,0,0,1703475321018,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"pow\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(-456.68244, 0, 7)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/methodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(-456.68244, 0, 7)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"pow\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879347,0,0,82001,0,0,1703475321015,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"Number\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 6)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/10: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/11: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879348,0,0,82001,0,0,1703475321020,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"sort\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: RANDOM_INT(-100, 0)\nMethod/methodArgs/0/value/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/0/value/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/1: RANDOM_IN(undefined, null)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0: RANDOM_INT(-100, 0)\nMethod/genericMethodArgs/0/value/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/5: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/6: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/7: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/8: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/9: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/0/value/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/1: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"int[]\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"sort\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879349,0,0,82001,0,0,1703475321019,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"divide\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/2: ORDER_IN(undefined, null)\nMethod/methodArgs/3: ORDER_IN(undefined, null)\nMethod/methodArgs/4: ORDER_IN(undefined, null)\nMethod/methodArgs/5: ORDER_IN(undefined, null)\nMethod/methodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/1/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"double\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879350,0,0,82001,0,0,1703475321019,5,'默认配置(上传测试用例时自动生成)','Method/userId: RANDOM_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: RANDOM_IN(undefined, null, \"\", \"Java\")\nMethod/package: RANDOM_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: RANDOM_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: RANDOM_IN(undefined, null, \"\", \"divide\")\nMethod/this: RANDOM_IN(undefined, null)\nMethod/constructor: RANDOM_IN(undefined, null)\nMethod/classArgs: RANDOM_IN(undefined, null)\nMethod/genericClassArgs: RANDOM_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/methodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/methodArgs/2: RANDOM_IN(undefined, null)\nMethod/methodArgs/3: RANDOM_IN(undefined, null)\nMethod/methodArgs/4: RANDOM_IN(undefined, null)\nMethod/methodArgs/5: RANDOM_IN(undefined, null)\nMethod/methodArgs/6: RANDOM_IN(undefined, null)\nMethod/methodArgs/7: RANDOM_IN(undefined, null)\nMethod/methodArgs/8: RANDOM_IN(undefined, null)\nMethod/methodArgs/9: RANDOM_IN(undefined, null)\nMethod/methodArgs/10: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/0/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/1/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericMethodArgs/1/value: RANDOM_NUM(0, 100, 15)\nMethod/genericMethodArgs/2: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/3: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/4: RANDOM_IN(undefined, null)\nMethod/genericMethodArgs/5: RANDOM_IN(undefined, null)\nMethod/type: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/genericType: RANDOM_IN(undefined, null, \"\", \"double\")\nMethod/static: RANDOM_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: RANDOM_IN(undefined, null)\nMethod/ui: RANDOM_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: RANDOM_IN(undefined, null)\nMethod/genericExceptions: RANDOM_IN(undefined, null)\nMethod/detail: RANDOM_IN(undefined, null, \"\", \"divide\")\n\nTestRecord/randomId: RANDOM_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: RANDOM_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: RANDOM_IN(undefined, null)\nTestRecord/response: RANDOM_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879351,0,0,82001,0,0,1703475321020,5,'默认配置(上传测试用例时自动生成)','Method/userId: ORDER_IN(undefined, null, 82001)\n// 可替代上面的 Method/userId: RANDOM_INT(1, 820010)\nMethod/language: ORDER_IN(undefined, null, \"\", \"Java\")\nMethod/package: ORDER_IN(undefined, null, \"\", \"unitauto.test\")\nMethod/class: ORDER_IN(undefined, null, \"\", \"TestUtil\")\nMethod/method: ORDER_IN(undefined, null, \"\", \"sort\")\nMethod/this: ORDER_IN(undefined, null)\nMethod/constructor: ORDER_IN(undefined, null)\nMethod/classArgs: ORDER_IN(undefined, null)\nMethod/genericClassArgs: ORDER_IN(undefined, null)\nMethod/methodArgs: []\nMethod/methodArgs/0/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/methodArgs/0/value: []\nMethod/methodArgs/0/value/0: RANDOM_INT(-100, 0)\nMethod/methodArgs/0/value/1: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/2: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/3: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/4: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/5: ORDER_IN(undefined, null)\nMethod/methodArgs/0/value/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs: []\nMethod/genericMethodArgs/0/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/genericMethodArgs/0/value: []\nMethod/genericMethodArgs/0/value/0: RANDOM_INT(-100, 0)\nMethod/genericMethodArgs/0/value/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/0/value/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/1: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/2: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/3: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/4: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/5: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/6: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/7: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/8: ORDER_IN(undefined, null)\nMethod/genericMethodArgs/9: ORDER_IN(undefined, null)\nMethod/type: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/genericType: ORDER_IN(undefined, null, \"\", \"int[]\")\nMethod/static: ORDER_INT(0, 10)\n// 可替代上面的 Method/static: RANDOM_INT(0, 100)\nMethod/timeout: ORDER_IN(undefined, null)\nMethod/ui: ORDER_INT(0, 10)\n// 可替代上面的 Method/ui: RANDOM_INT(0, 100)\nMethod/exceptions: ORDER_IN(undefined, null)\nMethod/genericExceptions: ORDER_IN(undefined, null)\nMethod/detail: ORDER_IN(undefined, null, \"\", \"sort\")\n\nTestRecord/randomId: ORDER_IN(undefined, null, 0)\n// 可替代上面的 TestRecord/randomId: RANDOM_INT(1, 0)\nTestRecord/host: ORDER_IN(undefined, null, \"\", \"unitauto.test.TestUtil.\")\nTestRecord/testAccountId: ORDER_IN(undefined, null)\nTestRecord/response: ORDER_IN(undefined, null, \"\")','2024-05-07 09:44:18'),(1705485879352,0,0,82001,1714209723275,3,1560737118846,1,'User/id: PRE_DATA(\'[]/0/User/id\')','User/id: PRE_DATA(\'[]/0/User/id\')','2024-05-26 04:47:53'),(1705485879353,0,0,82001,1714209723275,4,1511689914599,1,'Privacy/id: PRE_DATA(\'User/id\')','Privacy/id: PRE_DATA(\'User/id\')','2024-05-26 04:48:14'),(1705485879354,0,0,82001,1714655556079,13,1546414179257,1,'Moment/id: PRE_DATA(\'Moment[]/0/id\')','Moment/id: PRE_DATA(\'Moment[]/0/id\')','2024-05-26 04:49:34'),(1705485879356,0,0,82001,1716706529846,44,1511969630372,1,'Comment/momentId: PRE_ARG(\'Moment/id\')','Comment/momentId: PRE_ARG(\'Moment/id\')','2024-05-26 06:58:22'),(1705485879359,0,0,82001,1716706529846,43,1511969417633,1,'Moment/id: PRE_DATA() Moment/praiseUserIdList+: [82001] Moment/praiseUserIdList-: null','Moment/id: PRE_DATA()\nMoment/praiseUserIdList+: [82001]\nMoment/praiseUserIdList-: null','2024-05-26 07:01:12'),(1705485879360,0,0,82001,1716706529846,45,1511969630372,1,'Comment/momentId: PRE_ARG() Comment/toId: PRE_DATA(\'Comment/id\') Comment/content: \"测试回复评论\"','Comment/momentId: PRE_ARG()\nComment/toId: PRE_DATA(\'Comment/id\')\nComment/content: \"测试回复评论\"','2024-05-26 07:04:20'),(1705485879361,0,0,82001,0,0,1704192205420,1,'默认配置(上传测试用例时自动生成)','[]/Comment/momentId: ORDER_IN(undefined, null, 15)\n// 可替代上面的 []/Comment/momentId: RANDOM_INT(1, 150)','2024-05-26 07:16:34'),(1705485879362,0,0,82001,0,0,1704192205420,1,'默认配置(上传测试用例时自动生成)','[]/Comment/momentId: RANDOM_IN(undefined, null, 15)\n// 可替代上面的 []/Comment/momentId: RANDOM_INT(1, 150)','2024-05-26 07:16:34'),(1705485879365,0,0,82001,1714655556079,17,1511969630372,1,'Comment/momentId: PRE_ARG(\'Moment/id\')','Comment/momentId: PRE_ARG(\'Moment/id\')','2024-05-26 07:20:36'),(1705485879366,0,0,82001,1714655556079,46,1704192205420,1,'[]/Comment/momentId: PRE_ARG(\'Comment/momentId\')','[]/Comment/momentId: PRE_ARG(\'Comment/momentId\')','2024-05-26 07:22:28');
/*!40000 ALTER TABLE `Random` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-05-26 15:30:40
